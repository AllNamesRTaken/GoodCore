/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
  "env": {
      "browser": true,
      "es6": true
  },
  "extends": [
      "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
      "ecmaVersion": 2021,
      "project": "tsconfig.json",
      "sourceType": "script"
  },
  "plugins": [
      "eslint-plugin-import",
      "eslint-plugin-prefer-arrow",
      "@typescript-eslint",
      "@typescript-eslint/tslint"
  ],
  "root": true,
  "ignorePatterns": ["*.d.ts", "node_modules/**/*", "**/*/vctmp*"],
  "rules": {
      
      "arrow-body-style": "error",
      "arrow-parens": [
          "error",
          "always"
      ],
      "comma-dangle": "off",
      "complexity": "off",
      "constructor-super": "error",
      "curly": "off",
      "default-case": "off",
      "dot-notation": "off",
      "eqeqeq": [
          "warn",
          "always"
      ],
      "guard-for-in": "warn",
      "id-denylist": [
          "error",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
      ],
      "id-match": "error",
      "import/no-deprecated": "error",
      "import/order": "off",
      "indent": "off",
      "linebreak-style": [
          "error",
          "windows"
      ],
      "max-classes-per-file": "off",
      "max-len": [
          "off",
          {
              "code": 140
          }
      ],
      "new-parens": "error",
      "no-bitwise": "off",
      "no-caller": "error",
      "no-cond-assign": "off",
      "no-console": "off",
      "no-debugger": "error",
      "no-empty": "off",
      "no-empty-function": "off",
      "no-eval": "error",
      "no-fallthrough": "error",
      "no-invalid-this": "off",
      "no-new-wrappers": "error",
      "no-shadow": "off",
      "no-sparse-arrays": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "off",
      "no-undef-init": "error",
      "no-underscore-dangle": "off",
      "no-unsafe-finally": "error",
      "no-unused-expressions": "off",
      "no-unused-labels": "error",
      "no-use-before-define": "off",
      "no-var": "error",
      "object-shorthand": "error",
      "one-var": [
          "off",
          "never"
      ],
      "prefer-arrow/prefer-arrow-functions": "off",
      "prefer-const": "warn",
      "prefer-template": "off",
      "quote-props": "off",
      "quotes": "off",
      "radix": "warn",
      "semi": "off",
      "space-before-function-paren": [
          "off",
          {
              "named": "always",
              "anonymous": "always",
              "asyncArrow": "never"
          }
      ],
      "use-isnan": "error",
      "valid-typeof": "off"
  },
  "overrides": [
      {
          "files": ["*.js"],
          "rules": {
              "curly": "off",
          }
      },
      {
          "files": ["*.ts"],
          "extends": [
              "plugin:@typescript-eslint/recommended",
              "plugin:@typescript-eslint/recommended-requiring-type-checking",
          ],
          "rules": {
              "@typescript-eslint/adjacent-overload-signatures": "error",
              "@typescript-eslint/array-type": [
                  "error",
                  {
                      "default": "array"
                  }
              ],
              "@typescript-eslint/ban-types": "off",
              "@typescript-eslint/consistent-type-definitions": "error",
              "@typescript-eslint/dot-notation": "off",
              "@typescript-eslint/explicit-function-return-type": "off",
              "@typescript-eslint/explicit-module-boundary-types": "off",
              "@typescript-eslint/indent": [
                  "off",
                  "tab"
              ],
              "@typescript-eslint/member-delimiter-style": "off",
              "@typescript-eslint/member-ordering": "off",
              "@typescript-eslint/naming-convention": "off",
              "@typescript-eslint/no-empty-function": "off",
              "@typescript-eslint/no-empty-interface": "error",
              "@typescript-eslint/no-explicit-any": "off",
              "@typescript-eslint/no-misused-new": "error",
              "@typescript-eslint/no-namespace": "error",
              "@typescript-eslint/no-parameter-properties": "off",
              "@typescript-eslint/no-shadow": [
                  "off",
                  {
                      "hoist": "all"
                  }
              ],
              "@typescript-eslint/no-unused-expressions": "off",
              "@typescript-eslint/no-use-before-define": "off",
              "@typescript-eslint/no-var-requires": "error",
              "@typescript-eslint/prefer-for-of": "off",
              "@typescript-eslint/prefer-function-type": "error",
              "@typescript-eslint/prefer-namespace-keyword": "error",
              "@typescript-eslint/quotes": [
                  "error",
                  "double",
                  {
                      "avoidEscape": true
                  }
              ],
              "@typescript-eslint/restrict-plus-operands": "off",
              "@typescript-eslint/semi": [
                  "error",
                  "always"
              ],
              "@typescript-eslint/triple-slash-reference": [
                  "error",
                  {
                      "path": "always",
                      "types": "prefer-import",
                      "lib": "always"
                  }
              ],
              "@typescript-eslint/typedef": "off",
              "@typescript-eslint/unified-signatures": "error",
              "@typescript-eslint/tslint/config": [
                  "error",
                  {
                      "rules": {
                          "no-reserved-keywords": true,
                          "no-unsafe-any": false,
                          "prefer-method-signature": true,
                          "whitespace": [
                              true,
                              "check-branch",
                              "check-decl",
                              "check-separator",
                              "check-operator"
                          ]
                      }
                  }
              ],
              "@typescript-eslint/no-unsafe-assignment": "warn",
              "@typescript-eslint/no-unsafe-call": "warn",
              "@typescript-eslint/no-unsafe-member-access": "warn",
              "@typescript-eslint/no-unsafe-argument": "warn",
              "@typescript-eslint/no-floating-promises": "warn",
              "@typescript-eslint/no-unsafe-return": "warn",
              "prefer-const": "warn",
              "@typescript-eslint/restrict-template-expressions": "warn",
              "@typescript-eslint/consistent-type-assertions": "warn",
              "@typescript-eslint/no-misused-promises": "warn",
          }
      }
  ]
};
