{
    // Use IntelliSense to learn about possible Node.js debug attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Program",
            "program": "${workspaceRoot}\\dist\\lib\\index.js",
            "outFiles": []
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Debug Perf",
            "program": "${workspaceRoot}\\dist\\test\\Perf.js",
            "outFiles": [],
            "sourceMaps": true
        },
        // {
        //     "type": "node",
        //     "request": "attach",
        //     "name": "Attach to Process",
        //     "address": "localhost",
        //     "port": 5858,
        //     "outFiles": []
        // },
        {
            "name": "Run Jest",
            "type": "node",
            "request": "launch",
            /* Globally installed mocha */
            "program": "${workspaceRoot}/node_modules/jest/bin/jest.js",
            "stopOnEntry": false,
            /* Specify which are the file you want the runner to pick up. */
            "args": [
                "-i"
            ],
            "cwd": "${workspaceRoot}/",
            "runtimeExecutable": null,
            "env": {
                "NODE_ENV": "production"
            },
            /* If you are using Typescript and you alread have sourcemaps generated in                
             * the test folder, simple specifying this flag will give the luxry 
             * of debugging the typescript test instead of JavaScript.
             */
            "sourceMaps": true,
            /* This is the directory where your tests are located.*/
            "outFiles": [
                "${workspaceRoot}/dist/test/**/*.js"
            ]
        }
    ]
}