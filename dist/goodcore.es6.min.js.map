{"version":3,"file":"goodcore.es6.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/standard/mixins/Initable.js","lib/standard/Combinators.js","lib/MocData.js","lib/Integration.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/struct/KeyValuePair.js"],"sourcesContent":["export class CalcConst {\r\n}\r\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\r\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\r\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\r\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\r\nCalcConst.ROTATION_LOOKUP = (function () {\r\n    const lookup = [];\r\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\r\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\r\n    }\r\n    return lookup;\r\n})();\r\nexport function sign(x) {\r\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\nexport function rotationDeg(rotation) {\r\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return CalcConst.ROTATION_LOOKUP[deg];\r\n}\r\nexport function rotationRad(rotation) {\r\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\r\n}\r\nexport function closestRadianRotation(radian) {\r\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\r\n}\r\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\r\nexport function hasWindow() {\r\n    return Global.window !== null;\r\n}\r\nexport function hasConsole() {\r\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\r\n}\r\nexport function isArray(it) {\r\n    return !!(it && (it instanceof Array || typeof (it) === \"array\"));\r\n}\r\nexport function isElement(target) {\r\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\r\n}\r\nexport function isFunction(it) {\r\n    return Object.prototype.toString.call(it) === \"[object Function]\";\r\n}\r\nexport function isNumber(x) {\r\n    return x === +x;\r\n}\r\nexport function isInt(x) {\r\n    return isNumber(x) && (x === (x | 0));\r\n}\r\nexport function isString(x) {\r\n    return isNotNullOrUndefined(x) && x.constructor === String;\r\n}\r\nexport function areNullOrUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined || a === null;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotNullOrUndefined(...args) {\r\n    return !areNullOrUndefined(...args);\r\n}\r\nexport function isNullOrUndefined(arg) {\r\n    return arg === undefined || arg === null;\r\n}\r\nexport function isNotNullOrUndefined(arg) {\r\n    return !isNullOrUndefined(arg);\r\n}\r\nexport function areUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotUndefined(...args) {\r\n    return !areUndefined(...args);\r\n}\r\nexport function isUndefined(arg) {\r\n    return arg === undefined;\r\n}\r\nexport function isNotUndefined(arg) {\r\n    return !isUndefined(arg);\r\n}\r\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\r\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\r\nexport function destroy(obj) {\r\n    if (obj.constructor.prototype.destroy !== undefined) {\r\n        obj.destroy();\r\n    }\r\n    else {\r\n        setNull(obj);\r\n    }\r\n}\r\nexport function wipe(obj) {\r\n    const keys = Object.keys(obj);\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        delete obj[keys[i]];\r\n    }\r\n}\r\nexport function setNull(obj) {\r\n    if (obj.constructor.prototype.clear !== undefined) {\r\n        obj.clear();\r\n    }\r\n    else {\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            obj[key] = null;\r\n        }\r\n    }\r\n}\r\nexport function isClassOf(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\r\n}\r\nexport function isSameClass(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\r\n}\r\nexport function inherits(a, b) {\r\n    return isClassOf(a, b) && !isSameClass(a, b);\r\n}\r\nexport function equals(a, b) {\r\n    let result = a === b;\r\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\r\n        if (isArray(a)) {\r\n            const len = a.length;\r\n            let i = 0;\r\n            result = len === b.length;\r\n            if (result) {\r\n                for (; i < len; i += 1) {\r\n                    result = equals(a[i], b[i]);\r\n                    if (result === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (a.constructor.prototype.equals) {\r\n            result = a.equals(b);\r\n        }\r\n        else {\r\n            const keys = Object.keys(a);\r\n            let key = null;\r\n            result = true;\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                result = equals(a[key], b[key]);\r\n                if (!result) {\r\n                    if (isFunction(a[key])) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function isDifferent(a, b) {\r\n    return !equals(a, b);\r\n}\r\nexport function shallowCopy(obj) {\r\n    const keys = Object.keys(obj);\r\n    const result = {};\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        const key = keys[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nexport function clone(obj) {\r\n    let result;\r\n    if (!(obj instanceof Object)) {\r\n        result = obj;\r\n    }\r\n    else if (obj.constructor.prototype.clone !== undefined) {\r\n        result = obj.clone();\r\n    }\r\n    else if (isArray(obj)) {\r\n        result = deepCopy(obj);\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return new Date(obj.getTime());\r\n    }\r\n    else if (obj instanceof RegExp) {\r\n        return new RegExp(obj);\r\n    }\r\n    else {\r\n        result = new obj.constructor();\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            result[key] = clone(obj[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function cloneInto(src, target) {\r\n    if (isArray(target)) {\r\n        const arrS = src;\r\n        const arrT = target;\r\n        const len = arrS.length;\r\n        arrT.length = len;\r\n        let i = -1;\r\n        while (++i < len) {\r\n            if (arrS[i] instanceof Object) {\r\n                cloneInto(arrS[i], arrT[i]);\r\n            }\r\n            else {\r\n                arrT[i] = arrS[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            const a = src[key];\r\n            if (a instanceof Object) {\r\n                let b = target[key];\r\n                if (b === undefined || b === null) {\r\n                    if (isArray(a)) {\r\n                        b = target[key] = [];\r\n                    }\r\n                    else {\r\n                        b = target[key] = {};\r\n                    }\r\n                }\r\n                if (isDifferent(a, b)) {\r\n                    cloneInto(a, b);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = a;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function mixin(target = {}, exclude, ...sources) {\r\n    const result = target, len = sources ? sources.length : 0;\r\n    let i = 0;\r\n    sources = flatten(sources);\r\n    for (; i < len; i++) {\r\n        let src = sources[i];\r\n        if (isFunction(src)) {\r\n            src = src.prototype;\r\n        }\r\n        if (src === undefined) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        if (exclude) {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                if (exclude.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n        else {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setProperties(target, values, mapping) {\r\n    const keys = Object.keys(values);\r\n    let key;\r\n    let value;\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        key = keys[i];\r\n        value = values[key];\r\n        if (mapping && key in mapping) {\r\n            key = mapping[key];\r\n        }\r\n        if (key in target) {\r\n            target[key] = values[keys[i]];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Obj.js.map","import { clone } from \"./Obj\";\r\nimport { isArray, isNumber, isUndefined } from \"./Test\";\r\nclass ArrayState {\r\n}\r\nexport function flatten(src) {\r\n    return flattenInner(src);\r\n}\r\nfunction flattenInner(src, result = []) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (isArray(src[i])) {\r\n            flattenInner(src[i], result);\r\n        }\r\n        else {\r\n            result.push(src[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function reverse(array) {\r\n    let left = null;\r\n    let right = null;\r\n    const length = array.length;\r\n    for (left = 0; left < length / 2; left += 1) {\r\n        right = length - 1 - left;\r\n        const temporary = array[left];\r\n        array[left] = array[right];\r\n        array[right] = temporary;\r\n    }\r\n    return array;\r\n}\r\nexport function concat(...arrs) {\r\n    const result = Array.prototype.concat.apply([], arrs);\r\n    return result;\r\n}\r\nexport function slice(src, from = 0, count = Infinity) {\r\n    let len = Math.min(src.length - from, count);\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    let i = -1;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i + from];\r\n    }\r\n    return result;\r\n}\r\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\r\n    let srcLen = src.length;\r\n    pos = Math.max(0, pos);\r\n    pos = Math.min(pos, srcLen);\r\n    remove = Math.max(0, remove);\r\n    remove = Math.min(remove, srcLen - pos);\r\n    let insertLen = insert.length;\r\n    let newLen = srcLen - remove + insertLen;\r\n    let delta = remove - insertLen;\r\n    if (delta < 0) {\r\n        src.length = newLen;\r\n        let i = newLen;\r\n        while (--i >= pos + remove) {\r\n            src[i] = src[i + delta];\r\n        }\r\n    }\r\n    let i = pos - 1;\r\n    while (++i < pos + insertLen) {\r\n        src[i] = insert[i - pos];\r\n    }\r\n    if (delta > 0) {\r\n        --i;\r\n        while (++i < srcLen - delta) {\r\n            src[i] = src[i + delta];\r\n        }\r\n        src.length = newLen;\r\n    }\r\n}\r\nexport function append(arr, values) {\r\n    let index = -1;\r\n    const offset = arr.length;\r\n    const length = values.length;\r\n    while (++index < length) {\r\n        arr[offset + index] = values[index];\r\n    }\r\n}\r\nexport function removeAt(arr, index) {\r\n    let result;\r\n    if (index !== -1 && index < arr.length) {\r\n        const len = arr.length;\r\n        let i = index;\r\n        result = arr[index];\r\n        while (++i < len) {\r\n            arr[i - 1] = arr[i];\r\n        }\r\n        arr.length -= 1;\r\n    }\r\n    return result;\r\n}\r\nexport function indexOfElement(src, el) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (src[i] === el) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function remove(arr, el) {\r\n    const start = indexOfElement(arr, el);\r\n    removeAt(arr, start);\r\n}\r\nexport function indexOf(src, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (fn(src[i])) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function removeOneByFn(arr, fn) {\r\n    const start = indexOf(arr, fn);\r\n    removeAt(arr, start);\r\n}\r\nexport function shallowCopy(src) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i];\r\n    }\r\n    return result;\r\n}\r\nexport function shallowCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = src[i];\r\n    }\r\n}\r\nexport function shallowFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = src[i];\r\n    }\r\n}\r\nexport function deepCopy(src) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = (clone(src[i]));\r\n    }\r\n    return result;\r\n}\r\nexport function deepCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function deepFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function filter(src, fn) {\r\n    const result = [];\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            result.push(el);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function filterInto(src, target, fn) {\r\n    let i = -1;\r\n    let j = 0;\r\n    const len = src.length;\r\n    const space = target.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            if (j < space) {\r\n                target[j++] = el;\r\n            }\r\n            else {\r\n                ++j;\r\n                target.push(el);\r\n            }\r\n        }\r\n    }\r\n    target.length = j;\r\n}\r\nexport function map(src, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = fn(src[i], i);\r\n    }\r\n    return result;\r\n}\r\nexport function mapInto(src, target, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = fn(src[i], i);\r\n    }\r\n}\r\nexport function reduce(src, fn, start) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    let acc = start;\r\n    while (++i < len) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceUntil(src, fn, test, start) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    let acc = start;\r\n    while (++i < len && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduce(src, fn, start) {\r\n    let i = src.length;\r\n    let acc = start;\r\n    while (--i >= 0) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduceUntil(src, fn, test, start) {\r\n    let i = src.length;\r\n    let acc = start;\r\n    while (--i >= 0 && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function forEach(src, fn, startIndex = 0) {\r\n    let i = startIndex - 1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function forSome(src, filter, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (filter(el, i)) {\r\n            fn(el, i);\r\n        }\r\n    }\r\n}\r\nexport function until(src, fnOrTest, fn, startIndex) {\r\n    let isCombined = isUndefined(fn) || isNumber(fn);\r\n    startIndex = isCombined ? fn : startIndex;\r\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\r\n    const len = src.length;\r\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function reverseForEach(src, fn) {\r\n    let i = src.length;\r\n    while (--i >= 0) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function reverseUntil(src, fnOrTest, fn) {\r\n    let i = src.length;\r\n    let combined = isUndefined(fn);\r\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function some(src, fn) {\r\n    let result = false;\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len && !(result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function all(src, fn) {\r\n    let result = true;\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len && (result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function insertAt(src, pos, v) {\r\n    if (pos === 0) {\r\n        src.unshift(v);\r\n    }\r\n    else if (pos > 0) {\r\n        let i = src.length;\r\n        while (--i >= pos) {\r\n            src[i + 1] = src[i];\r\n        }\r\n        src[i + 1] = v;\r\n    }\r\n}\r\nexport function binarySearch(src, cmp, closest = false) {\r\n    let lo = 0, hi = src.length - 1, mid, element;\r\n    while (lo <= hi) {\r\n        mid = ((lo + hi) >> 1);\r\n        element = src[mid];\r\n        let val = cmp(element);\r\n        if (val < 0) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (val > 0) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return closest ? lo : -1;\r\n}\r\nexport function create(length, populator) {\r\n    if (length < 0) {\r\n        length = 0;\r\n    }\r\n    let arr = new Array(length);\r\n    let i = -1;\r\n    while (++i < length) {\r\n        arr[i] = populator(i, arr);\r\n    }\r\n    return arr;\r\n}\r\n//# sourceMappingURL=Arr.js.map","import { Global } from \"./Global\";\r\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nclass UtilState {\r\n}\r\nUtilState._int = 0;\r\nexport function init(win) {\r\n    if (win !== undefined) {\r\n        Global.window = win;\r\n    }\r\n}\r\nexport function getFunctionName(fn) {\r\n    let result;\r\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\r\n        result = fn.name;\r\n    }\r\n    else {\r\n        const fnString = fn.toString();\r\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\r\n    }\r\n    return result;\r\n}\r\nexport function getFunctionCode(fn) {\r\n    let result;\r\n    const fnString = fn.toString();\r\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\r\n    return result;\r\n}\r\nexport function newUUID() {\r\n    let d = new Date().getTime();\r\n    d += Timer.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\nexport function newInt() {\r\n    return UtilState._int++;\r\n}\r\nexport function callDebugger() {\r\n    debugger;\r\n}\r\nexport function pipeOut(log, warn, error) {\r\n    if (hasConsole) {\r\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\r\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\r\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\r\n    }\r\n    else {\r\n        const console = {\r\n            log,\r\n            warn,\r\n            error\r\n        };\r\n        if (!(hasWindow())) {\r\n            Global.window = {\r\n                console\r\n            };\r\n        }\r\n        else {\r\n            Global.window.console = console;\r\n        }\r\n    }\r\n}\r\nexport function assert(assertion, message, isDebug = true) {\r\n    let result = true;\r\n    if (!assertion) {\r\n        if (hasConsole) {\r\n            result = false;\r\n            console.error(\"Assertion failed: \" + message);\r\n        }\r\n        if (isDebug) {\r\n            callDebugger();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function proxyFn(objOrClass, fnName, proxyFn) {\r\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\r\n    const fn = objOrClass[fnName];\r\n    const _superFn = function (...args) {\r\n        if (args.length !== 0) {\r\n            return fn.apply(this || objOrClass, args);\r\n        }\r\n        else {\r\n            return fn.call(this || objOrClass);\r\n        }\r\n    };\r\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\r\n}\r\nexport function loop(count, fn) {\r\n    let i = -1;\r\n    while (++i < count) {\r\n        fn(i);\r\n    }\r\n}\r\nexport function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n}\r\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\r\nexport var Sides;\r\n(function (Sides) {\r\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\r\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\r\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\r\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\r\n})(Sides || (Sides = {}));\r\nclass DomState {\r\n}\r\nDomState.Sides = Sides;\r\nDomState._window = Global.window;\r\nDomState._document = Global.window ? Global.window.document : undefined;\r\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\r\nexport function init(win) {\r\n    Global.window = win;\r\n    DomState._window = Global.window;\r\n    DomState._document = DomState._window.document;\r\n    DomState._el = DomState._document.createElement(\"div\");\r\n}\r\nexport function toArray(a) {\r\n    return Array.prototype.slice.call(a);\r\n}\r\nexport function create(html, attr) {\r\n    let result, keys, i, k, styles, styleKeys;\r\n    DomState._el.innerHTML = html;\r\n    result = DomState._el.children[0];\r\n    setAttr(result, attr);\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function outerHTML(el) {\r\n    DomState._el.appendChild(el);\r\n    const result = DomState._el.innerHTML;\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function setAttr(_el, attr) {\r\n    let el;\r\n    if (typeof (_el) === \"string\") {\r\n        el = get(_el);\r\n    }\r\n    else {\r\n        el = _el;\r\n    }\r\n    let keys, i, k, styles, styleKeys, style;\r\n    if (attr !== undefined && typeof (attr) === \"object\") {\r\n        keys = Object.keys(attr);\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"style\") {\r\n                styles = attr[keys[i]];\r\n                styleKeys = Object.keys(styles);\r\n                for (k = 0; k < styleKeys.length; k++) {\r\n                    style = styles[styleKeys[k]];\r\n                    if (typeof (style) === \"string\") {\r\n                        el.style.setProperty(styleKeys[k], style);\r\n                    }\r\n                    else {\r\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\r\n                    }\r\n                }\r\n            }\r\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\r\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\r\n            }\r\n            else {\r\n                el.setAttribute(keys[i], attr[keys[i]]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function remove(element) {\r\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\r\n}\r\nexport function replace(src, target) {\r\n    let result = target;\r\n    if (src.parentNode) {\r\n        src.parentNode.replaceChild(target, src);\r\n    }\r\n    return result;\r\n}\r\nexport function clear(element) {\r\n    let i = element.children.length;\r\n    while (i--) {\r\n        element.removeChild(element.children[i]);\r\n    }\r\n}\r\nexport function get(id) {\r\n    let result = DomState._document.getElementById(id);\r\n    if (result === null) {\r\n        switch (id) {\r\n            default:\r\n                result = DomState._document.body;\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function find(selector) {\r\n    return DomState._document.querySelector(selector);\r\n}\r\nexport function findAll(selector, root) {\r\n    return toArray((root || DomState._document).querySelectorAll(selector));\r\n}\r\nexport function children(root, selector) {\r\n    const children = toArray((root || DomState._document).children);\r\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\r\n}\r\nexport function findParent(root, selector) {\r\n    let result = root.parentElement;\r\n    while (result) {\r\n        if (is(selector, result)) {\r\n            break;\r\n        }\r\n        result = result.parentElement;\r\n    }\r\n    return result;\r\n}\r\nexport function position(el, x, y) {\r\n    el.style.top = y + \"px\";\r\n    el.style.left = x + \"px\";\r\n}\r\nexport function is(selector, element) {\r\n    let result = false;\r\n    if (element.matches) {\r\n        result = element.matches(selector);\r\n    }\r\n    else if (element.msMatchesSelector) {\r\n        result = element.msMatchesSelector(selector);\r\n    }\r\n    else if (element.webkitMatchesSelector) {\r\n        result = element.webkitMatchesSelector(selector);\r\n    }\r\n    else {\r\n        if (element.parentElement === null) {\r\n            throw new Error(\"Element has no parent\");\r\n        }\r\n        if (element.id !== \"\") {\r\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\r\n        }\r\n        else {\r\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setStylesExplicitly(element, ...styles) {\r\n    const comp = DomState._window.getComputedStyle(element);\r\n    for (const style of styles) {\r\n        element.style[style] = comp[style];\r\n    }\r\n}\r\n//# sourceMappingURL=Dom.js.map","export function Poolable(Base) {\r\n    return class extends Base {\r\n        release() {\r\n            this.__pool__.release(this);\r\n        }\r\n        initPool(pool) {\r\n            this.__pool__ = pool;\r\n        }\r\n        constructor(...args) {\r\n            super(...args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Poolable.js.map","import { setProperties } from \"../../Obj\";\r\nexport function Initable(base) {\r\n    return class extends base {\r\n        init(obj, mapping) {\r\n            setProperties(this, obj, mapping);\r\n            return this;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Initable.js.map","export function before(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            decoration.apply(this, [orgFn.name].concat(args));\r\n            const result = orgFn.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function after(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\r\n            decoration.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function around(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            let callback = () => result = orgFn.apply(this, args);\r\n            decoration.apply(this, [callback, orgFn.name].concat(args));\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function provided(condition) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            if (condition.apply(this, [orgFn.name].concat(args))) {\r\n                result = orgFn.apply(this, args);\r\n            }\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\n//# sourceMappingURL=Combinators.js.map","export var MocDataType;\r\n(function (MocDataType) {\r\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\r\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\r\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\r\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\r\n})(MocDataType || (MocDataType = {}));\r\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nexport function randomString(length = 25) {\r\n    let result = \"\";\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\r\n    }\r\n    return result;\r\n}\r\nexport function randomInt() {\r\n    return this.randomNumber() | 0;\r\n}\r\nexport function randomNumber() {\r\n    return Math.random() * 2147483647;\r\n}\r\nexport function numericArray(length, type = MocDataType.LinearInt) {\r\n    const result = new Array(length);\r\n    switch (type) {\r\n        case MocDataType.RandomInt:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomInt();\r\n            }\r\n            break;\r\n        case MocDataType.LinearFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i + 0.5;\r\n            }\r\n            break;\r\n        case MocDataType.RandomFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomNumber();\r\n            }\r\n            break;\r\n        default:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i;\r\n            }\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nexport function stringArray(arrayLength, stringLength) {\r\n    const result = new Array(arrayLength);\r\n    let i = -1;\r\n    while (++i < arrayLength) {\r\n        result[i] = this.randomString(stringLength);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=MocData.js.map","import * as Arr from \"./Arr\";\r\nimport * as Calc from \"./Calc\";\r\nimport * as Dom from \"./Dom\";\r\nimport { Global } from \"./Global\";\r\nimport * as MocData from \"./MocData\";\r\nimport * as Obj from \"./Obj\";\r\nimport { Initable } from \"./standard/mixins/Initable\";\r\nimport { Poolable } from \"./standard/mixins/Poolable\";\r\nimport { Pool } from \"./standard/Pool\";\r\nimport { Dictionary } from \"./struct/Dictionary\";\r\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\r\nimport { List } from \"./struct/List\";\r\nimport { Range2 } from \"./struct/Range2\";\r\nimport { Rect } from \"./struct/Rect\";\r\nimport { Stack } from \"./struct/Stack\";\r\nimport { Tree } from \"./struct/Tree\";\r\nimport { Vec2 } from \"./struct/Vec2\";\r\nimport * as Test from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nimport { Uri } from \"./Uri\";\r\nimport * as Util from \"./Util\";\r\nexport function integrate(alias) {\r\n    let stringAlias = false;\r\n    let objectAlias = false;\r\n    let list = [\r\n        { name: \"Arr\", object: Arr },\r\n        { name: \"Calc\", object: Calc },\r\n        { name: \"Dom\", object: Dom },\r\n        { name: \"MocData\", object: MocData },\r\n        { name: \"Obj\", object: Obj },\r\n        { name: \"Initable\", object: Initable },\r\n        { name: \"Poolable\", object: Poolable },\r\n        { name: \"Pool\", object: Pool },\r\n        { name: \"Dictionary\", object: Dictionary },\r\n        { name: \"KeyValuePair\", object: KeyValuePair },\r\n        { name: \"List\", object: List },\r\n        { name: \"Range2\", object: Range2 },\r\n        { name: \"Rect\", object: Rect },\r\n        { name: \"Stack\", object: Stack },\r\n        { name: \"Tree\", object: Tree },\r\n        { name: \"Vec2\", object: Vec2 },\r\n        { name: \"Test\", object: Test },\r\n        { name: \"Timer\", object: Timer },\r\n        { name: \"Uri\", object: Uri },\r\n        { name: \"Util\", object: Util },\r\n    ];\r\n    if (typeof (alias) === \"string\") {\r\n        Global.window[alias] = {};\r\n        stringAlias = true;\r\n    }\r\n    for (const stuff of list) {\r\n        if (stringAlias) {\r\n            Global.window[alias][stuff.name] = stuff.object;\r\n        }\r\n        else if (objectAlias) {\r\n            alias[stuff.name] = stuff.object;\r\n        }\r\n        else {\r\n            Global.window[stuff.name] = stuff.object;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Integration.js.map","import { rotationRad } from \"../Calc\";\r\nexport class Vec2Const {\r\n}\r\nVec2Const.EPSILON = 1e-8;\r\nVec2Const.IDENTITY = { x: 1, y: 1 };\r\nVec2Const.X_DIM = { x: 1, y: 0 };\r\nVec2Const.Y_DIM = { x: 0, y: 1 };\r\nexport class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.angle = this.horizontalAngle;\r\n        this.direction = this.horizontalAngle;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    create(x = 0, y = 0) {\r\n        return new (this.constructor)(x, y);\r\n    }\r\n    set(src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.x, this.y);\r\n        return result;\r\n    }\r\n    toInt() {\r\n        this.x |= 0;\r\n        this.y |= 0;\r\n        return this;\r\n    }\r\n    ceil() {\r\n        this.x = Math.ceil(this.x);\r\n        this.y = Math.ceil(this.y);\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.x += Vec2Const.EPSILON;\r\n        this.y += Vec2Const.EPSILON;\r\n        return this;\r\n    }\r\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\r\n    length() { return Math.sqrt(this.lengthSq()); }\r\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\r\n    rotate(angle) {\r\n        const rot = rotationRad(angle);\r\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\r\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\r\n        this.x = nx;\r\n        this.y = ny;\r\n        return this;\r\n    }\r\n    rotateAround(center, angle) {\r\n        return this.subtract(center).rotate(angle).add(center);\r\n    }\r\n    normalize() {\r\n        const len = this.length();\r\n        if (len === 0) {\r\n            this.x = 1;\r\n            this.y = 0;\r\n        }\r\n        else {\r\n            this.x = this.x / len;\r\n            this.y = this.y / len;\r\n        }\r\n        return this;\r\n    }\r\n    scale(vectorB) {\r\n        this.x = this.x * vectorB.x;\r\n        this.y = this.y * vectorB.y;\r\n        return this;\r\n    }\r\n    relate(vectorB) {\r\n        this.x = this.x / vectorB.x;\r\n        this.y = this.y / vectorB.y;\r\n        return this;\r\n    }\r\n    multiply(scalar) {\r\n        this.x = this.x * scalar;\r\n        this.y = this.y * scalar;\r\n        return this;\r\n    }\r\n    add(vectorB) {\r\n        this.x = this.x + vectorB.x;\r\n        this.y = this.y + vectorB.y;\r\n        return this;\r\n    }\r\n    subtract(vectorB) {\r\n        this.x = this.x - vectorB.x;\r\n        this.y = this.y - vectorB.y;\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n    equals(target) {\r\n        return this.x === target.x && this.y === target.y;\r\n    }\r\n    almostEquals(target) {\r\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\r\n    }\r\n    getNormal(isNormalized) {\r\n        const result = this.clone();\r\n        if (!isNormalized) {\r\n            result.set(this).normalize();\r\n        }\r\n        const temp = result.x;\r\n        result.x = result.y;\r\n        result.y = -temp;\r\n        return result;\r\n    }\r\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\r\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\r\n    projectOnto(vectorB) {\r\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\r\n        this.x = coeff * vectorB.x;\r\n        this.y = coeff * vectorB.y;\r\n        return this;\r\n    }\r\n    verticalAngle() { return Math.atan2(this.x, this.y); }\r\n    rotateBy(rotation) {\r\n        const angle = -this.horizontalAngle() + rotation;\r\n        return this.rotate(angle);\r\n    }\r\n    max(v) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        return this;\r\n    }\r\n    min(v) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        return this;\r\n    }\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Rect {\r\n    get isZero() {\r\n        return this.start.isZero && this.stop.isZero;\r\n    }\r\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        this.start = new Vec2(x1, y1);\r\n        this.stop = new Vec2(x2, y2);\r\n        this.endInclusive = endInclusive;\r\n    }\r\n    create(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        return new (this.constructor)(x1, y1, x2, y2, endInclusive);\r\n    }\r\n    set(src) {\r\n        this.start.set(src.start);\r\n        this.stop.set(src.stop);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.start.x, this.start.y, this.stop.x, this.stop.y);\r\n        return result;\r\n    }\r\n    toRange2(out) {\r\n        let result = out || new Range2();\r\n        let start = this.start;\r\n        let stop = this.stop;\r\n        result.pos.x = start.x;\r\n        result.pos.y = start.y;\r\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\r\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        const ow = this.stop.x - this.start.x;\r\n        const oh = this.stop.y - this.start.y;\r\n        let w = ow;\r\n        let h = oh;\r\n        w *= factor.x;\r\n        h *= factor.y;\r\n        if (keepCenter) {\r\n            this.start.x -= (w - ow) / 2;\r\n            this.start.y -= (h - oh) / 2;\r\n        }\r\n        this.stop.x = this.start.x + w;\r\n        this.stop.y = this.start.y + h;\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.start.scale(system);\r\n        this.stop.scale(system);\r\n        return this;\r\n    }\r\n    equals(rect) {\r\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\r\n    }\r\n    toInt() {\r\n        this.start.toInt();\r\n        this.stop.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.start.toDecimal();\r\n        this.stop.toDecimal();\r\n        return this;\r\n    }\r\n    area() {\r\n        const x = this.stop.x - this.start.x;\r\n        const y = this.stop.y - this.start.y;\r\n        return x * y;\r\n    }\r\n    move(vec) {\r\n        this.start.add(vec);\r\n        this.stop.add(vec);\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.start.x <= target.start.x &&\r\n            this.start.y <= target.start.y &&\r\n            this.stop.x >= target.stop.x &&\r\n            this.stop.y >= target.stop.y;\r\n    }\r\n    intersect(target) {\r\n        return this.containsPoint(target.start.x, target.start.y) ||\r\n            this.containsPoint(target.stop.x, target.stop.y) ||\r\n            this.containsPoint(target.start.x, target.stop.y) ||\r\n            this.containsPoint(target.stop.x, target.start.y);\r\n    }\r\n    containsPoint(x, y) {\r\n        return this.start.x <= x && this.stop.x >= x &&\r\n            this.start.y <= y && this.stop.y >= y;\r\n    }\r\n    zero() {\r\n        this.start.zero();\r\n        this.stop.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Range2 {\r\n    get isZero() {\r\n        return this.pos.isZero && this.size.isZero;\r\n    }\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.pos = new Vec2(x, y);\r\n        this.size = new Vec2(w, h);\r\n    }\r\n    create(x = 0, y = 0, w = 0, h = 0) {\r\n        return new (this.constructor)(x, y, w, h);\r\n    }\r\n    set(src) {\r\n        this.pos.set(src.pos);\r\n        this.size.set(src.size);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.pos.x, this.pos.y, this.size.x, this.size.y);\r\n        return result;\r\n    }\r\n    toRect(endInclusive = false, out) {\r\n        let result = out || new Rect();\r\n        result.start.x = this.pos.x,\r\n            result.start.y = this.pos.y,\r\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\r\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\r\n            result.endInclusive = endInclusive;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        let org = null;\r\n        if (keepCenter) {\r\n            org = this.size.clone();\r\n        }\r\n        this.size.scale(factor);\r\n        if (keepCenter) {\r\n            this.pos.add(org.subtract(this.size).multiply(0.5));\r\n        }\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.toRect(false).translate(system).toRange2(this);\r\n        return this;\r\n    }\r\n    toInt() {\r\n        this.pos.toInt();\r\n        this.size.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.pos.toDecimal();\r\n        this.size.toDecimal();\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.pos.x <= target.pos.x &&\r\n            this.pos.y <= target.pos.y &&\r\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\r\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\r\n    }\r\n    intersect(target) {\r\n        let s = this.toRect();\r\n        let t = target.clone().toRect();\r\n        return s.intersect(t);\r\n    }\r\n    containsPoint(vec) {\r\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\r\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\r\n    }\r\n    first(fn) {\r\n        const p = new Vec2();\r\n        const x = this.pos.x;\r\n        const y = this.pos.y;\r\n        for (let i = 0; i < this.size.x; i++) {\r\n            for (let j = 0; j < this.size.y; j++) {\r\n                p.x = i + x, p.y = j + y;\r\n                if (fn(p)) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    forEach(fn, start = null) {\r\n        const pos = new Vec2();\r\n        const begin = this.pos.clone().toInt();\r\n        if (start === null || !this.containsPoint(start)) {\r\n            start = begin;\r\n        }\r\n        const end = this.pos.clone().add(this.size).toInt();\r\n        for (let y = begin.y; y < end.y; y += 1) {\r\n            for (let x = begin.x; x < end.x; x += 1) {\r\n                if (y < start.y || (y === start.y && x < start.x)) {\r\n                    continue;\r\n                }\r\n                pos.x = x;\r\n                pos.y = y;\r\n                const brk = fn(pos);\r\n                if (brk) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    equals(range) {\r\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\r\n    }\r\n    zero() {\r\n        this.pos.zero();\r\n        this.size.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\r\nvar win;\r\nif (typeof (window) === \"undefined\") {\r\n    win = null;\r\n    nativeWindow = false;\r\n}\r\nelse {\r\n    win = window;\r\n}\r\nexport class _Global {\r\n    constructor() {\r\n        this._window = win;\r\n        this._nativeWindow = nativeWindow;\r\n    }\r\n    get window() {\r\n        return this._window;\r\n    }\r\n    set window(v) {\r\n        this._window = v;\r\n        if (this.hasNativeWindow) {\r\n            win = v;\r\n        }\r\n    }\r\n    get hasNativeWindow() {\r\n        return this._nativeWindow;\r\n    }\r\n}\r\nexport let Global = new _Global();\r\n//# sourceMappingURL=Global.js.map","import { forEach } from \"../Arr\";\r\nimport { clone, setProperties, wipe } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Dictionary {\r\n    constructor() {\r\n        this._lookup = Object.create(null);\r\n        this._list = new List();\r\n        this._isDirty = false;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    has(key) {\r\n        return this._lookup[key] !== undefined;\r\n    }\r\n    contains(key) {\r\n        return this.has(key);\r\n    }\r\n    get(key) {\r\n        return this._lookup[key];\r\n    }\r\n    set(key, value) {\r\n        this._isDirty = this._isDirty || this.has(key);\r\n        if (value !== undefined) {\r\n            this._lookup[key] = value;\r\n            if (!this._isDirty) {\r\n                this._list.push(value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        if (this.has(key)) {\r\n            delete this._lookup[key];\r\n            this._isDirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        wipe(this._lookup);\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    get values() {\r\n        this.cleanList();\r\n        return this._list.values;\r\n    }\r\n    get keys() {\r\n        return Object.keys(this._lookup);\r\n    }\r\n    get list() {\r\n        this.cleanList();\r\n        return this._list;\r\n    }\r\n    get count() {\r\n        let result = 0;\r\n        if (this._isDirty) {\r\n            result = this.keys.length;\r\n        }\r\n        else {\r\n            result = this._list.count;\r\n        }\r\n        return result;\r\n    }\r\n    cleanList() {\r\n        if (this._isDirty) {\r\n            this.reCreateList();\r\n        }\r\n    }\r\n    reCreateList() {\r\n        let lookup = this._lookup;\r\n        let keys = Object.keys(this._lookup);\r\n        let i = -1;\r\n        let list = this._list;\r\n        list.clear();\r\n        while (++i < keys.length) {\r\n            list.add(lookup[keys[i]]);\r\n        }\r\n    }\r\n    clone() {\r\n        let result = this.create();\r\n        result._isDirty = this._isDirty;\r\n        result._list = this._list.clone();\r\n        result._lookup = clone(this._lookup);\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this._lookup;\r\n    }\r\n    serialize() {\r\n        let obj = Object.create(null);\r\n        forEach(this.keys, (key) => {\r\n            let v = this.get(key);\r\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\r\n        });\r\n        return obj;\r\n    }\r\n    revive(obj, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        this.clear();\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).revive(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else {\r\n                for (let key of Object.keys(obj)) {\r\n                    let newT = new T();\r\n                    setProperties(newT, obj[key]);\r\n                    this.set(key, newT);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let key of Object.keys(obj)) {\r\n                this.set(key, obj[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(obj, ...types) {\r\n        return this.revive(obj, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\r\nimport { clone, equals, setProperties } from \"../Obj\";\r\nimport { isArray, isFunction, isNotNullOrUndefined, isNotUndefined } from \"../Test\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nexport class List {\r\n    constructor(arr) {\r\n        this._array = [];\r\n        this._index = null;\r\n        this._indexer = null;\r\n        if (arr === undefined) {\r\n            this._array = new Array();\r\n        }\r\n        else {\r\n            if (arr instanceof (List)) {\r\n                this._array = Arr.shallowCopy(arr._array);\r\n            }\r\n            else {\r\n                this._array = Arr.shallowCopy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(arr) {\r\n        return new (this.constructor)(arr);\r\n    }\r\n    get values() {\r\n        return this._array;\r\n    }\r\n    get(pos) {\r\n        return this._array[pos];\r\n    }\r\n    getByIndex(key) {\r\n        let result;\r\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\r\n    }\r\n    set(pos, v) {\r\n        if (pos >= 0 && pos < this.length) {\r\n            this._array[pos | 0] = v;\r\n            if (this._indexer !== null) {\r\n                this._index.set(this._indexer(v), v);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\r\n        }\r\n        return this;\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    get length() {\r\n        return this._array.length;\r\n    }\r\n    get indexer() {\r\n        return this._indexer;\r\n    }\r\n    set indexer(fn) {\r\n        this._indexer = fn;\r\n        this._reindex();\r\n    }\r\n    _reindex() {\r\n        if (this._indexer === null) {\r\n            this._index = null;\r\n        }\r\n        else {\r\n            if (this._index === null) {\r\n                this._index = new Dictionary();\r\n            }\r\n            else {\r\n                this._index.clear();\r\n            }\r\n            this.forEach((el) => this._index.set(this._indexer(el), el));\r\n        }\r\n    }\r\n    fill(size, populator) {\r\n        size = Math.max(0, size);\r\n        if (isFunction(populator)) {\r\n            this._array = Arr.create(size, populator);\r\n        }\r\n        else if (!(populator instanceof Object)) {\r\n            this._array = Arr.create(size, () => populator);\r\n        }\r\n        else {\r\n            this._array = Arr.create(size, () => clone(populator));\r\n        }\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._array.length = 0;\r\n        if (this._index !== null) {\r\n            this._index.clear();\r\n        }\r\n        return this;\r\n    }\r\n    add(v) {\r\n        this._array.push(v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    insertAt(pos, v) {\r\n        Arr.insertAt(this._array, pos, v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    push(v) {\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this._array.push(v);\r\n    }\r\n    pop() {\r\n        let result = this._array.pop();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    shift() {\r\n        let result = this._array.shift();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    concat(v) {\r\n        let arr;\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        arr = Arr.concat(this._array, arr2);\r\n        return this.create(arr);\r\n    }\r\n    index(arr) {\r\n        if (this._indexer !== null) {\r\n            Arr.forEach(arr, (el) => {\r\n                this._index.set(this._indexer(el), el);\r\n            });\r\n        }\r\n    }\r\n    unindexEl(el) {\r\n        if (this._indexer !== null) {\r\n            this._index.delete(this._indexer(el));\r\n        }\r\n    }\r\n    append(v) {\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        Arr.append(this._array, arr2);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.deepCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    shallowCopy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.shallowCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = Arr.deepCopy(this._array);\r\n        let result = this.create(arr);\r\n        if (this._indexer !== null) {\r\n            result._indexer = this._indexer;\r\n            result._index = this._index.clone();\r\n        }\r\n        return result;\r\n    }\r\n    remove(v) {\r\n        Arr.remove(this._array, v);\r\n        this.unindexEl(v);\r\n        return this;\r\n    }\r\n    removeFirst(fn) {\r\n        let result = this.removeAt(this.indexOf(fn));\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    removeAt(n) {\r\n        let result = Arr.removeAt(this._array, n);\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        Arr.forEach(this._array, fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        Arr.forSome(this._array, filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        Arr.until(this._array, fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        Arr.reverseForEach(this._array, fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        Arr.reverseUntil(this._array, fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return Arr.some(this._array, fn);\r\n    }\r\n    all(fn) {\r\n        return Arr.all(this._array, fn);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (isFunction(v)) {\r\n            result = Arr.indexOf(this._array, v);\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        let result = false;\r\n        if (isFunction(v)) {\r\n            result = this.find(v) !== undefined;\r\n        }\r\n        else {\r\n            if (this._indexer !== null) {\r\n                result = this._index.contains(this._indexer(v));\r\n            }\r\n            else {\r\n                result = Arr.indexOfElement(this._array, v) !== -1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    reverse() {\r\n        Arr.reverse(this._array);\r\n        return this;\r\n    }\r\n    first(fn) {\r\n        let index = -1;\r\n        let result;\r\n        if (fn === undefined) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = Arr.indexOf(this._array, fn);\r\n        }\r\n        return index === -1 ? undefined : this.get(index);\r\n    }\r\n    find(fn) {\r\n        return this.first(fn);\r\n    }\r\n    last() {\r\n        return this.length === 0 ? undefined : this.get(this.length - 1);\r\n    }\r\n    filter(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.filterInto(arr, this._array, fn);\r\n        this.index(arr);\r\n        return this;\r\n    }\r\n    splice(pos = 0, remove = Infinity, insert = []) {\r\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    orderBy(fn) {\r\n        this._array.sort(fn);\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this.create(Arr.map(this._array, fn));\r\n    }\r\n    mapInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.mapInto(arr, this._array, fn);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return Arr.reduce(this._array, fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return Arr.reduceUntil(this._array, fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return Arr.reverseReduce(this._array, fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._array, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        let a = this;\r\n        let count = 0;\r\n        if (a.length === b.length) {\r\n            if (a.indexer !== null) {\r\n                b.until((el) => !a.contains(el), (el, i) => ++count);\r\n            }\r\n            else {\r\n                a.until((el) => !b.contains(el), (el, i) => ++count);\r\n            }\r\n        }\r\n        return count === a.length;\r\n    }\r\n    intersect(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            short.forEach((el) => {\r\n                if (long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            long.forEach((el) => {\r\n                if (short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            result = long.clone();\r\n            short.forEach((el) => {\r\n                if (!long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            result = short.clone();\r\n            long.forEach((el) => {\r\n                if (!short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    zip(list, fn = (t, u) => [t, u]) {\r\n        let result = this.create();\r\n        let length = list.length;\r\n        this.until(function (el, i) {\r\n            return i >= length;\r\n        }, function (el, i) {\r\n            result.push(fn(el, list.get(i)));\r\n        });\r\n        return result;\r\n    }\r\n    unzip(fn = (el) => [el[0], el[1]]) {\r\n        let result = [this.create(), this.create()];\r\n        this.forEach(function (el) {\r\n            let tuple = fn(el);\r\n            result[0].push(tuple[0]);\r\n            result[1].push(tuple[1]);\r\n        });\r\n        return result;\r\n    }\r\n    flatten(maxDepth = Infinity) {\r\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\r\n    }\r\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\r\n        let i = -1;\r\n        const len = src.length;\r\n        if (++depth > maxDepth) {\r\n            result.push(src);\r\n        }\r\n        else {\r\n            while (++i < len) {\r\n                if (isArray(src[i])) {\r\n                    this._flattenInner(src[i], maxDepth, depth, result);\r\n                }\r\n                else if (src[i] instanceof List) {\r\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\r\n                }\r\n                else {\r\n                    result.push(src[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).deserialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\r\nimport { equals, setProperties } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Comparer {\r\n}\r\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nexport class SortedList {\r\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\r\n        this._list = new List();\r\n        this._cmp = comparer;\r\n        if (arr === undefined) {\r\n            this._list = new List();\r\n        }\r\n        else {\r\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\r\n                this.copy(arr.values);\r\n            }\r\n            else {\r\n                this.copy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(comparer, arr) {\r\n        return new (this.constructor)(comparer, arr);\r\n    }\r\n    get values() {\r\n        return this._list.values;\r\n    }\r\n    get(pos) {\r\n        return this._list.get(pos);\r\n    }\r\n    get count() {\r\n        return this._list.length;\r\n    }\r\n    get length() {\r\n        return this._list.length;\r\n    }\r\n    get comparer() {\r\n        return this._cmp;\r\n    }\r\n    set comparer(v) {\r\n        this._cmp = v;\r\n        this.sort();\r\n    }\r\n    sort() {\r\n        this._list.orderBy(this._cmp);\r\n    }\r\n    fill(size, populator) {\r\n        this._list.fill(size, populator);\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    add(v) {\r\n        let index = this.getInsertIndex(v);\r\n        this._list.insertAt(index, v);\r\n        return this;\r\n    }\r\n    pop() {\r\n        return this._list.pop();\r\n    }\r\n    shift() {\r\n        return this._list.shift();\r\n    }\r\n    bulkAdd(v) {\r\n        if (v instanceof List || v instanceof SortedList) {\r\n            this._list.append(v.values);\r\n        }\r\n        else {\r\n            this._list.append(v);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.copy(src.values);\r\n        }\r\n        else {\r\n            this._list.copy(src);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clone() {\r\n        return this.create(this._cmp, this._list.clone());\r\n    }\r\n    remove(v) {\r\n        let index = this.indexOf(v);\r\n        if (index !== -1) {\r\n            this._list.removeAt(index);\r\n        }\r\n        return this;\r\n    }\r\n    removeAt(n) {\r\n        return this._list.removeAt(n);\r\n    }\r\n    removeFirst(fn) {\r\n        return this._list.removeFirst(fn);\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        this._list.forEach(fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        this._list.forSome(filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        this._list.until(fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        this._list.reverseForEach(fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        this._list.reverseUntil(fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return this._list.some(fn);\r\n    }\r\n    all(fn) {\r\n        return this._list.all(fn);\r\n    }\r\n    getInsertIndex(v) {\r\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (v instanceof Function) {\r\n            result = this._list.indexOf(v);\r\n        }\r\n        else {\r\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        return this.indexOf(v) !== -1;\r\n    }\r\n    first(fn) {\r\n        return this._list.first(fn);\r\n    }\r\n    find(fn) {\r\n        return this._list.find(fn);\r\n    }\r\n    last() {\r\n        return this._list.last();\r\n    }\r\n    filter(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.selectInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.selectInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this._list.map(fn);\r\n    }\r\n    mapInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.mapInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.mapInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return this._list.reduce(fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return this._list.reduceUntil(fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return this._list.reverseReduce(fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return this._list.reverseReduceUntil(fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._list.values, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        return this.equals(b);\r\n    }\r\n    intersect(b) {\r\n        let result = this.create(this.comparer);\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 && b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (longPos < lastPos && ++i < shortLen) {\r\n                    let el = short.get(i);\r\n                    let aVsB;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if (longPos < lastPos && aVsB === 0) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                short.forEach((el) => {\r\n                    if (long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = result.bulkAdd(short.toList().intersect(long));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result;\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 || b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                result = this.create(this.comparer, long.values);\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (++i < shortLen && longPos < lastPos) {\r\n                    let el = short.get(i);\r\n                    let aVsB = -1;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n                if (i < shortLen) {\r\n                    --i;\r\n                    while (++i < shortLen) {\r\n                        result.add(short.get(i));\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                result = this.create(this.comparer, long.values);\r\n                short.forEach((el) => {\r\n                    if (!long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = this.create(this.comparer, short.toList().union(long));\r\n            }\r\n        }\r\n        else {\r\n            result = this.create(this.comparer);\r\n        }\r\n        return result;\r\n    }\r\n    toList() {\r\n        return new List(this.values);\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).deserialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, deepCopyInto, mapInto, slice } from \"../Arr\";\r\nimport { setProperties } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Stack {\r\n    constructor(size) {\r\n        this.DEFAULT_SIZE = 100;\r\n        this._pos = 0;\r\n        this._limit = 0;\r\n        if (!size) {\r\n            size = this.DEFAULT_SIZE;\r\n        }\r\n        this.DEFAULT_SIZE = size;\r\n        this._array = new Array(size);\r\n        this.push = this.fastPush;\r\n    }\r\n    get values() {\r\n        return slice(this._array, 0, this._pos);\r\n    }\r\n    get depth() {\r\n        return this._pos;\r\n    }\r\n    get size() {\r\n        return this._pos;\r\n    }\r\n    get isEmpty() {\r\n        return this.size === 0;\r\n    }\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n    set limit(value) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        this._limit = value;\r\n        if (value === 0) {\r\n            this.push = this.fastPush;\r\n        }\r\n        else {\r\n            this.push = this.limitedPush;\r\n            this.limitObjects();\r\n        }\r\n    }\r\n    create(size) {\r\n        return new (this.constructor)(size);\r\n    }\r\n    push(obj) {\r\n    }\r\n    fastPush(obj) {\r\n        this._array[this._pos++] = obj;\r\n    }\r\n    limitedPush(obj) {\r\n        this._array[this._pos] = obj;\r\n        ++this._pos;\r\n        this.limitObjects();\r\n    }\r\n    pop() {\r\n        let result = undefined;\r\n        if (this._pos !== 0) {\r\n            result = this._array[--this._pos];\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this._array[this._pos - 1];\r\n    }\r\n    peekAt(index) {\r\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\r\n    }\r\n    toList() {\r\n        const result = new List();\r\n        return new List(this.values);\r\n    }\r\n    clear() {\r\n        this._pos = 0;\r\n        this._array.length = this.DEFAULT_SIZE;\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = deepCopy(this._array);\r\n        let result = this.create(this.DEFAULT_SIZE);\r\n        result._array = arr;\r\n        result._limit = this._limit;\r\n        result._pos = this._pos;\r\n        return result;\r\n    }\r\n    limitObjects() {\r\n        if (this._limit > 0) {\r\n            while (this._pos > this._limit) {\r\n                this._array.shift();\r\n                --this._pos;\r\n            }\r\n        }\r\n    }\r\n    toJSON() {\r\n        return slice(this.values, 0, this._pos);\r\n    }\r\n    serialize() {\r\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                mapInto(array, this._array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                mapInto(array, this._array, (el) => {\r\n                    return (new T()).deserialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                mapInto(array, this._array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            deepCopyInto(array, this._array);\r\n        }\r\n        this._pos = array.length;\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=Stack.js.map","class TimerState {\r\n}\r\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\r\nexport class Timer {\r\n    static get time() {\r\n        return TimerState._time;\r\n    }\r\n    constructor() {\r\n        Timer.start();\r\n    }\r\n    static now() {\r\n        if (TimerState._hasPerformance) {\r\n            return performance.now();\r\n        }\r\n        else {\r\n            const hrTime = process.hrtime();\r\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\r\n        }\r\n    }\r\n    static start() {\r\n        const now = Timer.now();\r\n        TimerState._start = TimerState._last = now;\r\n        return TimerState._time = 0;\r\n    }\r\n    static stop() {\r\n        const start = TimerState._start;\r\n        const now = Timer.now();\r\n        TimerState._last = now;\r\n        return TimerState._time = now - start;\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map","import { map } from \"../Arr\";\r\nimport { clone, isSameClass, setProperties } from \"../Obj\";\r\nimport { isArray } from \"../Test\";\r\nimport { newUUID } from \"../Util\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { List } from \"./List\";\r\nimport { Stack } from \"./Stack\";\r\nexport class Tree {\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.parent = null;\r\n        this.children = null;\r\n        this.data = null;\r\n        this.id = newUUID();\r\n    }\r\n    static fromObject(obj) {\r\n        const parent = (this instanceof Tree) ? this : null;\r\n        const root = new Tree().init({ id: obj.id || newUUID(), data: obj.data, parent });\r\n        if (obj.children !== undefined && isArray(obj.children)) {\r\n            root.children = new List(map(obj.children, Tree.fromObject.bind(root)));\r\n        }\r\n        return root;\r\n    }\r\n    static fromNodeList(nodes, mapcfg) {\r\n        let result = new Tree();\r\n        let mapResolver = (key) => {\r\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\r\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\r\n                    mapcfg[key];\r\n        };\r\n        let map = {\r\n            id: mapResolver(\"id\"),\r\n            parent: mapResolver(\"parent\"),\r\n            data: mapResolver(\"data\")\r\n        };\r\n        let list = new List(nodes);\r\n        let lookup = new Dictionary();\r\n        list.forEach((el, i) => {\r\n            let node = new Tree().init({ id: map.id(el), data: map.data(el) });\r\n            lookup.set(node.id, node);\r\n        });\r\n        list.forEach((el, i) => {\r\n            let parent = map.parent(el);\r\n            if (lookup.contains(parent)) {\r\n                lookup.get(parent).add(lookup.get(map.id(el)));\r\n            }\r\n        });\r\n        result = lookup.get(map.id(list.get(0)));\r\n        while (result.parent) {\r\n            result = result.parent;\r\n        }\r\n        return result;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    init(obj) {\r\n        setProperties(this, obj);\r\n        return this;\r\n    }\r\n    insertAt(pos, data) {\r\n        if (this.children === null || this.children.count <= pos) {\r\n            this.add(data);\r\n        }\r\n        else {\r\n            this.children.insertAt(pos, this.create().init({ data, parent: this }));\r\n        }\r\n    }\r\n    add(data) {\r\n        if (this.children === null) {\r\n            this.children = new List();\r\n        }\r\n        if (isSameClass(data, this)) {\r\n            data.parent = this;\r\n            this.children.add(data);\r\n        }\r\n        else {\r\n            this.children.add((this.create()).init({ data: data, parent: this }));\r\n        }\r\n    }\r\n    remove() {\r\n        if (this.parent !== null) {\r\n            this.parent.children.remove(this);\r\n        }\r\n    }\r\n    prune() {\r\n        if (this.children !== null) {\r\n            this.children\r\n                .forEach(function (el, i) {\r\n                el.parent = null;\r\n            })\r\n                .clear();\r\n        }\r\n        this.children = null;\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        const stack = new Stack();\r\n        let acc = start;\r\n        if (!fn) {\r\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\r\n        }\r\n        if (start === undefined) {\r\n            acc = [];\r\n        }\r\n        let cur;\r\n        let i;\r\n        stack.push(this);\r\n        while (cur = stack.pop()) {\r\n            acc = fn(acc, cur);\r\n            i = (cur.children && cur.children.count) || 0;\r\n            while (i--) {\r\n                stack.push(cur.children.get(i));\r\n            }\r\n        }\r\n        return acc;\r\n    }\r\n    clone() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children === null ? null : this.children.clone();\r\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\r\n        return result;\r\n    }\r\n    duplicateNode() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children;\r\n        result.data = this.data;\r\n        return result;\r\n    }\r\n    filter(condition) {\r\n        const root = this.duplicateNode();\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            root.children =\r\n                root.children\r\n                    .select(condition)\r\n                    .map(function (el, i) {\r\n                    return el.filter(condition);\r\n                });\r\n        }\r\n        return root;\r\n    }\r\n    select(condition, acc = new List()) {\r\n        const result = acc;\r\n        const children = this.children;\r\n        if (condition === undefined || condition(this)) {\r\n            result.add(this);\r\n        }\r\n        if (children) {\r\n            children.reduce(function (acc, cur) {\r\n                return cur.select(condition, acc);\r\n            }, result);\r\n        }\r\n        return result;\r\n    }\r\n    find(condition) {\r\n        let result = null;\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            let i = -1;\r\n            const len = this.children.count;\r\n            const val = this.children.values;\r\n            while (++i < len) {\r\n                if (condition(val[i].data)) {\r\n                    result = val[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    result = val[i].children !== null ? val[i].find(condition) : null;\r\n                    if (result !== null) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    contains(condition) {\r\n        return this.find(condition) !== null;\r\n    }\r\n    depth() {\r\n        let result = 0;\r\n        let node = this;\r\n        while (node.parent) {\r\n            node = node.parent;\r\n            ++result;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.toJSON()));\r\n        }\r\n        return result.toJSON();\r\n    }\r\n    serialize() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.serialize()));\r\n        }\r\n        return result.serialize();\r\n    }\r\n}\r\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\r\nexport class Uri {\r\n    constructor() {\r\n        this._a = null;\r\n        this.hash = \"\";\r\n        this.pathName = \"\";\r\n        this.port = \"\";\r\n        this.hostName = \"\";\r\n        this.protocol = \"\";\r\n        this.origin = \"\";\r\n        this.full = \"\";\r\n        this.args = {};\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (Global.window !== null) {\r\n            this._a = Global.window.document.createElement(\"a\");\r\n            this._a.setAttribute(\"href\", Global.window.location.href);\r\n            const args = this.args;\r\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\r\n                const p = arg.split(\"=\");\r\n                args[p[0]] = p[1];\r\n            });\r\n            this.hash = this._a.hash;\r\n            this.pathName = this._a.pathname;\r\n            this.port = this._a.port;\r\n            this.hostName = this._a.hostname;\r\n            this.protocol = this._a.protocol;\r\n            this.origin = this._a.origin;\r\n            this.full = this._a.href;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    descriptor.value = function (...args) {\r\n        let result = new Promise((resolve, reject) => {\r\n            let value;\r\n            try {\r\n                value = orgFn.apply(this, args);\r\n                resolve(value);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    return descriptor;\r\n};\r\nasync.before = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                decoration.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    callback();\r\n                })\r\n                    .catch((reason) => {\r\n                    callback();\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.after = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = (value, reason) => {\r\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                orgFn.apply(this, args)\r\n                    .then((value) => {\r\n                    callback(value, undefined);\r\n                })\r\n                    .catch((reason) => {\r\n                    callback(undefined, reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.provided = function (async_predicate) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                async_predicate.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    if (value) {\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        reject(false);\r\n                    }\r\n                })\r\n                    .catch((reason) => {\r\n                    reject(reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\r\n    constructor(cls, growthStep = 10) {\r\n        this._pool = [];\r\n        this._available = 0;\r\n        this._size = 0;\r\n        this._cls = cls;\r\n        this._growthStep = growthStep;\r\n        this.create();\r\n    }\r\n    get available() {\r\n        return this._available;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    create() {\r\n        let i = 0;\r\n        for (; i < this._growthStep; i++) {\r\n            this._pool.push(new this._cls());\r\n        }\r\n        this._size += this._growthStep;\r\n        this._available += this._growthStep;\r\n    }\r\n    get() {\r\n        let result;\r\n        if (this._pool.length === 0) {\r\n            this.create();\r\n        }\r\n        result = this._pool.pop();\r\n        --this._available;\r\n        result.initPool(this);\r\n        return result;\r\n    }\r\n    release(obj) {\r\n        this._pool.push(obj);\r\n        ++this._available;\r\n    }\r\n}\r\n//# sourceMappingURL=Pool.js.map","export class KeyValuePair {\r\n}\r\n//# sourceMappingURL=KeyValuePair.js.map"],"names":["sign","x","NaN","rotationDeg","rotation","deg","CalcConst","ROTATION_DEGREE_PRECISION","DEG360","ROTATION_LOOKUP","rotationRad","DEGREE_FACTOR","this","closestRadianRotation","radian","RADIAN_FACTOR","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","isElement","target","nodeType","isFunction","Object","prototype","toString","call","isNumber","isInt","isString","isNotNullOrUndefined","constructor","String","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","areUndefined","areNotUndefined","isUndefined","isNotUndefined","destroy","obj","setNull","wipe","keys","clear","key","isClassOf","b","isSameClass","inherits","equals","isDifferent","shallowCopy","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","arrS","arrT","mixin","exclude","sources","flatten","hasOwnProperty","setProperties","values","mapping","value","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","splice","pos","remove","insert","srcLen","max","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","removeOneByFn","shallowCopyInto","shallowFill","at","deepCopyInto","deepFill","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","create","populator","init","win","getFunctionName","name","fnString","substring","getFunctionCode","lastIndexOf","newUUID","d","Timer","now","replace","c","r","random","floor","newInt","UtilState","_int","callDebugger","pipeOut","log","warn","error","proxyFn","superfn","assert","assertion","message","isDebug","objOrClass","fnName","bind","loop","toArray","DomState","_window","_document","document","_el","createElement","html","attr","innerHTML","children","setAttr","outerHTML","appendChild","get","k","styles","styleKeys","style","setProperty","join","setAttribute","parentNode","removeChild","replaceChild","id","getElementById","body","find","selector","querySelector","findAll","root","querySelectorAll","is","findParent","parentElement","position","y","top","matches","msMatchesSelector","webkitMatchesSelector","Error","setStylesExplicitly","comp","getComputedStyle","Poolable","Base","[object Object]","__pool__","release","pool","super","Initable","base","before","decoration","propertyKey","descriptor","orgFn","after","around","provided","condition","randomString","VALID_CHARS","charAt","randomInt","randomNumber","numericArray","type","MocDataType","LinearInt","RandomInt","LinearFloat","RandomFloat","stringArray","arrayLength","stringLength","integrate","alias","stringAlias","list","object","Arr","Calc","Dom","MocData","Obj","Pool","Dictionary","KeyValuePair","List","Range2","Rect","Stack","Tree","Vec2","Test","Uri","Util","stuff","PI","lookup","cos","sin","Vec2Const","EPSILON","IDENTITY","X_DIM","Y_DIM","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","stop","x1","y1","x2","y2","endInclusive","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","_Global","_nativeWindow","hasNativeWindow","_lookup","_list","_isDirty","has","cleanList","reCreateList","serialize","types","T","passthroughT","revive","deserialize","newT","_array","_index","_indexer","Arr.shallowCopy","indexer","_reindex","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","u","tuple","maxDepth","_flattenInner","depth","copy","SortedList","comparer","_cmp","orderBy","fill","getInsertIndex","removeFirst","Function","last","selectInto","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","parent","data","fromObject","nodes","mapcfg","mapResolver","node","stack","cur","duplicateNode","select","toJSON","Sides","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","Promise","resolve","reject","err","callback","then","catch","reason","async_predicate","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool"],"mappings":"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"}