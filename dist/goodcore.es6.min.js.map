{"version":3,"file":"goodcore.es6.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/standard/mixins/Initable.js","lib/standard/Combinators.js","lib/MocData.js","lib/Integration.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/struct/KeyValuePair.js"],"sourcesContent":["export class CalcConst {\r\n}\r\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\r\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\r\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\r\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\r\nCalcConst.ROTATION_LOOKUP = (function () {\r\n    const lookup = [];\r\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\r\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\r\n    }\r\n    return lookup;\r\n})();\r\nexport function sign(x) {\r\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\nexport function rotationDeg(rotation) {\r\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return CalcConst.ROTATION_LOOKUP[deg];\r\n}\r\nexport function rotationRad(rotation) {\r\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\r\n}\r\nexport function closestRadianRotation(radian) {\r\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\r\n}\r\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\r\nexport function hasWindow() {\r\n    return Global.window !== null;\r\n}\r\nexport function hasConsole() {\r\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\r\n}\r\nexport function isArray(it) {\r\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\r\n}\r\nexport function isElement(target) {\r\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\r\n}\r\nexport function isFunction(it) {\r\n    return Object.prototype.toString.call(it) === \"[object Function]\";\r\n}\r\nexport function isNumber(x) {\r\n    return x === +x;\r\n}\r\nexport function isInt(x) {\r\n    return isNumber(x) && (x === (x | 0));\r\n}\r\nexport function isString(x) {\r\n    return isNotNullOrUndefined(x) && x.constructor === String;\r\n}\r\nexport function areNullOrUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined || a === null;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotNullOrUndefined(...args) {\r\n    return !areNullOrUndefined(...args);\r\n}\r\nexport function isNullOrUndefined(arg) {\r\n    return arg === undefined || arg === null;\r\n}\r\nexport function isNotNullOrUndefined(arg) {\r\n    return !isNullOrUndefined(arg);\r\n}\r\nexport function areUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotUndefined(...args) {\r\n    return !areUndefined(...args);\r\n}\r\nexport function isUndefined(arg) {\r\n    return arg === undefined;\r\n}\r\nexport function isNotUndefined(arg) {\r\n    return !isUndefined(arg);\r\n}\r\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\r\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\r\nexport function destroy(obj) {\r\n    if (obj.constructor.prototype.destroy !== undefined) {\r\n        obj.destroy();\r\n    }\r\n    else {\r\n        setNull(obj);\r\n    }\r\n}\r\nexport function wipe(obj) {\r\n    const keys = Object.keys(obj);\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        delete obj[keys[i]];\r\n    }\r\n}\r\nexport function setNull(obj) {\r\n    if (obj.constructor.prototype.clear !== undefined) {\r\n        obj.clear();\r\n    }\r\n    else {\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            obj[key] = null;\r\n        }\r\n    }\r\n}\r\nexport function isClassOf(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\r\n}\r\nexport function isSameClass(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\r\n}\r\nexport function inherits(a, b) {\r\n    return isClassOf(a, b) && !isSameClass(a, b);\r\n}\r\nexport function equals(a, b) {\r\n    let result = a === b;\r\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\r\n        if (isArray(a)) {\r\n            const len = a.length;\r\n            let i = 0;\r\n            result = len === b.length;\r\n            if (result) {\r\n                for (; i < len; i += 1) {\r\n                    result = equals(a[i], b[i]);\r\n                    if (result === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (a.constructor.prototype.equals) {\r\n            result = a.equals(b);\r\n        }\r\n        else {\r\n            const keys = Object.keys(a);\r\n            let key = null;\r\n            result = true;\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                result = equals(a[key], b[key]);\r\n                if (!result) {\r\n                    if (isFunction(a[key])) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function isDifferent(a, b) {\r\n    return !equals(a, b);\r\n}\r\nexport function shallowCopy(obj) {\r\n    const keys = Object.keys(obj);\r\n    const result = {};\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        const key = keys[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nexport function clone(obj) {\r\n    let result;\r\n    if (!(obj instanceof Object)) {\r\n        result = obj;\r\n    }\r\n    else if (obj.constructor.prototype.clone !== undefined) {\r\n        result = obj.clone();\r\n    }\r\n    else if (isArray(obj)) {\r\n        result = deepCopy(obj);\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return new Date(obj.getTime());\r\n    }\r\n    else if (obj instanceof RegExp) {\r\n        return new RegExp(obj);\r\n    }\r\n    else {\r\n        result = new obj.constructor();\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            result[key] = clone(obj[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function cloneInto(src, target) {\r\n    if (isArray(target)) {\r\n        const arrS = src;\r\n        const arrT = target;\r\n        const len = arrS.length;\r\n        arrT.length = len;\r\n        let i = -1;\r\n        while (++i < len) {\r\n            if (arrS[i] instanceof Object) {\r\n                cloneInto(arrS[i], arrT[i]);\r\n            }\r\n            else {\r\n                arrT[i] = arrS[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            const a = src[key];\r\n            if (a instanceof Object) {\r\n                let b = target[key];\r\n                if (b === undefined || b === null) {\r\n                    if (isArray(a)) {\r\n                        b = target[key] = [];\r\n                    }\r\n                    else {\r\n                        b = target[key] = {};\r\n                    }\r\n                }\r\n                if (isDifferent(a, b)) {\r\n                    cloneInto(a, b);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = a;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function mixin(target = {}, exclude, ...sources) {\r\n    const result = target, len = sources ? sources.length : 0;\r\n    let i = 0;\r\n    sources = flatten(sources);\r\n    for (; i < len; i++) {\r\n        let src = sources[i];\r\n        if (isFunction(src)) {\r\n            src = src.prototype;\r\n        }\r\n        if (src === undefined) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        if (exclude) {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                if (exclude.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n        else {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setProperties(target, values, mapping) {\r\n    const keys = Object.keys(values);\r\n    let key;\r\n    let value;\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        key = keys[i];\r\n        value = values[key];\r\n        if (mapping && key in mapping) {\r\n            key = mapping[key];\r\n        }\r\n        if (key in target) {\r\n            target[key] = values[keys[i]];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\r\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\r\nclass ArrayState {\r\n}\r\nexport function flatten(src) {\r\n    return flattenInner(src);\r\n}\r\nfunction flattenInner(src, result = []) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (isArray(src[i])) {\r\n            flattenInner(src[i], result);\r\n        }\r\n        else {\r\n            result.push(src[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function reverse(array) {\r\n    let left = null;\r\n    let right = null;\r\n    const length = isNullOrUndefined(array) ? 0 : array.length;\r\n    for (left = 0; left < length / 2; left += 1) {\r\n        right = length - 1 - left;\r\n        const temporary = array[left];\r\n        array[left] = array[right];\r\n        array[right] = temporary;\r\n    }\r\n    return array;\r\n}\r\nexport function concat(...arrs) {\r\n    const result = Array.prototype.concat.apply([], arrs);\r\n    return result;\r\n}\r\nexport function slice(src, from = 0, count = Infinity) {\r\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    let i = -1;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i + from];\r\n    }\r\n    return result;\r\n}\r\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\r\n    if (isNullOrUndefined(src)) {\r\n        throw new Error(\"Unable to splice on null or undefined\");\r\n    }\r\n    let srcLen = src.length;\r\n    pos = Math.max(0, pos);\r\n    pos = Math.min(pos, srcLen);\r\n    remove = Math.max(0, remove);\r\n    remove = Math.min(remove, srcLen - pos);\r\n    let insertLen = insert.length;\r\n    let newLen = srcLen - remove + insertLen;\r\n    let delta = remove - insertLen;\r\n    if (delta < 0) {\r\n        src.length = newLen;\r\n        let i = newLen;\r\n        while (--i >= pos + remove) {\r\n            src[i] = src[i + delta];\r\n        }\r\n    }\r\n    let i = pos - 1;\r\n    while (++i < pos + insertLen) {\r\n        src[i] = insert[i - pos];\r\n    }\r\n    if (delta > 0) {\r\n        --i;\r\n        while (++i < srcLen - delta) {\r\n            src[i] = src[i + delta];\r\n        }\r\n        src.length = newLen;\r\n    }\r\n}\r\nexport function append(arr, values) {\r\n    let index = -1;\r\n    const offset = arr.length;\r\n    const length = isNullOrUndefined(values) ? 0 : values.length;\r\n    while (++index < length) {\r\n        arr[offset + index] = values[index];\r\n    }\r\n}\r\nexport function removeAt(arr, index) {\r\n    let result;\r\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\r\n    if (index >= 0 && index < len) {\r\n        let i = index;\r\n        result = arr[index];\r\n        while (++i < len) {\r\n            arr[i - 1] = arr[i];\r\n        }\r\n        arr.length -= 1;\r\n    }\r\n    return result;\r\n}\r\nexport function indexOfElement(src, el) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (src[i] === el) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function remove(arr, el) {\r\n    const start = indexOfElement(arr, el);\r\n    removeAt(arr, start);\r\n}\r\nexport function indexOf(src, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (fn(src[i])) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function removeOneByFn(arr, fn) {\r\n    const start = indexOf(arr, fn);\r\n    removeAt(arr, start);\r\n}\r\nexport function shallowCopy(src) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i];\r\n    }\r\n    return result;\r\n}\r\nexport function shallowCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = src[i];\r\n    }\r\n}\r\nexport function shallowFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = src[i];\r\n    }\r\n}\r\nexport function deepCopy(src) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = (clone(src[i]));\r\n    }\r\n    return result;\r\n}\r\nexport function deepCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function deepFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function filter(src, fn) {\r\n    const result = [];\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            result.push(el);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function filterInto(src, target, fn) {\r\n    let i = -1;\r\n    let j = 0;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const space = target.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            if (j < space) {\r\n                target[j++] = el;\r\n            }\r\n            else {\r\n                ++j;\r\n                target.push(el);\r\n            }\r\n        }\r\n    }\r\n    target.length = j;\r\n}\r\nexport function map(src, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = fn(src[i], i);\r\n    }\r\n    return result;\r\n}\r\nexport function mapInto(src, target, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = fn(src[i], i);\r\n    }\r\n}\r\nexport function reduce(src, fn, start) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (++i < len) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceUntil(src, fn, test, start) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (++i < len && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduce(src, fn, start) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (--i >= 0) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduceUntil(src, fn, test, start) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (--i >= 0 && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function forEach(src, fn, startIndex = 0) {\r\n    let i = startIndex - 1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function forSome(src, filter, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (filter(el, i)) {\r\n            fn(el, i);\r\n        }\r\n    }\r\n}\r\nexport function until(src, fnOrTest, fn, startIndex) {\r\n    let isCombined = isUndefined(fn) || isNumber(fn);\r\n    startIndex = isCombined ? fn : startIndex;\r\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function reverseForEach(src, fn) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (--i >= 0) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function reverseUntil(src, fnOrTest, fn) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let combined = isUndefined(fn);\r\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function some(src, fn) {\r\n    let result = false;\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && !(result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function all(src, fn) {\r\n    let result = true;\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && (result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function insertAt(src, pos, v) {\r\n    if (isNullOrUndefined(src)) {\r\n        throw new Error(\"Unable to insertAt on null or undefined\");\r\n    }\r\n    if (pos === 0) {\r\n        src.unshift(v);\r\n    }\r\n    else if (pos > 0) {\r\n        let i = src.length;\r\n        while (--i >= pos) {\r\n            src[i + 1] = src[i];\r\n        }\r\n        src[i + 1] = v;\r\n    }\r\n}\r\nexport function binarySearch(src, cmp, closest = false) {\r\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\r\n    while (lo <= hi) {\r\n        mid = ((lo + hi) >> 1);\r\n        element = src[mid];\r\n        let val = cmp(element);\r\n        if (val < 0) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (val > 0) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return closest ? lo : -1;\r\n}\r\nexport function create(length, populator) {\r\n    if ((length || -1) < 0) {\r\n        length = 0;\r\n    }\r\n    let arr = new Array(length);\r\n    let i = -1;\r\n    while (++i < length) {\r\n        arr[i] = populator(i, arr);\r\n    }\r\n    return arr;\r\n}\r\nexport function deserialize(array, target, ...types) {\r\n    let [T, ...passthroughT] = types;\r\n    if (isNotUndefined(T)) {\r\n        if (isNotUndefined(T.prototype.deserialize)) {\r\n            mapInto(array, target, (el) => {\r\n                return (new T()).deserialize(el, ...passthroughT);\r\n            });\r\n        }\r\n        else {\r\n            mapInto(array, target, (el) => {\r\n                let newT = new T();\r\n                setProperties(newT, el);\r\n                return newT;\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        deepCopyInto(array, target);\r\n    }\r\n    return this;\r\n}\r\n//# sourceMappingURL=Arr.js.map","import { Global } from \"./Global\";\r\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nclass UtilState {\r\n}\r\nUtilState._int = 0;\r\nexport function init(win) {\r\n    if (win !== undefined) {\r\n        Global.window = win;\r\n    }\r\n}\r\nexport function getFunctionName(fn) {\r\n    let result;\r\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\r\n        result = fn.name;\r\n    }\r\n    else {\r\n        const fnString = fn.toString();\r\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\r\n    }\r\n    return result;\r\n}\r\nexport function getFunctionCode(fn) {\r\n    let result;\r\n    const fnString = fn.toString();\r\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\r\n    return result;\r\n}\r\nexport function newUUID() {\r\n    let d = new Date().getTime();\r\n    d += Timer.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\nexport function newInt() {\r\n    return UtilState._int++;\r\n}\r\nexport function callDebugger() {\r\n    debugger;\r\n}\r\nexport function pipeOut(log, warn, error) {\r\n    if (hasConsole()) {\r\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\r\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\r\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\r\n    }\r\n    else {\r\n        const console = {\r\n            log,\r\n            warn,\r\n            error\r\n        };\r\n        if (!(hasWindow())) {\r\n            Global.window = {};\r\n        }\r\n        Global.window.console = console;\r\n    }\r\n}\r\nexport function assert(assertion, message, isDebug = true) {\r\n    let result = true;\r\n    if (!assertion) {\r\n        if (hasConsole) {\r\n            result = false;\r\n            console.error(\"Assertion failed: \" + message);\r\n        }\r\n        if (isDebug) {\r\n            callDebugger();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function proxyFn(objOrClass, fnName, proxyFn) {\r\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\r\n    const fn = objOrClass[fnName];\r\n    const _superFn = function (...args) {\r\n        if (args.length !== 0) {\r\n            return fn.apply(this || objOrClass, args);\r\n        }\r\n        else {\r\n            return fn.call(this || objOrClass);\r\n        }\r\n    };\r\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\r\n}\r\nexport function loop(count, fn) {\r\n    let i = -1;\r\n    while (++i < count) {\r\n        fn(i);\r\n    }\r\n}\r\nexport function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n}\r\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\r\nexport var Sides;\r\n(function (Sides) {\r\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\r\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\r\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\r\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\r\n})(Sides || (Sides = {}));\r\nclass DomState {\r\n}\r\nDomState.Sides = Sides;\r\nDomState._window = Global.window;\r\nDomState._document = Global.window ? Global.window.document : undefined;\r\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\r\nexport function init(win) {\r\n    Global.window = win;\r\n    DomState._window = Global.window;\r\n    DomState._document = DomState._window.document;\r\n    DomState._el = DomState._document.createElement(\"div\");\r\n}\r\nexport function toArray(a) {\r\n    return Array.prototype.slice.call(a);\r\n}\r\nexport function create(html, attr) {\r\n    let result, keys, i, k, styles, styleKeys;\r\n    DomState._el.innerHTML = html;\r\n    result = DomState._el.children[0];\r\n    setAttr(result, attr);\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function outerHTML(el) {\r\n    DomState._el.appendChild(el);\r\n    const result = DomState._el.innerHTML;\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function setAttr(_el, attr) {\r\n    let el;\r\n    if (typeof (_el) === \"string\") {\r\n        el = get(_el);\r\n    }\r\n    else {\r\n        el = _el;\r\n    }\r\n    let keys, i, k, styles, styleKeys, style;\r\n    if (attr !== undefined && typeof (attr) === \"object\") {\r\n        keys = Object.keys(attr);\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"style\") {\r\n                styles = attr[keys[i]];\r\n                styleKeys = Object.keys(styles);\r\n                for (k = 0; k < styleKeys.length; k++) {\r\n                    style = styles[styleKeys[k]];\r\n                    if (typeof (style) === \"string\") {\r\n                        el.style.setProperty(styleKeys[k], style);\r\n                    }\r\n                    else {\r\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\r\n                    }\r\n                }\r\n            }\r\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\r\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\r\n            }\r\n            else {\r\n                el.setAttribute(keys[i], attr[keys[i]]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function remove(element) {\r\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\r\n}\r\nexport function replace(src, target) {\r\n    let result = target;\r\n    if (src.parentNode) {\r\n        src.parentNode.replaceChild(target, src);\r\n    }\r\n    return result;\r\n}\r\nexport function clear(element) {\r\n    let i = element.children.length;\r\n    while (i--) {\r\n        element.removeChild(element.children[i]);\r\n    }\r\n}\r\nexport function get(id) {\r\n    let result = DomState._document.getElementById(id);\r\n    if (result === null) {\r\n        switch (id) {\r\n            default:\r\n                result = DomState._document.body;\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function find(selector) {\r\n    return DomState._document.querySelector(selector);\r\n}\r\nexport function findAll(selector, root) {\r\n    return toArray((root || DomState._document).querySelectorAll(selector));\r\n}\r\nexport function children(root, selector) {\r\n    const children = toArray((root || DomState._document).children);\r\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\r\n}\r\nexport function findParent(root, selector) {\r\n    let result = root.parentElement;\r\n    while (result) {\r\n        if (is(selector, result)) {\r\n            break;\r\n        }\r\n        result = result.parentElement;\r\n    }\r\n    return result;\r\n}\r\nexport function position(el, x, y) {\r\n    el.style.top = y + \"px\";\r\n    el.style.left = x + \"px\";\r\n}\r\nexport function is(selector, element) {\r\n    let result = false;\r\n    if (element.matches) {\r\n        result = element.matches(selector);\r\n    }\r\n    else if (element.msMatchesSelector) {\r\n        result = element.msMatchesSelector(selector);\r\n    }\r\n    else if (element.webkitMatchesSelector) {\r\n        result = element.webkitMatchesSelector(selector);\r\n    }\r\n    else {\r\n        if (element.parentElement === null) {\r\n            throw new Error(\"Element has no parent\");\r\n        }\r\n        if (element.id !== \"\") {\r\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\r\n        }\r\n        else {\r\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setStylesExplicitly(element, ...styles) {\r\n    const comp = DomState._window.getComputedStyle(element);\r\n    for (const style of styles) {\r\n        element.style[style] = comp[style];\r\n    }\r\n}\r\n//# sourceMappingURL=Dom.js.map","export function Poolable(Base) {\r\n    return class extends Base {\r\n        release() {\r\n            this.__pool__.release(this);\r\n        }\r\n        initPool(pool) {\r\n            this.__pool__ = pool;\r\n        }\r\n        constructor(...args) {\r\n            super(...args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Poolable.js.map","import { setProperties } from \"../../Obj\";\r\nexport function Initable(base) {\r\n    return class extends base {\r\n        init(obj, mapping) {\r\n            setProperties(this, obj, mapping);\r\n            return this;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Initable.js.map","export function before(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            decoration.apply(this, [orgFn.name].concat(args));\r\n            const result = orgFn.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function after(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\r\n            decoration.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function around(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            let callback = () => result = orgFn.apply(this, args);\r\n            decoration.apply(this, [callback, orgFn.name].concat(args));\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function provided(condition) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            if (condition.apply(this, [orgFn.name].concat(args))) {\r\n                result = orgFn.apply(this, args);\r\n            }\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function once(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    let result;\r\n    let first = true;\r\n    descriptor.value = function (...args) {\r\n        if (first) {\r\n            result = orgFn.apply(this, args);\r\n            first = false;\r\n        }\r\n        return result;\r\n    };\r\n    return descriptor;\r\n}\r\n//# sourceMappingURL=Combinators.js.map","export var MocDataType;\r\n(function (MocDataType) {\r\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\r\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\r\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\r\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\r\n})(MocDataType || (MocDataType = {}));\r\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nexport function randomString(length = 25) {\r\n    let result = \"\";\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\r\n    }\r\n    return result;\r\n}\r\nexport function randomInt() {\r\n    return this.randomNumber() | 0;\r\n}\r\nexport function randomNumber() {\r\n    return Math.random() * 2147483647;\r\n}\r\nexport function numericArray(length, type = MocDataType.LinearInt) {\r\n    const result = new Array(length);\r\n    switch (type) {\r\n        case MocDataType.RandomInt:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomInt();\r\n            }\r\n            break;\r\n        case MocDataType.LinearFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i + 0.5;\r\n            }\r\n            break;\r\n        case MocDataType.RandomFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomNumber();\r\n            }\r\n            break;\r\n        default:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i;\r\n            }\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nexport function stringArray(arrayLength, stringLength) {\r\n    const result = new Array(arrayLength);\r\n    let i = -1;\r\n    while (++i < arrayLength) {\r\n        result[i] = this.randomString(stringLength);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=MocData.js.map","import * as Arr from \"./Arr\";\r\nimport * as Calc from \"./Calc\";\r\nimport * as Dom from \"./Dom\";\r\nimport { Global } from \"./Global\";\r\nimport * as MocData from \"./MocData\";\r\nimport * as Obj from \"./Obj\";\r\nimport { Initable } from \"./standard/mixins/Initable\";\r\nimport { Poolable } from \"./standard/mixins/Poolable\";\r\nimport { Pool } from \"./standard/Pool\";\r\nimport { Dictionary } from \"./struct/Dictionary\";\r\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\r\nimport { List } from \"./struct/List\";\r\nimport { Range2 } from \"./struct/Range2\";\r\nimport { Rect } from \"./struct/Rect\";\r\nimport { Stack } from \"./struct/Stack\";\r\nimport { Tree } from \"./struct/Tree\";\r\nimport { Vec2 } from \"./struct/Vec2\";\r\nimport * as Test from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nimport { Uri } from \"./Uri\";\r\nimport * as Util from \"./Util\";\r\nexport function integrate(alias) {\r\n    let stringAlias = false;\r\n    let objectAlias = false;\r\n    let list = [\r\n        { name: \"Arr\", object: Arr },\r\n        { name: \"Calc\", object: Calc },\r\n        { name: \"Dom\", object: Dom },\r\n        { name: \"MocData\", object: MocData },\r\n        { name: \"Obj\", object: Obj },\r\n        { name: \"Initable\", object: Initable },\r\n        { name: \"Poolable\", object: Poolable },\r\n        { name: \"Pool\", object: Pool },\r\n        { name: \"Dictionary\", object: Dictionary },\r\n        { name: \"KeyValuePair\", object: KeyValuePair },\r\n        { name: \"List\", object: List },\r\n        { name: \"Range2\", object: Range2 },\r\n        { name: \"Rect\", object: Rect },\r\n        { name: \"Stack\", object: Stack },\r\n        { name: \"Tree\", object: Tree },\r\n        { name: \"Vec2\", object: Vec2 },\r\n        { name: \"Test\", object: Test },\r\n        { name: \"Timer\", object: Timer },\r\n        { name: \"Uri\", object: Uri },\r\n        { name: \"Util\", object: Util },\r\n    ];\r\n    if (typeof (alias) === \"string\") {\r\n        Global.window[alias] = {};\r\n        stringAlias = true;\r\n    }\r\n    for (const stuff of list) {\r\n        if (stringAlias) {\r\n            Global.window[alias][stuff.name] = stuff.object;\r\n        }\r\n        else if (objectAlias) {\r\n            alias[stuff.name] = stuff.object;\r\n        }\r\n        else {\r\n            Global.window[stuff.name] = stuff.object;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Integration.js.map","import { rotationRad } from \"../Calc\";\r\nexport class Vec2Const {\r\n}\r\nVec2Const.EPSILON = 1e-8;\r\nVec2Const.IDENTITY = { x: 1, y: 1 };\r\nVec2Const.X_DIM = { x: 1, y: 0 };\r\nVec2Const.Y_DIM = { x: 0, y: 1 };\r\nexport class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.angle = this.horizontalAngle;\r\n        this.direction = this.horizontalAngle;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    create(x = 0, y = 0) {\r\n        return new (this.constructor)(x, y);\r\n    }\r\n    set(src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.x, this.y);\r\n        return result;\r\n    }\r\n    toInt() {\r\n        this.x |= 0;\r\n        this.y |= 0;\r\n        return this;\r\n    }\r\n    ceil() {\r\n        this.x = Math.ceil(this.x);\r\n        this.y = Math.ceil(this.y);\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.x += Vec2Const.EPSILON;\r\n        this.y += Vec2Const.EPSILON;\r\n        return this;\r\n    }\r\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\r\n    length() { return Math.sqrt(this.lengthSq()); }\r\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\r\n    rotate(angle) {\r\n        const rot = rotationRad(angle);\r\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\r\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\r\n        this.x = nx;\r\n        this.y = ny;\r\n        return this;\r\n    }\r\n    rotateAround(center, angle) {\r\n        return this.subtract(center).rotate(angle).add(center);\r\n    }\r\n    normalize() {\r\n        const len = this.length();\r\n        if (len === 0) {\r\n            this.x = 1;\r\n            this.y = 0;\r\n        }\r\n        else {\r\n            this.x = this.x / len;\r\n            this.y = this.y / len;\r\n        }\r\n        return this;\r\n    }\r\n    scale(vectorB) {\r\n        this.x = this.x * vectorB.x;\r\n        this.y = this.y * vectorB.y;\r\n        return this;\r\n    }\r\n    relate(vectorB) {\r\n        this.x = this.x / vectorB.x;\r\n        this.y = this.y / vectorB.y;\r\n        return this;\r\n    }\r\n    multiply(scalar) {\r\n        this.x = this.x * scalar;\r\n        this.y = this.y * scalar;\r\n        return this;\r\n    }\r\n    add(vectorB) {\r\n        this.x = this.x + vectorB.x;\r\n        this.y = this.y + vectorB.y;\r\n        return this;\r\n    }\r\n    subtract(vectorB) {\r\n        this.x = this.x - vectorB.x;\r\n        this.y = this.y - vectorB.y;\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n    equals(target) {\r\n        return this.x === target.x && this.y === target.y;\r\n    }\r\n    almostEquals(target) {\r\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\r\n    }\r\n    getNormal(isNormalized) {\r\n        const result = this.clone();\r\n        if (!isNormalized) {\r\n            result.set(this).normalize();\r\n        }\r\n        const temp = result.x;\r\n        result.x = result.y;\r\n        result.y = -temp;\r\n        return result;\r\n    }\r\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\r\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\r\n    projectOnto(vectorB) {\r\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\r\n        this.x = coeff * vectorB.x;\r\n        this.y = coeff * vectorB.y;\r\n        return this;\r\n    }\r\n    verticalAngle() { return Math.atan2(this.x, this.y); }\r\n    rotateBy(rotation) {\r\n        const angle = -this.horizontalAngle() + rotation;\r\n        return this.rotate(angle);\r\n    }\r\n    max(v) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        return this;\r\n    }\r\n    min(v) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        return this;\r\n    }\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Rect {\r\n    get isZero() {\r\n        return this.start.isZero && this.stop.isZero;\r\n    }\r\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        this.start = new Vec2(x1, y1);\r\n        this.stop = new Vec2(x2, y2);\r\n        this.endInclusive = endInclusive;\r\n    }\r\n    create(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        return new (this.constructor)(x1, y1, x2, y2, endInclusive);\r\n    }\r\n    set(src) {\r\n        this.start.set(src.start);\r\n        this.stop.set(src.stop);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.start.x, this.start.y, this.stop.x, this.stop.y);\r\n        return result;\r\n    }\r\n    toRange2(out) {\r\n        let result = out || new Range2();\r\n        let start = this.start;\r\n        let stop = this.stop;\r\n        result.pos.x = start.x;\r\n        result.pos.y = start.y;\r\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\r\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        const ow = this.stop.x - this.start.x;\r\n        const oh = this.stop.y - this.start.y;\r\n        let w = ow;\r\n        let h = oh;\r\n        w *= factor.x;\r\n        h *= factor.y;\r\n        if (keepCenter) {\r\n            this.start.x -= (w - ow) / 2;\r\n            this.start.y -= (h - oh) / 2;\r\n        }\r\n        this.stop.x = this.start.x + w;\r\n        this.stop.y = this.start.y + h;\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.start.scale(system);\r\n        this.stop.scale(system);\r\n        return this;\r\n    }\r\n    equals(rect) {\r\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\r\n    }\r\n    toInt() {\r\n        this.start.toInt();\r\n        this.stop.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.start.toDecimal();\r\n        this.stop.toDecimal();\r\n        return this;\r\n    }\r\n    area() {\r\n        const x = this.stop.x - this.start.x;\r\n        const y = this.stop.y - this.start.y;\r\n        return x * y;\r\n    }\r\n    move(vec) {\r\n        this.start.add(vec);\r\n        this.stop.add(vec);\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.start.x <= target.start.x &&\r\n            this.start.y <= target.start.y &&\r\n            this.stop.x >= target.stop.x &&\r\n            this.stop.y >= target.stop.y;\r\n    }\r\n    intersect(target) {\r\n        return this.containsPoint(target.start.x, target.start.y) ||\r\n            this.containsPoint(target.stop.x, target.stop.y) ||\r\n            this.containsPoint(target.start.x, target.stop.y) ||\r\n            this.containsPoint(target.stop.x, target.start.y);\r\n    }\r\n    containsPoint(x, y) {\r\n        return this.start.x <= x && this.stop.x >= x &&\r\n            this.start.y <= y && this.stop.y >= y;\r\n    }\r\n    zero() {\r\n        this.start.zero();\r\n        this.stop.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Range2 {\r\n    get isZero() {\r\n        return this.pos.isZero && this.size.isZero;\r\n    }\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.pos = new Vec2(x, y);\r\n        this.size = new Vec2(w, h);\r\n    }\r\n    create(x = 0, y = 0, w = 0, h = 0) {\r\n        return new (this.constructor)(x, y, w, h);\r\n    }\r\n    set(src) {\r\n        this.pos.set(src.pos);\r\n        this.size.set(src.size);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.pos.x, this.pos.y, this.size.x, this.size.y);\r\n        return result;\r\n    }\r\n    toRect(endInclusive = false, out) {\r\n        let result = out || new Rect();\r\n        result.start.x = this.pos.x,\r\n            result.start.y = this.pos.y,\r\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\r\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\r\n            result.endInclusive = endInclusive;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        let org = null;\r\n        if (keepCenter) {\r\n            org = this.size.clone();\r\n        }\r\n        this.size.scale(factor);\r\n        if (keepCenter) {\r\n            this.pos.add(org.subtract(this.size).multiply(0.5));\r\n        }\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.toRect(false).translate(system).toRange2(this);\r\n        return this;\r\n    }\r\n    toInt() {\r\n        this.pos.toInt();\r\n        this.size.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.pos.toDecimal();\r\n        this.size.toDecimal();\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.pos.x <= target.pos.x &&\r\n            this.pos.y <= target.pos.y &&\r\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\r\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\r\n    }\r\n    intersect(target) {\r\n        let s = this.toRect();\r\n        let t = target.clone().toRect();\r\n        return s.intersect(t);\r\n    }\r\n    containsPoint(vec) {\r\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\r\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\r\n    }\r\n    first(fn) {\r\n        const p = new Vec2();\r\n        const x = this.pos.x;\r\n        const y = this.pos.y;\r\n        for (let i = 0; i < this.size.x; i++) {\r\n            for (let j = 0; j < this.size.y; j++) {\r\n                p.x = i + x, p.y = j + y;\r\n                if (fn(p)) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    forEach(fn, start = null) {\r\n        const pos = new Vec2();\r\n        const begin = this.pos.clone().toInt();\r\n        if (start === null || !this.containsPoint(start)) {\r\n            start = begin;\r\n        }\r\n        const end = this.pos.clone().add(this.size).toInt();\r\n        for (let y = begin.y; y < end.y; y += 1) {\r\n            for (let x = begin.x; x < end.x; x += 1) {\r\n                if (y < start.y || (y === start.y && x < start.x)) {\r\n                    continue;\r\n                }\r\n                pos.x = x;\r\n                pos.y = y;\r\n                const brk = fn(pos);\r\n                if (brk) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    equals(range) {\r\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\r\n    }\r\n    zero() {\r\n        this.pos.zero();\r\n        this.size.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\r\nvar win;\r\nif (typeof (window) === \"undefined\") {\r\n    win = null;\r\n    nativeWindow = false;\r\n}\r\nelse {\r\n    win = window;\r\n}\r\nexport class _Global {\r\n    constructor() {\r\n        this._window = win;\r\n        this._nativeWindow = nativeWindow;\r\n    }\r\n    get window() {\r\n        return this._window;\r\n    }\r\n    set window(v) {\r\n        this._window = v;\r\n        if (this.hasNativeWindow) {\r\n            win = v;\r\n        }\r\n    }\r\n    get hasNativeWindow() {\r\n        return this._nativeWindow;\r\n    }\r\n}\r\nexport let Global = new _Global();\r\n//# sourceMappingURL=Global.js.map","import { forEach } from \"../Arr\";\r\nimport { clone, setProperties, wipe } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Dictionary {\r\n    constructor() {\r\n        this._lookup = Object.create(null);\r\n        this._list = new List();\r\n        this._isDirty = false;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    has(key) {\r\n        return this._lookup[key] !== undefined;\r\n    }\r\n    contains(key) {\r\n        return this.has(key);\r\n    }\r\n    get(key) {\r\n        return this._lookup[key];\r\n    }\r\n    set(key, value) {\r\n        this._isDirty = this._isDirty || this.has(key);\r\n        if (value !== undefined) {\r\n            this._lookup[key] = value;\r\n            if (!this._isDirty) {\r\n                this._list.push(value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        if (this.has(key)) {\r\n            delete this._lookup[key];\r\n            this._isDirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        wipe(this._lookup);\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    get values() {\r\n        this.cleanList();\r\n        return this._list.values;\r\n    }\r\n    get keys() {\r\n        return Object.keys(this._lookup);\r\n    }\r\n    get list() {\r\n        this.cleanList();\r\n        return this._list;\r\n    }\r\n    get count() {\r\n        let result = 0;\r\n        if (this._isDirty) {\r\n            result = this.keys.length;\r\n        }\r\n        else {\r\n            result = this._list.count;\r\n        }\r\n        return result;\r\n    }\r\n    cleanList() {\r\n        if (this._isDirty) {\r\n            this.reCreateList();\r\n        }\r\n    }\r\n    reCreateList() {\r\n        let lookup = this._lookup;\r\n        let keys = Object.keys(this._lookup);\r\n        let i = -1;\r\n        let list = this._list;\r\n        list.clear();\r\n        while (++i < keys.length) {\r\n            list.add(lookup[keys[i]]);\r\n        }\r\n    }\r\n    clone() {\r\n        let result = this.create();\r\n        result._isDirty = this._isDirty;\r\n        result._list = this._list.clone();\r\n        result._lookup = clone(this._lookup);\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this._lookup;\r\n    }\r\n    serialize() {\r\n        let obj = Object.create(null);\r\n        forEach(this.keys, (key) => {\r\n            let v = this.get(key);\r\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\r\n        });\r\n        return obj;\r\n    }\r\n    deserialize(obj, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        this.clear();\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.deserialize)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else {\r\n                for (let key of Object.keys(obj)) {\r\n                    let newT = new T();\r\n                    setProperties(newT, obj[key]);\r\n                    this.set(key, newT);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let key of Object.keys(obj)) {\r\n                this.set(key, obj[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\r\nimport { clone, equals } from \"../Obj\";\r\nimport { isArray, isFunction, isNotNullOrUndefined } from \"../Test\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nexport class List {\r\n    constructor(arr) {\r\n        this._array = [];\r\n        this._index = null;\r\n        this._indexer = null;\r\n        if (arr === undefined) {\r\n            this._array = new Array();\r\n        }\r\n        else {\r\n            if (arr instanceof (List)) {\r\n                this._array = Arr.shallowCopy(arr._array);\r\n            }\r\n            else {\r\n                this._array = Arr.shallowCopy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(arr) {\r\n        return new (this.constructor)(arr);\r\n    }\r\n    get values() {\r\n        return this._array;\r\n    }\r\n    get(pos) {\r\n        return this._array[pos];\r\n    }\r\n    getByIndex(key) {\r\n        let result;\r\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\r\n    }\r\n    set(pos, v) {\r\n        if (pos >= 0 && pos < this.length) {\r\n            this._array[pos | 0] = v;\r\n            if (this._indexer !== null) {\r\n                this._index.set(this._indexer(v), v);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\r\n        }\r\n        return this;\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    get length() {\r\n        return this._array.length;\r\n    }\r\n    get indexer() {\r\n        return this._indexer;\r\n    }\r\n    set indexer(fn) {\r\n        this._indexer = fn;\r\n        this._reindex();\r\n    }\r\n    _reindex() {\r\n        if (this._indexer === null) {\r\n            this._index = null;\r\n        }\r\n        else {\r\n            if (this._index === null) {\r\n                this._index = new Dictionary();\r\n            }\r\n            else {\r\n                this._index.clear();\r\n            }\r\n            this.forEach((el) => this._index.set(this._indexer(el), el));\r\n        }\r\n    }\r\n    fill(size, populator) {\r\n        size = Math.max(0, size || 0);\r\n        if (isFunction(populator)) {\r\n            this._array = Arr.create(size, populator);\r\n        }\r\n        else if (!(populator instanceof Object)) {\r\n            this._array = Arr.create(size, () => populator);\r\n        }\r\n        else {\r\n            this._array = Arr.create(size, () => clone(populator));\r\n        }\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._array.length = 0;\r\n        if (this._index !== null) {\r\n            this._index.clear();\r\n        }\r\n        return this;\r\n    }\r\n    add(v) {\r\n        this._array.push(v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    insertAt(pos, v) {\r\n        Arr.insertAt(this._array, pos, v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    push(v) {\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this._array.push(v);\r\n    }\r\n    pop() {\r\n        let result = this._array.pop();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    shift() {\r\n        let result = this._array.shift();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    concat(v) {\r\n        let arr;\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        arr = Arr.concat(this._array, arr2);\r\n        return this.create(arr);\r\n    }\r\n    index(arr) {\r\n        if (this._indexer !== null) {\r\n            Arr.forEach(arr, (el) => {\r\n                this._index.set(this._indexer(el), el);\r\n            });\r\n        }\r\n    }\r\n    unindexEl(el) {\r\n        if (this._indexer !== null) {\r\n            this._index.delete(this._indexer(el));\r\n        }\r\n    }\r\n    append(v) {\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        Arr.append(this._array, arr2);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.deepCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    shallowCopy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.shallowCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = Arr.deepCopy(this._array);\r\n        let result = this.create(arr);\r\n        if (this._indexer !== null) {\r\n            result._indexer = this._indexer;\r\n            result._index = this._index.clone();\r\n        }\r\n        return result;\r\n    }\r\n    remove(v) {\r\n        Arr.remove(this._array, v);\r\n        this.unindexEl(v);\r\n        return this;\r\n    }\r\n    removeFirst(fn) {\r\n        let result = this.removeAt(this.indexOf(fn));\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    removeAt(n) {\r\n        let result = Arr.removeAt(this._array, n);\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        Arr.forEach(this._array, fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        Arr.forSome(this._array, filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        Arr.until(this._array, fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        Arr.reverseForEach(this._array, fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        Arr.reverseUntil(this._array, fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return Arr.some(this._array, fn);\r\n    }\r\n    all(fn) {\r\n        return Arr.all(this._array, fn);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (isFunction(v)) {\r\n            result = Arr.indexOf(this._array, v);\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        let result = false;\r\n        if (isFunction(v)) {\r\n            result = this.find(v) !== undefined;\r\n        }\r\n        else {\r\n            if (this._indexer !== null) {\r\n                result = this._index.contains(this._indexer(v));\r\n            }\r\n            else {\r\n                result = Arr.indexOfElement(this._array, v) !== -1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    reverse() {\r\n        Arr.reverse(this._array);\r\n        return this;\r\n    }\r\n    first(fn) {\r\n        let index = -1;\r\n        let result;\r\n        if (fn === undefined) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = Arr.indexOf(this._array, fn);\r\n        }\r\n        return index === -1 ? undefined : this.get(index);\r\n    }\r\n    find(fn) {\r\n        return this.first(fn);\r\n    }\r\n    last() {\r\n        return this.length === 0 ? undefined : this.get(this.length - 1);\r\n    }\r\n    filter(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.filterInto(arr, this._array, fn);\r\n        this.index(arr);\r\n        return this;\r\n    }\r\n    head(count = 1) {\r\n        count = Math.max(0, count);\r\n        return this.create(Arr.slice(this._array, 0, count));\r\n    }\r\n    tail(count = 1) {\r\n        count = Math.min(this._array.length, count);\r\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\r\n    }\r\n    splice(pos = 0, remove = Infinity, insert = []) {\r\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    orderBy(fn) {\r\n        this._array.sort(fn);\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this.create(Arr.map(this._array, fn));\r\n    }\r\n    mapInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.mapInto(arr, this._array, fn);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return Arr.reduce(this._array, fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return Arr.reduceUntil(this._array, fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return Arr.reverseReduce(this._array, fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._array, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        let a = this;\r\n        let count = 0;\r\n        if (a.length === b.length) {\r\n            if (a.indexer !== null) {\r\n                b.until((el) => !a.contains(el), (el, i) => ++count);\r\n            }\r\n            else {\r\n                a.until((el) => !b.contains(el), (el, i) => ++count);\r\n            }\r\n        }\r\n        return count === a.length;\r\n    }\r\n    intersect(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            short.forEach((el) => {\r\n                if (long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            long.forEach((el) => {\r\n                if (short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            result = long.clone();\r\n            short.forEach((el) => {\r\n                if (!long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            result = short.clone();\r\n            long.forEach((el) => {\r\n                if (!short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    subtract(b) {\r\n        let result = this.create();\r\n        result.indexer = this.indexer;\r\n        result = this.select((el) => !b.contains(el));\r\n        return result;\r\n    }\r\n    zip(list, fn = (t, u) => [t, u]) {\r\n        let result = this.create();\r\n        let length = list.length;\r\n        this.until(function (el, i) {\r\n            return i >= length;\r\n        }, function (el, i) {\r\n            result.push(fn(el, list.get(i)));\r\n        });\r\n        return result;\r\n    }\r\n    unzip(fn = (el) => [el[0], el[1]]) {\r\n        let result = [this.create(), this.create()];\r\n        this.forEach(function (el) {\r\n            let tuple = fn(el);\r\n            result[0].push(tuple[0]);\r\n            result[1].push(tuple[1]);\r\n        });\r\n        return result;\r\n    }\r\n    flatten(maxDepth = Infinity) {\r\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\r\n    }\r\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\r\n        let i = -1;\r\n        const len = src.length;\r\n        if (++depth > maxDepth) {\r\n            result.push(src);\r\n        }\r\n        else {\r\n            while (++i < len) {\r\n                if (isArray(src[i])) {\r\n                    this._flattenInner(src[i], maxDepth, depth, result);\r\n                }\r\n                else if (src[i] instanceof List) {\r\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\r\n                }\r\n                else {\r\n                    result.push(src[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    deserialize(array, ...types) {\r\n        Arr.deserialize(array, this._array, ...types);\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\r\nimport { equals } from \"../Obj\";\r\nimport { isFunction } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Comparer {\r\n}\r\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nexport class SortedList {\r\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\r\n        this._list = new List();\r\n        this._cmp = comparer;\r\n        if (arr === undefined) {\r\n            this._list = new List();\r\n        }\r\n        else {\r\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\r\n                this.copy(arr.values);\r\n            }\r\n            else {\r\n                this.copy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(comparer, arr) {\r\n        return new (this.constructor)(comparer, arr);\r\n    }\r\n    get values() {\r\n        return this._list.values;\r\n    }\r\n    get(pos) {\r\n        return this._list.get(pos);\r\n    }\r\n    get count() {\r\n        return this._list.length;\r\n    }\r\n    get length() {\r\n        return this._list.length;\r\n    }\r\n    get comparer() {\r\n        return this._cmp;\r\n    }\r\n    set comparer(v) {\r\n        this._cmp = v;\r\n        this.sort();\r\n    }\r\n    sort() {\r\n        this._list.orderBy(this._cmp);\r\n    }\r\n    fill(size, populator) {\r\n        this._list.fill(size, populator);\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    add(v) {\r\n        let index = this.getInsertIndex(v);\r\n        this._list.insertAt(index, v);\r\n        return this;\r\n    }\r\n    pop() {\r\n        return this._list.pop();\r\n    }\r\n    shift() {\r\n        return this._list.shift();\r\n    }\r\n    bulkAdd(v) {\r\n        if (v instanceof List || v instanceof SortedList) {\r\n            this._list.append(v.values);\r\n        }\r\n        else {\r\n            this._list.append(v);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.copy(src.values);\r\n        }\r\n        else {\r\n            this._list.copy(src);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clone() {\r\n        return this.create(this._cmp, this._list.clone());\r\n    }\r\n    remove(v) {\r\n        let index = this.indexOf(v);\r\n        if (index !== -1) {\r\n            this._list.removeAt(index);\r\n        }\r\n        return this;\r\n    }\r\n    removeAt(n) {\r\n        return this._list.removeAt(n);\r\n    }\r\n    removeFirst(fn) {\r\n        return this._list.removeFirst(fn);\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        this._list.forEach(fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        this._list.forSome(filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        this._list.until(fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        this._list.reverseForEach(fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        this._list.reverseUntil(fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return this._list.some(fn);\r\n    }\r\n    all(fn) {\r\n        return this._list.all(fn);\r\n    }\r\n    getInsertIndex(v) {\r\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (v instanceof Function) {\r\n            result = this._list.indexOf(v);\r\n        }\r\n        else {\r\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        return this.indexOf(v) !== -1;\r\n    }\r\n    first(fn) {\r\n        return this._list.first(fn);\r\n    }\r\n    find(fn) {\r\n        return this._list.find(fn);\r\n    }\r\n    last() {\r\n        return this._list.last();\r\n    }\r\n    filter(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.selectInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.selectInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    head(count = 1) {\r\n        return this.create(this.comparer, this._list.head(count));\r\n    }\r\n    tail(count = 1) {\r\n        return this.create(this.comparer, this._list.tail(count));\r\n    }\r\n    map(fn) {\r\n        return this._list.map(fn);\r\n    }\r\n    mapInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.mapInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.mapInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return this._list.reduce(fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return this._list.reduceUntil(fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return this._list.reverseReduce(fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return this._list.reverseReduceUntil(fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._list.values, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        return this.equals(b);\r\n    }\r\n    intersect(b) {\r\n        let result = this.create(this.comparer);\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 && b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (longPos < lastPos && ++i < shortLen) {\r\n                    let el = short.get(i);\r\n                    let aVsB;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if (longPos < lastPos && aVsB === 0) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                short.forEach((el) => {\r\n                    if (long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = result.bulkAdd(short.toList().intersect(long));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result;\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 || b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                result = this.create(this.comparer, long.values);\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (++i < shortLen && longPos < lastPos) {\r\n                    let el = short.get(i);\r\n                    let aVsB = -1;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n                if (i < shortLen) {\r\n                    --i;\r\n                    while (++i < shortLen) {\r\n                        result.add(short.get(i));\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                result = this.create(this.comparer, long.values);\r\n                short.forEach((el) => {\r\n                    if (!long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = this.create(this.comparer, short.toList().union(long));\r\n            }\r\n        }\r\n        else {\r\n            result = this.create(this.comparer);\r\n        }\r\n        return result;\r\n    }\r\n    toList() {\r\n        return new List(this.values);\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    deserialize(array, ...types) {\r\n        this._list.deserialize(array, ...types);\r\n        this.sort();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\r\nimport { isFunction } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Stack {\r\n    constructor(size) {\r\n        this.DEFAULT_SIZE = 100;\r\n        this._pos = 0;\r\n        this._limit = 0;\r\n        if (!size) {\r\n            size = this.DEFAULT_SIZE;\r\n        }\r\n        this.DEFAULT_SIZE = size;\r\n        this._array = new Array(size);\r\n        this.push = this.fastPush;\r\n    }\r\n    get values() {\r\n        return slice(this._array, 0, this._pos);\r\n    }\r\n    get depth() {\r\n        return this._pos;\r\n    }\r\n    get size() {\r\n        return this._pos;\r\n    }\r\n    get isEmpty() {\r\n        return this.size === 0;\r\n    }\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n    set limit(value) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        this._limit = value;\r\n        if (value === 0) {\r\n            this.push = this.fastPush;\r\n        }\r\n        else {\r\n            this.push = this.limitedPush;\r\n            this.limitObjects();\r\n        }\r\n    }\r\n    create(size) {\r\n        return new (this.constructor)(size);\r\n    }\r\n    push(obj) {\r\n    }\r\n    fastPush(obj) {\r\n        this._array[this._pos++] = obj;\r\n    }\r\n    limitedPush(obj) {\r\n        this._array[this._pos] = obj;\r\n        ++this._pos;\r\n        this.limitObjects();\r\n    }\r\n    pop() {\r\n        let result = undefined;\r\n        if (this._pos !== 0) {\r\n            result = this._array[--this._pos];\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this._array[this._pos - 1];\r\n    }\r\n    peekAt(index) {\r\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\r\n    }\r\n    toList() {\r\n        const result = new List();\r\n        return new List(this.values);\r\n    }\r\n    clear() {\r\n        this._pos = 0;\r\n        this._array.length = this.DEFAULT_SIZE;\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = deepCopy(this._array);\r\n        let result = this.create(this.DEFAULT_SIZE);\r\n        result._array = arr;\r\n        result._limit = this._limit;\r\n        result._pos = this._pos;\r\n        return result;\r\n    }\r\n    limitObjects() {\r\n        while (this._pos > this._limit) {\r\n            this._array.shift();\r\n            --this._pos;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return slice(this.values, 0, this._pos);\r\n    }\r\n    serialize() {\r\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    deserialize(array, ...types) {\r\n        deserialize(array, this._array, ...types);\r\n        this._pos = array.length;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Stack.js.map","class TimerState {\r\n}\r\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\r\nexport class Timer {\r\n    static get time() {\r\n        return TimerState._time;\r\n    }\r\n    static now() {\r\n        if (TimerState._hasPerformance) {\r\n            return performance.now();\r\n        }\r\n        else {\r\n            const hrTime = process.hrtime();\r\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\r\n        }\r\n    }\r\n    static start() {\r\n        const now = Timer.now();\r\n        TimerState._start = TimerState._last = now;\r\n        return TimerState._time = 0;\r\n    }\r\n    static stop() {\r\n        const start = TimerState._start;\r\n        const now = Timer.now();\r\n        TimerState._last = now;\r\n        return TimerState._time = now - start;\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map","import { map } from \"../Arr\";\r\nimport { clone, isSameClass, setProperties } from \"../Obj\";\r\nimport { isArray } from \"../Test\";\r\nimport { newUUID } from \"../Util\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { List } from \"./List\";\r\nimport { Stack } from \"./Stack\";\r\nexport class Tree {\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.parent = null;\r\n        this.children = null;\r\n        this.data = null;\r\n        this.virtual = false;\r\n        this.id = newUUID();\r\n    }\r\n    static fromObject(obj) {\r\n        const parent = (this instanceof Tree) ? this : null;\r\n        const root = new Tree().init({ id: obj.id || newUUID(), data: obj.data, parent });\r\n        if (obj.children !== undefined && isArray(obj.children)) {\r\n            root.children = new List(map(obj.children, Tree.fromObject.bind(root)));\r\n        }\r\n        return root;\r\n    }\r\n    static fromNodeList(nodes, mapcfg, virtualRoot = false) {\r\n        let result = new Tree();\r\n        let mapResolver = (key) => {\r\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\r\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\r\n                    mapcfg[key];\r\n        };\r\n        let map = {\r\n            id: mapResolver(\"id\"),\r\n            parent: mapResolver(\"parent\"),\r\n            data: mapResolver(\"data\")\r\n        };\r\n        let list = new List(nodes);\r\n        let lookup = new Dictionary();\r\n        list.forEach((el, i) => {\r\n            let node = new Tree().init({ id: map.id(el), data: map.data(el) });\r\n            lookup.set(node.id, node);\r\n        });\r\n        let rootNodes = new List();\r\n        list.forEach((el, i) => {\r\n            let parent = map.parent(el);\r\n            if (lookup.contains(parent)) {\r\n                lookup.get(parent).add(lookup.get(map.id(el)));\r\n            }\r\n            else {\r\n                rootNodes.add(lookup.get(map.id(el)));\r\n            }\r\n        });\r\n        if (virtualRoot === false) {\r\n            result = rootNodes.first();\r\n        }\r\n        else {\r\n            result = new Tree().init({ id: newUUID(), virtual: true });\r\n            rootNodes.forEach((el) => result.add(el));\r\n        }\r\n        return result;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    init(obj) {\r\n        setProperties(this, obj);\r\n        return this;\r\n    }\r\n    insertAt(pos, data) {\r\n        if (this.children === null || this.children.count <= pos) {\r\n            this.add(data);\r\n        }\r\n        else {\r\n            this.children.insertAt(pos, this.create().init({ data, parent: this }));\r\n        }\r\n    }\r\n    add(data) {\r\n        if (this.children === null) {\r\n            this.children = new List();\r\n        }\r\n        if (isSameClass(data, this)) {\r\n            data.parent = this;\r\n            this.children.add(data);\r\n        }\r\n        else {\r\n            this.children.add((this.create()).init({ data: data, parent: this }));\r\n        }\r\n    }\r\n    remove() {\r\n        if (this.parent !== null) {\r\n            this.parent.children.remove(this);\r\n        }\r\n    }\r\n    prune() {\r\n        if (this.children !== null) {\r\n            this.children\r\n                .forEach(function (el, i) {\r\n                el.parent = null;\r\n            })\r\n                .clear();\r\n        }\r\n        this.children = null;\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        const stack = new Stack();\r\n        let acc = start;\r\n        if (!fn) {\r\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\r\n        }\r\n        if (start === undefined) {\r\n            acc = [];\r\n        }\r\n        let cur;\r\n        let i;\r\n        stack.push(this);\r\n        while (cur = stack.pop()) {\r\n            acc = fn(acc, cur);\r\n            i = (cur.children && cur.children.count) || 0;\r\n            while (i--) {\r\n                stack.push(cur.children.get(i));\r\n            }\r\n        }\r\n        return acc;\r\n    }\r\n    clone() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children === null ? null : this.children.clone();\r\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\r\n        return result;\r\n    }\r\n    duplicateNode() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children;\r\n        result.data = this.data;\r\n        return result;\r\n    }\r\n    filter(condition) {\r\n        const root = this.duplicateNode();\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            root.children =\r\n                root.children\r\n                    .select(condition)\r\n                    .map(function (el, i) {\r\n                    return el.filter(condition);\r\n                });\r\n        }\r\n        return root;\r\n    }\r\n    select(condition, acc = new List()) {\r\n        const result = acc;\r\n        const children = this.children;\r\n        if (condition === undefined || condition(this)) {\r\n            result.add(this);\r\n        }\r\n        if (children) {\r\n            children.reduce(function (acc, cur) {\r\n                return cur.select(condition, acc);\r\n            }, result);\r\n        }\r\n        return result;\r\n    }\r\n    find(condition) {\r\n        let result = null;\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            let i = -1;\r\n            const len = this.children.count;\r\n            const val = this.children.values;\r\n            while (++i < len) {\r\n                if (condition(val[i].data)) {\r\n                    result = val[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    result = val[i].children !== null ? val[i].find(condition) : null;\r\n                    if (result !== null) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    contains(condition) {\r\n        return this.find(condition) !== null;\r\n    }\r\n    depth() {\r\n        let result = 0;\r\n        let node = this;\r\n        while (node.parent) {\r\n            node = node.parent;\r\n            ++result;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.toJSON()));\r\n        }\r\n        return result.toJSON();\r\n    }\r\n    serialize() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.serialize()));\r\n        }\r\n        return result.serialize();\r\n    }\r\n}\r\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\r\nexport class Uri {\r\n    constructor() {\r\n        this._a = null;\r\n        this.hash = \"\";\r\n        this.pathName = \"\";\r\n        this.port = \"\";\r\n        this.hostName = \"\";\r\n        this.protocol = \"\";\r\n        this.origin = \"\";\r\n        this.full = \"\";\r\n        this.args = {};\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (Global.window !== null) {\r\n            this._a = Global.window.document.createElement(\"a\");\r\n            this._a.setAttribute(\"href\", Global.window.location.href);\r\n            const args = this.args;\r\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\r\n                const p = arg.split(\"=\");\r\n                args[p[0]] = p[1];\r\n            });\r\n            this.hash = this._a.hash;\r\n            this.pathName = this._a.pathname;\r\n            this.port = this._a.port;\r\n            this.hostName = this._a.hostname;\r\n            this.protocol = this._a.protocol;\r\n            this.origin = this._a.origin;\r\n            this.full = this._a.href;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    descriptor.value = function (...args) {\r\n        let result = new Promise((resolve, reject) => {\r\n            let value;\r\n            try {\r\n                value = orgFn.apply(this, args);\r\n                resolve(value);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    return descriptor;\r\n};\r\nasync.before = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                decoration.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    callback();\r\n                })\r\n                    .catch((reason) => {\r\n                    callback();\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.after = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = (value, reason) => {\r\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                orgFn.apply(this, args)\r\n                    .then((value) => {\r\n                    callback(value, undefined);\r\n                })\r\n                    .catch((reason) => {\r\n                    callback(undefined, reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.provided = function (async_predicate) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                async_predicate.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    if (value) {\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        reject(false);\r\n                    }\r\n                })\r\n                    .catch((reason) => {\r\n                    reject(reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\r\n    constructor(cls, growthStep = 10) {\r\n        this._pool = [];\r\n        this._available = 0;\r\n        this._size = 0;\r\n        this._cls = cls;\r\n        this._growthStep = growthStep;\r\n        this.create();\r\n    }\r\n    get available() {\r\n        return this._available;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    create() {\r\n        let i = 0;\r\n        for (; i < this._growthStep; i++) {\r\n            this._pool.push(new this._cls());\r\n        }\r\n        this._size += this._growthStep;\r\n        this._available += this._growthStep;\r\n    }\r\n    get() {\r\n        let result;\r\n        if (this._pool.length === 0) {\r\n            this.create();\r\n        }\r\n        result = this._pool.pop();\r\n        --this._available;\r\n        result.initPool(this);\r\n        return result;\r\n    }\r\n    release(obj) {\r\n        this._pool.push(obj);\r\n        ++this._available;\r\n    }\r\n}\r\n//# sourceMappingURL=Pool.js.map","export class KeyValuePair {\r\n}\r\n//# sourceMappingURL=KeyValuePair.js.map"],"names":["sign","x","NaN","rotationDeg","rotation","deg","CalcConst","ROTATION_DEGREE_PRECISION","DEG360","ROTATION_LOOKUP","rotationRad","DEGREE_FACTOR","this","closestRadianRotation","radian","RADIAN_FACTOR","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","Object","prototype","toString","call","isElement","target","nodeType","isFunction","isNumber","isInt","isString","isNotNullOrUndefined","constructor","String","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","areUndefined","areNotUndefined","isUndefined","isNotUndefined","destroy","obj","setNull","wipe","keys","clear","key","isClassOf","b","isSameClass","inherits","equals","isDifferent","shallowCopy","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","arrS","arrT","mixin","exclude","sources","flatten","hasOwnProperty","setProperties","values","mapping","value","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","splice","pos","remove","insert","Error","srcLen","max","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","removeOneByFn","shallowCopyInto","shallowFill","at","deepCopyInto","deepFill","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","create","populator","deserialize","types","T","passthroughT","newT","init","win","getFunctionName","name","fnString","substring","getFunctionCode","lastIndexOf","newUUID","d","Timer","now","replace","c","r","random","floor","newInt","UtilState","_int","callDebugger","pipeOut","log","warn","error","proxyFn","superfn","assert","assertion","message","isDebug","objOrClass","fnName","bind","loop","toArray","DomState","_window","_document","document","_el","createElement","html","attr","innerHTML","children","setAttr","outerHTML","appendChild","get","k","styles","styleKeys","style","setProperty","join","setAttribute","parentNode","removeChild","replaceChild","id","getElementById","body","find","selector","querySelector","findAll","root","querySelectorAll","is","findParent","parentElement","position","y","top","matches","msMatchesSelector","webkitMatchesSelector","setStylesExplicitly","comp","getComputedStyle","Poolable","Base","[object Object]","__pool__","release","pool","super","Initable","base","before","decoration","propertyKey","descriptor","orgFn","after","around","provided","condition","randomString","VALID_CHARS","charAt","randomInt","randomNumber","numericArray","type","MocDataType","LinearInt","RandomInt","LinearFloat","RandomFloat","stringArray","arrayLength","stringLength","integrate","alias","stringAlias","list","object","Arr","Calc","Dom","MocData","Obj","Pool","Dictionary","KeyValuePair","List","Range2","Rect","Stack","Tree","Vec2","Test","Uri","Util","stuff","PI","lookup","cos","sin","Vec2Const","EPSILON","IDENTITY","X_DIM","Y_DIM","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","stop","x1","y1","x2","y2","endInclusive","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","_Global","_nativeWindow","hasNativeWindow","_lookup","_list","_isDirty","has","cleanList","reCreateList","serialize","_array","_index","_indexer","Arr.shallowCopy","indexer","_reindex","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","select","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","SortedList","comparer","_cmp","copy","orderBy","fill","getInsertIndex","removeFirst","Function","last","selectInto","head","tail","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","parent","data","virtual","fromObject","nodes","mapcfg","virtualRoot","mapResolver","node","rootNodes","stack","cur","duplicateNode","toJSON","Sides","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","Promise","resolve","reject","err","callback","then","catch","reason","async_predicate","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool"],"mappings":"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"}