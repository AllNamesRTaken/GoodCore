{"version":3,"file":"goodcore.es6.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/standard/mixins/Initable.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/standard/Combinators.js","lib/MocData.js","lib/Integration.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/struct/KeyValuePair.js"],"sourcesContent":["export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        result = deepCopy(obj);\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    sources = flatten(sources);\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","import { setProperties } from \"../../Obj\";\nexport function Initable(constructor) {\n    return class extends constructor {\n        init(obj, mapping) {\n            setProperties(this, obj, mapping);\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=Initable.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export function Poolable(constructor) {\n    return class extends constructor {\n        constructor(...args) {\n            super(...args);\n        }\n        release() {\n            this.__pool__.release(this);\n        }\n        initPool(pool) {\n            this.__pool__ = pool;\n        }\n    };\n}\n//# sourceMappingURL=Poolable.js.map","export function before(decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            decoration.apply(this, [orgFn.name].concat(args));\n            const result = orgFn.apply(this, args);\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function after(decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\n            decoration.apply(this, args);\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function around(decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result;\n            let callback = () => result = orgFn.apply(this, args);\n            decoration.apply(this, [callback, orgFn.name].concat(args));\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function provided(condition) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result;\n            if (condition.apply(this, [orgFn.name].concat(args))) {\n                result = orgFn.apply(this, args);\n            }\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function once(target, propertyKey, descriptor) {\n    const orgFn = descriptor.value;\n    let result;\n    let first = true;\n    descriptor.value = function (...args) {\n        if (first) {\n            result = orgFn.apply(this, args);\n            first = false;\n        }\n        return result;\n    };\n    return descriptor;\n}\n//# sourceMappingURL=Combinators.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","import * as Arr from \"./Arr\";\nimport * as Calc from \"./Calc\";\nimport * as Dom from \"./Dom\";\nimport { Global } from \"./Global\";\nimport * as MocData from \"./MocData\";\nimport * as Obj from \"./Obj\";\nimport { Initable } from \"./standard/mixins/Initable\";\nimport { Poolable } from \"./standard/mixins/Poolable\";\nimport { Pool } from \"./standard/Pool\";\nimport { Dictionary } from \"./struct/Dictionary\";\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\nimport { List } from \"./struct/List\";\nimport { Range2 } from \"./struct/Range2\";\nimport { Rect } from \"./struct/Rect\";\nimport { Stack } from \"./struct/Stack\";\nimport { Tree } from \"./struct/Tree\";\nimport { Vec2 } from \"./struct/Vec2\";\nimport * as Test from \"./Test\";\nimport { Timer } from \"./Timer\";\nimport { Uri } from \"./Uri\";\nimport * as Util from \"./Util\";\nexport function integrate(alias) {\n    let stringAlias = false;\n    let objectAlias = false;\n    let list = [\n        { name: \"Arr\", object: Arr },\n        { name: \"Calc\", object: Calc },\n        { name: \"Dom\", object: Dom },\n        { name: \"MocData\", object: MocData },\n        { name: \"Obj\", object: Obj },\n        { name: \"Initable\", object: Initable },\n        { name: \"Poolable\", object: Poolable },\n        { name: \"Pool\", object: Pool },\n        { name: \"Dictionary\", object: Dictionary },\n        { name: \"KeyValuePair\", object: KeyValuePair },\n        { name: \"List\", object: List },\n        { name: \"Range2\", object: Range2 },\n        { name: \"Rect\", object: Rect },\n        { name: \"Stack\", object: Stack },\n        { name: \"Tree\", object: Tree },\n        { name: \"Vec2\", object: Vec2 },\n        { name: \"Test\", object: Test },\n        { name: \"Timer\", object: Timer },\n        { name: \"Uri\", object: Uri },\n        { name: \"Util\", object: Util },\n    ];\n    if (typeof (alias) === \"string\") {\n        Global.window[alias] = {};\n        stringAlias = true;\n    }\n    for (const stuff of list) {\n        if (stringAlias) {\n            Global.window[alias][stuff.name] = stuff.object;\n        }\n        else if (objectAlias) {\n            alias[stuff.name] = stuff.object;\n        }\n        else {\n            Global.window[stuff.name] = stuff.object;\n        }\n    }\n}\n//# sourceMappingURL=Integration.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\nimport { Vec2 } from \"./Vec2\";\nexport class Rect {\n    get isZero() {\n        return this.start.isZero && this.stop.isZero;\n    }\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\n        this.start = new Vec2(x1, y1);\n        this.stop = new Vec2(x2, y2);\n        this.endInclusive = endInclusive;\n    }\n    create(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\n        return new (this.constructor)(x1, y1, x2, y2, endInclusive);\n    }\n    set(src) {\n        this.start.set(src.start);\n        this.stop.set(src.stop);\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.start.x, this.start.y, this.stop.x, this.stop.y);\n        return result;\n    }\n    toRange2(out) {\n        let result = out || new Range2();\n        let start = this.start;\n        let stop = this.stop;\n        result.pos.x = start.x;\n        result.pos.y = start.y;\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\n        return result;\n    }\n    scale(factor, keepCenter = true) {\n        const ow = this.stop.x - this.start.x;\n        const oh = this.stop.y - this.start.y;\n        let w = ow;\n        let h = oh;\n        w *= factor.x;\n        h *= factor.y;\n        if (keepCenter) {\n            this.start.x -= (w - ow) / 2;\n            this.start.y -= (h - oh) / 2;\n        }\n        this.stop.x = this.start.x + w;\n        this.stop.y = this.start.y + h;\n        return this;\n    }\n    translate(system) {\n        this.start.scale(system);\n        this.stop.scale(system);\n        return this;\n    }\n    equals(rect) {\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\n    }\n    toInt() {\n        this.start.toInt();\n        this.stop.toInt();\n        return this;\n    }\n    toDecimal() {\n        this.start.toDecimal();\n        this.stop.toDecimal();\n        return this;\n    }\n    area() {\n        const x = this.stop.x - this.start.x;\n        const y = this.stop.y - this.start.y;\n        return x * y;\n    }\n    move(vec) {\n        this.start.add(vec);\n        this.stop.add(vec);\n        return this;\n    }\n    contains(target) {\n        return this.start.x <= target.start.x &&\n            this.start.y <= target.start.y &&\n            this.stop.x >= target.stop.x &&\n            this.stop.y >= target.stop.y;\n    }\n    intersect(target) {\n        return this.containsPoint(target.start.x, target.start.y) ||\n            this.containsPoint(target.stop.x, target.stop.y) ||\n            this.containsPoint(target.start.x, target.stop.y) ||\n            this.containsPoint(target.stop.x, target.start.y);\n    }\n    containsPoint(x, y) {\n        return this.start.x <= x && this.stop.x >= x &&\n            this.start.y <= y && this.stop.y >= y;\n    }\n    zero() {\n        this.start.zero();\n        this.stop.zero();\n        return this;\n    }\n}\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\nimport { Vec2 } from \"./Vec2\";\nexport class Range2 {\n    get isZero() {\n        return this.pos.isZero && this.size.isZero;\n    }\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n        this.pos = new Vec2(x, y);\n        this.size = new Vec2(w, h);\n    }\n    create(x = 0, y = 0, w = 0, h = 0) {\n        return new (this.constructor)(x, y, w, h);\n    }\n    set(src) {\n        this.pos.set(src.pos);\n        this.size.set(src.size);\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.pos.x, this.pos.y, this.size.x, this.size.y);\n        return result;\n    }\n    toRect(endInclusive = false, out) {\n        let result = out || new Rect();\n        result.start.x = this.pos.x,\n            result.start.y = this.pos.y,\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\n            result.endInclusive = endInclusive;\n        return result;\n    }\n    scale(factor, keepCenter = true) {\n        let org = null;\n        if (keepCenter) {\n            org = this.size.clone();\n        }\n        this.size.scale(factor);\n        if (keepCenter) {\n            this.pos.add(org.subtract(this.size).multiply(0.5));\n        }\n        return this;\n    }\n    translate(system) {\n        this.toRect(false).translate(system).toRange2(this);\n        return this;\n    }\n    toInt() {\n        this.pos.toInt();\n        this.size.toInt();\n        return this;\n    }\n    toDecimal() {\n        this.pos.toDecimal();\n        this.size.toDecimal();\n        return this;\n    }\n    contains(target) {\n        return this.pos.x <= target.pos.x &&\n            this.pos.y <= target.pos.y &&\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\n    }\n    intersect(target) {\n        let s = this.toRect();\n        let t = target.clone().toRect();\n        return s.intersect(t);\n    }\n    containsPoint(vec) {\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\n    }\n    first(fn) {\n        const p = new Vec2();\n        const x = this.pos.x;\n        const y = this.pos.y;\n        for (let i = 0; i < this.size.x; i++) {\n            for (let j = 0; j < this.size.y; j++) {\n                p.x = i + x, p.y = j + y;\n                if (fn(p)) {\n                    return p;\n                }\n            }\n        }\n        return null;\n    }\n    forEach(fn, start = null) {\n        const pos = new Vec2();\n        const begin = this.pos.clone().toInt();\n        if (start === null || !this.containsPoint(start)) {\n            start = begin;\n        }\n        const end = this.pos.clone().add(this.size).toInt();\n        for (let y = begin.y; y < end.y; y += 1) {\n            for (let x = begin.x; x < end.x; x += 1) {\n                if (y < start.y || (y === start.y && x < start.x)) {\n                    continue;\n                }\n                pos.x = x;\n                pos.y = y;\n                const brk = fn(pos);\n                if (brk) {\n                    return;\n                }\n            }\n        }\n    }\n    equals(range) {\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\n    }\n    zero() {\n        this.pos.zero();\n        this.size.zero();\n        return this;\n    }\n}\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nimport { List } from \"./List\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new List();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.clear();\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list.values;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get list() {\n        this.cleanList();\n        return this._list;\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.count;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.clear();\n        while (++i < keys.length) {\n            list.add(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = this._list.clone();\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\nimport { clone, equals } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nimport { Dictionary } from \"./Dictionary\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = null;\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = Arr.shallowCopy(arr._array);\n            }\n            else {\n                this._array = Arr.shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index.set(this._indexer(v), v);\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = new Dictionary();\n            }\n            else {\n                this._index.clear();\n            }\n            this.forEach((el) => this._index.set(this._indexer(el), el));\n        }\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = Arr.create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = Arr.create(size, () => populator);\n        }\n        else {\n            this._array = Arr.create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            this._index.clear();\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        Arr.insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = Arr.concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            Arr.forEach(arr, (el) => {\n                this._index.set(this._indexer(el), el);\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            this._index.delete(this._indexer(el));\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        Arr.append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = Arr.deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = this._index.clone();\n        }\n        return result;\n    }\n    remove(v) {\n        Arr.remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = Arr.removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        Arr.forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        Arr.forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        Arr.until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        Arr.reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        Arr.reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return Arr.some(this._array, fn);\n    }\n    all(fn) {\n        return Arr.all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = Arr.indexOf(this._array, v);\n        }\n        else {\n            result = Arr.indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index.contains(this._indexer(v));\n            }\n            else {\n                result = Arr.indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        Arr.reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = Arr.indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(Arr.slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(Arr.map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return Arr.reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return Arr.reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return Arr.reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        Arr.deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\nimport { isFunction } from \"../Test\";\nimport { List } from \"./List\";\nexport class Stack {\n    constructor(size) {\n        this.DEFAULT_SIZE = 100;\n        this._pos = 0;\n        this._limit = 0;\n        if (!size) {\n            size = this.DEFAULT_SIZE;\n        }\n        this.DEFAULT_SIZE = size;\n        this._array = new Array(size);\n        this.push = this.fastPush;\n    }\n    get values() {\n        return slice(this._array, 0, this._pos);\n    }\n    get depth() {\n        return this._pos;\n    }\n    get size() {\n        return this._pos;\n    }\n    get isEmpty() {\n        return this.size === 0;\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(value) {\n        if (value < 0) {\n            value = 0;\n        }\n        this._limit = value;\n        if (value === 0) {\n            this.push = this.fastPush;\n        }\n        else {\n            this.push = this.limitedPush;\n            this.limitObjects();\n        }\n    }\n    create(size) {\n        return new (this.constructor)(size);\n    }\n    push(obj) {\n    }\n    fastPush(obj) {\n        this._array[this._pos++] = obj;\n    }\n    limitedPush(obj) {\n        this._array[this._pos] = obj;\n        ++this._pos;\n        this.limitObjects();\n    }\n    pop() {\n        let result = undefined;\n        if (this._pos !== 0) {\n            result = this._array[--this._pos];\n        }\n        return result;\n    }\n    peek() {\n        return this._array[this._pos - 1];\n    }\n    peekAt(index) {\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\n    }\n    toList() {\n        const result = new List();\n        return new List(this.values);\n    }\n    clear() {\n        this._pos = 0;\n        this._array.length = this.DEFAULT_SIZE;\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(this.DEFAULT_SIZE);\n        result._array = arr;\n        result._limit = this._limit;\n        result._pos = this._pos;\n        return result;\n    }\n    limitObjects() {\n        while (this._pos > this._limit) {\n            this._array.shift();\n            --this._pos;\n        }\n    }\n    toJSON() {\n        return slice(this.values, 0, this._pos);\n    }\n    serialize() {\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        this._pos = array.length;\n        return this;\n    }\n}\n//# sourceMappingURL=Stack.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { map } from \"../Arr\";\nimport { clone, isSameClass, setProperties } from \"../Obj\";\nimport { Initable } from \"../standard/mixins/Initable\";\nimport { isArray } from \"../Test\";\nimport { newUUID } from \"../Util\";\nimport { Dictionary } from \"./Dictionary\";\nimport { List } from \"./List\";\nimport { Stack } from \"./Stack\";\nlet Tree = Tree_1 = class Tree {\n    constructor(id) {\n        this.id = \"\";\n        this.parent = null;\n        this.children = null;\n        this.data = null;\n        this.virtual = false;\n        this.id = id || newUUID();\n    }\n    static fromObject(obj) {\n        const parent = (this instanceof Tree_1) ? this : null;\n        const root = new Tree_1(obj.id).init({ data: obj.data, parent });\n        if (obj.children !== undefined && isArray(obj.children)) {\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\n        }\n        return root;\n    }\n    static fromNodeList(nodes, mapcfg, virtualRoot = false) {\n        let result = new Tree_1();\n        let mapResolver = (key) => {\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\n                    mapcfg[key];\n        };\n        let map = {\n            id: mapResolver(\"id\"),\n            parent: mapResolver(\"parent\"),\n            data: mapResolver(\"data\")\n        };\n        let list = new List(nodes);\n        let lookup = new Dictionary();\n        function getLookupKey(node) {\n            return node.parent ? `${node.parent.id}_${node.id}` : \"_root_\" + node.id;\n        }\n        let nodeList = list.map((el) => new Tree_1().init({ id: map.id(el), data: map.data(el) }));\n        nodeList.forEach((node, i) => {\n            if (!lookup.has(node.id)) {\n                lookup.set(node.id, []);\n            }\n            lookup.get(node.id).push(node);\n        });\n        let rootNodes = new List();\n        list.forEach((el, i) => {\n            let parentId = map.parent(el);\n            let nodeId = map.id(el);\n            if (lookup.contains(parentId)) {\n                lookup.get(parentId).forEach((p) => p.add(nodeList.get(i)));\n            }\n            else {\n                rootNodes.add(nodeList.get(i));\n            }\n        });\n        if (virtualRoot === false) {\n            result = rootNodes.first();\n        }\n        else {\n            result = new Tree_1().init({ virtual: true });\n            rootNodes.forEach((el) => result.add(el));\n        }\n        return result;\n    }\n    create(...args) {\n        return new (this.constructor)(...args);\n    }\n    init(obj) {\n        setProperties(this, obj);\n        return this;\n    }\n    insertAt(pos, data, id) {\n        let node;\n        if (this.children === null || this.children.count <= pos) {\n            node = this.add(data);\n        }\n        else {\n            node = this.create(id).init({ data, parent: this });\n            this.children.insertAt(pos, node);\n        }\n        return node;\n    }\n    add(data, id) {\n        let node;\n        if (this.children === null) {\n            this.children = new List();\n        }\n        if (isSameClass(data, this)) {\n            node = data;\n            node.parent = this;\n            this.children.add(node);\n        }\n        else {\n            node = (this.create(id)).init({ data: data, parent: this });\n            this.children.add(node);\n        }\n        return node;\n    }\n    remove() {\n        if (this.parent !== null) {\n            this.parent.children.remove(this);\n        }\n    }\n    prune() {\n        if (this.children !== null) {\n            this.children\n                .forEach(function (el, i) {\n                el.parent = null;\n            })\n                .clear();\n        }\n        this.children = null;\n        return this;\n    }\n    reduce(fn, start) {\n        const stack = new Stack();\n        let acc = start;\n        if (!fn) {\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\n        }\n        if (start === undefined) {\n            acc = [];\n        }\n        let cur;\n        let i;\n        stack.push(this);\n        while (cur = stack.pop()) {\n            acc = fn(acc, cur);\n            i = (cur.children && cur.children.count) || 0;\n            while (i--) {\n                stack.push(cur.children.get(i));\n            }\n        }\n        return acc;\n    }\n    clone() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children === null ? null : this.children.clone();\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\n        return result;\n    }\n    duplicateNode() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children;\n        result.data = this.data;\n        return result;\n    }\n    filter(condition) {\n        const root = this.duplicateNode();\n        const children = this.children;\n        if (children !== null) {\n            root.children =\n                root.children\n                    .select(condition)\n                    .map(function (el, i) {\n                    return el.filter(condition);\n                });\n        }\n        return root;\n    }\n    select(condition, acc = new List()) {\n        const result = acc;\n        const children = this.children;\n        if (condition === undefined || condition(this)) {\n            result.add(this);\n        }\n        if (children) {\n            children.reduce(function (acc, cur) {\n                return cur.select(condition, acc);\n            }, result);\n        }\n        return result;\n    }\n    find(condition) {\n        let result = null;\n        const children = this.children;\n        if (children !== null) {\n            let i = -1;\n            const len = this.children.count;\n            const val = this.children.values;\n            while (++i < len) {\n                if (condition(val[i].data)) {\n                    result = val[i];\n                    break;\n                }\n                else {\n                    result = val[i].children !== null ? val[i].find(condition) : null;\n                    if (result !== null) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    depth() {\n        let result = 0;\n        let node = this;\n        while (node.parent) {\n            node = node.parent;\n            ++result;\n        }\n        return result;\n    }\n    sort(comparer) {\n        if (this.children !== null) {\n            this.children.orderBy(comparer);\n            this.children.forEach((el) => el.sort(comparer));\n        }\n        return this;\n    }\n    toJSON() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.toJSON()));\n        }\n        return result.toJSON();\n    }\n    serialize() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.serialize()));\n        }\n        return result.serialize();\n    }\n};\nTree = Tree_1 = __decorate([\n    Initable,\n    __metadata(\"design:paramtypes\", [Object])\n], Tree);\nexport { Tree };\nvar Tree_1;\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\nexport class Uri {\n    constructor() {\n        this._a = null;\n        this.hash = \"\";\n        this.pathName = \"\";\n        this.port = \"\";\n        this.hostName = \"\";\n        this.protocol = \"\";\n        this.origin = \"\";\n        this.full = \"\";\n        this.args = {};\n        this.init();\n    }\n    init() {\n        if (Global.window !== null) {\n            this._a = Global.window.document.createElement(\"a\");\n            this._a.setAttribute(\"href\", Global.window.location.href);\n            const args = this.args;\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\n                const p = arg.split(\"=\");\n                args[p[0]] = p[1];\n            });\n            this.hash = this._a.hash;\n            this.pathName = this._a.pathname;\n            this.port = this._a.port;\n            this.hostName = this._a.hostname;\n            this.protocol = this._a.protocol;\n            this.origin = this._a.origin;\n            this.full = this._a.href;\n        }\n    }\n}\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\n    const orgFn = descriptor.value;\n    descriptor.value = function (...args) {\n        let result = new Promise((resolve, reject) => {\n            let value;\n            try {\n                value = orgFn.apply(this, args);\n                resolve(value);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n        return result;\n    };\n    return descriptor;\n};\nasync.before = function (decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result = new Promise((resolve, reject) => {\n                const callback = () => {\n                    orgFn.apply(this, args)\n                        .then((value) => {\n                        resolve(value);\n                    })\n                        .catch((reason) => {\n                        reject(reason);\n                    });\n                };\n                decoration.apply(this, [orgFn.name].concat(args))\n                    .then((value) => {\n                    callback();\n                })\n                    .catch((reason) => {\n                    callback();\n                });\n            });\n            return result;\n        };\n        return descriptor;\n    };\n};\nasync.after = function (decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result = new Promise((resolve, reject) => {\n                const callback = (value, reason) => {\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\n                        .then((value) => {\n                        resolve(value);\n                    })\n                        .catch((reason) => {\n                        reject(reason);\n                    });\n                };\n                orgFn.apply(this, args)\n                    .then((value) => {\n                    callback(value, undefined);\n                })\n                    .catch((reason) => {\n                    callback(undefined, reason);\n                });\n            });\n            return result;\n        };\n        return descriptor;\n    };\n};\nasync.provided = function (async_predicate) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result = new Promise((resolve, reject) => {\n                const callback = () => {\n                    orgFn.apply(this, args)\n                        .then((value) => {\n                        resolve(value);\n                    })\n                        .catch((reason) => {\n                        reject(reason);\n                    });\n                };\n                async_predicate.apply(this, [orgFn.name].concat(args))\n                    .then((value) => {\n                    if (value) {\n                        callback();\n                    }\n                    else {\n                        reject(false);\n                    }\n                })\n                    .catch((reason) => {\n                    reject(reason);\n                });\n            });\n            return result;\n        };\n        return descriptor;\n    };\n};\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\n    constructor(cls, growthStep = 10) {\n        this._pool = [];\n        this._available = 0;\n        this._size = 0;\n        this._cls = cls;\n        this._growthStep = growthStep;\n        this.create();\n    }\n    get available() {\n        return this._available;\n    }\n    get size() {\n        return this._size;\n    }\n    create() {\n        let i = 0;\n        for (; i < this._growthStep; i++) {\n            this._pool.push(new this._cls());\n        }\n        this._size += this._growthStep;\n        this._available += this._growthStep;\n    }\n    get() {\n        let result;\n        if (this._pool.length === 0) {\n            this.create();\n        }\n        result = this._pool.pop();\n        --this._available;\n        result.initPool(this);\n        return result;\n    }\n    release(obj) {\n        this._pool.push(obj);\n        ++this._available;\n    }\n}\n//# sourceMappingURL=Pool.js.map","export class KeyValuePair {\n}\n//# sourceMappingURL=KeyValuePair.js.map"],"names":["sign","x","NaN","rotationDeg","rotation","deg","CalcConst","ROTATION_DEGREE_PRECISION","DEG360","ROTATION_LOOKUP","rotationRad","DEGREE_FACTOR","this","closestRadianRotation","radian","RADIAN_FACTOR","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","Object","prototype","toString","call","isElement","target","nodeType","isFunction","isNumber","isInt","isString","isNotNullOrUndefined","constructor","String","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","areUndefined","areNotUndefined","isUndefined","isNotUndefined","destroy","obj","setNull","wipe","keys","clear","key","isClassOf","b","isSameClass","inherits","equals","isDifferent","shallowCopy","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","arrS","arrT","mixin","exclude","sources","flatten","hasOwnProperty","setProperties","values","mapping","value","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","splice","pos","remove","insert","Error","srcLen","max","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","removeOneByFn","shallowCopyInto","shallowFill","at","deepCopyInto","deepFill","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","create","populator","deserialize","types","T","passthroughT","newT","Initable","[object Object]","init","win","getFunctionName","name","fnString","substring","getFunctionCode","lastIndexOf","newUUID","d","Timer","now","replace","c","r","random","floor","newInt","UtilState","_int","counter","_counter","LoggableCounter","inc","callDebugger","pipeOut","log","warn","error","proxyFn","superfn","assert","assertion","message","isDebug","objOrClass","fnName","bind","loop","toArray","DomState","_window","_document","document","_el","createElement","html","attr","innerHTML","children","setAttr","outerHTML","appendChild","get","k","styles","styleKeys","style","setProperty","join","setAttribute","parentNode","removeChild","replaceChild","id","getElementById","body","find","selector","querySelector","findAll","root","querySelectorAll","is","findParent","parentElement","position","y","top","matches","msMatchesSelector","webkitMatchesSelector","setStylesExplicitly","comp","getComputedStyle","Poolable","super","__pool__","release","pool","before","decoration","propertyKey","descriptor","orgFn","after","around","provided","condition","randomString","VALID_CHARS","charAt","randomInt","randomNumber","numericArray","type","MocDataType","LinearInt","RandomInt","LinearFloat","RandomFloat","stringArray","arrayLength","stringLength","integrate","alias","stringAlias","list","object","Arr","Calc","Dom","MocData","Obj","Pool","Dictionary","KeyValuePair","List","Range2","Rect","Stack","Tree","Vec2","Test","Uri","Util","stuff","PI","lookup","cos","sin","Vec2Const","EPSILON","IDENTITY","X_DIM","Y_DIM","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","stop","x1","y1","x2","y2","endInclusive","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","_Global","_nativeWindow","hasNativeWindow","_lookup","_list","_isDirty","has","cleanList","reCreateList","serialize","Symbol","iterator","_array","_index","_indexer","_pointer","Arr.shallowCopy","done","indexer","_reindex","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","select","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","SortedList","comparer","_cmp","copy","orderBy","fill","getInsertIndex","removeFirst","Function","last","selectInto","head","tail","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","_value","0","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadata","Tree_1","parent","data","virtual","fromObject","nodes","mapcfg","virtualRoot","mapResolver","nodeList","node","rootNodes","parentId","stack","cur","duplicateNode","toJSON","Sides","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","Promise","resolve","reject","err","callback","then","catch","reason","async_predicate","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool"],"mappings":"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"}