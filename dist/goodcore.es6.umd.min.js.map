{"version":3,"file":"goodcore.es6.umd.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/standard/mixins/Initable.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/MocData.js","lib/struct/KeyValuePair.js","lib/standard/Combinators.js","lib/Integration.js"],"sourcesContent":["export class CalcConst {\r\n}\r\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\r\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\r\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\r\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\r\nCalcConst.ROTATION_LOOKUP = (function () {\r\n    const lookup = [];\r\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\r\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\r\n    }\r\n    return lookup;\r\n})();\r\nexport function sign(x) {\r\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\nexport function rotationDeg(rotation) {\r\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return CalcConst.ROTATION_LOOKUP[deg];\r\n}\r\nexport function rotationRad(rotation) {\r\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\r\n}\r\nexport function closestRadianRotation(radian) {\r\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\r\n}\r\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\r\nexport function hasWindow() {\r\n    return Global.window !== null;\r\n}\r\nexport function hasConsole() {\r\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\r\n}\r\nexport function isArray(it) {\r\n    return !!(it && (it instanceof Array || typeof (it) === \"array\"));\r\n}\r\nexport function isElement(target) {\r\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\r\n}\r\nexport function isFunction(it) {\r\n    return Object.prototype.toString.call(it) === \"[object Function]\";\r\n}\r\nexport function isNumber(x) {\r\n    return x === +x;\r\n}\r\nexport function isInt(x) {\r\n    return isNumber(x) && (x === (x | 0));\r\n}\r\nexport function isString(x) {\r\n    return isNotNullOrUndefined(x) && x.constructor === String;\r\n}\r\nexport function areNullOrUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined || a === null;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotNullOrUndefined(...args) {\r\n    return !areNullOrUndefined(...args);\r\n}\r\nexport function isNullOrUndefined(arg) {\r\n    return arg === undefined || arg === null;\r\n}\r\nexport function isNotNullOrUndefined(arg) {\r\n    return !isNullOrUndefined(arg);\r\n}\r\nexport function areUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotUndefined(...args) {\r\n    return !areUndefined(...args);\r\n}\r\nexport function isUndefined(arg) {\r\n    return arg === undefined;\r\n}\r\nexport function isNotUndefined(arg) {\r\n    return !isUndefined(arg);\r\n}\r\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\r\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\r\nexport function destroy(obj) {\r\n    if (obj.constructor.prototype.destroy !== undefined) {\r\n        obj.destroy();\r\n    }\r\n    else {\r\n        setNull(obj);\r\n    }\r\n}\r\nexport function wipe(obj) {\r\n    const keys = Object.keys(obj);\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        delete obj[keys[i]];\r\n    }\r\n}\r\nexport function setNull(obj) {\r\n    if (obj.constructor.prototype.clear !== undefined) {\r\n        obj.clear();\r\n    }\r\n    else {\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            obj[key] = null;\r\n        }\r\n    }\r\n}\r\nexport function isClassOf(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\r\n}\r\nexport function isSameClass(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\r\n}\r\nexport function inherits(a, b) {\r\n    return isClassOf(a, b) && !isSameClass(a, b);\r\n}\r\nexport function equals(a, b) {\r\n    let result = a === b;\r\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\r\n        if (isArray(a)) {\r\n            const len = a.length;\r\n            let i = 0;\r\n            result = len === b.length;\r\n            if (result) {\r\n                for (; i < len; i += 1) {\r\n                    result = equals(a[i], b[i]);\r\n                    if (result === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (a.constructor.prototype.equals) {\r\n            result = a.equals(b);\r\n        }\r\n        else {\r\n            const keys = Object.keys(a);\r\n            let key = null;\r\n            result = true;\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                result = equals(a[key], b[key]);\r\n                if (!result) {\r\n                    if (isFunction(a[key])) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function isDifferent(a, b) {\r\n    return !equals(a, b);\r\n}\r\nexport function shallowCopy(obj) {\r\n    const keys = Object.keys(obj);\r\n    const result = {};\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        const key = keys[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nexport function clone(obj) {\r\n    let result;\r\n    if (!(obj instanceof Object)) {\r\n        result = obj;\r\n    }\r\n    else if (obj.constructor.prototype.clone !== undefined) {\r\n        result = obj.clone();\r\n    }\r\n    else if (isArray(obj)) {\r\n        result = deepCopy(obj);\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return new Date(obj.getTime());\r\n    }\r\n    else if (obj instanceof RegExp) {\r\n        return new RegExp(obj);\r\n    }\r\n    else {\r\n        result = new obj.constructor();\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            result[key] = clone(obj[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function cloneInto(src, target) {\r\n    if (isArray(target)) {\r\n        const arrS = src;\r\n        const arrT = target;\r\n        const len = arrS.length;\r\n        arrT.length = len;\r\n        let i = -1;\r\n        while (++i < len) {\r\n            if (arrS[i] instanceof Object) {\r\n                cloneInto(arrS[i], arrT[i]);\r\n            }\r\n            else {\r\n                arrT[i] = arrS[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            const a = src[key];\r\n            if (a instanceof Object) {\r\n                let b = target[key];\r\n                if (b === undefined || b === null) {\r\n                    if (isArray(a)) {\r\n                        b = target[key] = [];\r\n                    }\r\n                    else {\r\n                        b = target[key] = {};\r\n                    }\r\n                }\r\n                if (isDifferent(a, b)) {\r\n                    cloneInto(a, b);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = a;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function mixin(target = {}, exclude, ...sources) {\r\n    const result = target, len = sources ? sources.length : 0;\r\n    let i = 0;\r\n    sources = flatten(sources);\r\n    for (; i < len; i++) {\r\n        let src = sources[i];\r\n        if (isFunction(src)) {\r\n            src = src.prototype;\r\n        }\r\n        if (src === undefined) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        if (exclude) {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                if (exclude.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n        else {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setProperties(target, values, mapping) {\r\n    const keys = Object.keys(values);\r\n    let key;\r\n    let value;\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        key = keys[i];\r\n        value = values[key];\r\n        if (mapping && key in mapping) {\r\n            key = mapping[key];\r\n        }\r\n        if (key in target) {\r\n            target[key] = values[keys[i]];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Obj.js.map","import { clone } from \"./Obj\";\r\nimport { isArray, isNullOrUndefined, isNumber, isUndefined } from \"./Test\";\r\nclass ArrayState {\r\n}\r\nexport function flatten(src) {\r\n    return flattenInner(src);\r\n}\r\nfunction flattenInner(src, result = []) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (isArray(src[i])) {\r\n            flattenInner(src[i], result);\r\n        }\r\n        else {\r\n            result.push(src[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function reverse(array) {\r\n    let left = null;\r\n    let right = null;\r\n    const length = isNullOrUndefined(array) ? 0 : array.length;\r\n    for (left = 0; left < length / 2; left += 1) {\r\n        right = length - 1 - left;\r\n        const temporary = array[left];\r\n        array[left] = array[right];\r\n        array[right] = temporary;\r\n    }\r\n    return array;\r\n}\r\nexport function concat(...arrs) {\r\n    const result = Array.prototype.concat.apply([], arrs);\r\n    return result;\r\n}\r\nexport function slice(src, from = 0, count = Infinity) {\r\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    let i = -1;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i + from];\r\n    }\r\n    return result;\r\n}\r\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\r\n    if (isNullOrUndefined(src)) {\r\n        throw new Error(\"Unable to splice on null or undefined\");\r\n    }\r\n    let srcLen = src.length;\r\n    pos = Math.max(0, pos);\r\n    pos = Math.min(pos, srcLen);\r\n    remove = Math.max(0, remove);\r\n    remove = Math.min(remove, srcLen - pos);\r\n    let insertLen = insert.length;\r\n    let newLen = srcLen - remove + insertLen;\r\n    let delta = remove - insertLen;\r\n    if (delta < 0) {\r\n        src.length = newLen;\r\n        let i = newLen;\r\n        while (--i >= pos + remove) {\r\n            src[i] = src[i + delta];\r\n        }\r\n    }\r\n    let i = pos - 1;\r\n    while (++i < pos + insertLen) {\r\n        src[i] = insert[i - pos];\r\n    }\r\n    if (delta > 0) {\r\n        --i;\r\n        while (++i < srcLen - delta) {\r\n            src[i] = src[i + delta];\r\n        }\r\n        src.length = newLen;\r\n    }\r\n}\r\nexport function append(arr, values) {\r\n    let index = -1;\r\n    const offset = arr.length;\r\n    const length = isNullOrUndefined(values) ? 0 : values.length;\r\n    while (++index < length) {\r\n        arr[offset + index] = values[index];\r\n    }\r\n}\r\nexport function removeAt(arr, index) {\r\n    let result;\r\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\r\n    if (index >= 0 && index < len) {\r\n        let i = index;\r\n        result = arr[index];\r\n        while (++i < len) {\r\n            arr[i - 1] = arr[i];\r\n        }\r\n        arr.length -= 1;\r\n    }\r\n    return result;\r\n}\r\nexport function indexOfElement(src, el) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (src[i] === el) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function remove(arr, el) {\r\n    const start = indexOfElement(arr, el);\r\n    removeAt(arr, start);\r\n}\r\nexport function indexOf(src, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        if (fn(src[i])) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function removeOneByFn(arr, fn) {\r\n    const start = indexOf(arr, fn);\r\n    removeAt(arr, start);\r\n}\r\nexport function shallowCopy(src) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i];\r\n    }\r\n    return result;\r\n}\r\nexport function shallowCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = src[i];\r\n    }\r\n}\r\nexport function shallowFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = src[i];\r\n    }\r\n}\r\nexport function deepCopy(src) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = (clone(src[i]));\r\n    }\r\n    return result;\r\n}\r\nexport function deepCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function deepFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function filter(src, fn) {\r\n    const result = [];\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            result.push(el);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function filterInto(src, target, fn) {\r\n    let i = -1;\r\n    let j = 0;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const space = target.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            if (j < space) {\r\n                target[j++] = el;\r\n            }\r\n            else {\r\n                ++j;\r\n                target.push(el);\r\n            }\r\n        }\r\n    }\r\n    target.length = j;\r\n}\r\nexport function map(src, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = fn(src[i], i);\r\n    }\r\n    return result;\r\n}\r\nexport function mapInto(src, target, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = fn(src[i], i);\r\n    }\r\n}\r\nexport function reduce(src, fn, start) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (++i < len) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceUntil(src, fn, test, start) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (++i < len && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduce(src, fn, start) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (--i >= 0) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduceUntil(src, fn, test, start) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let acc = start;\r\n    while (--i >= 0 && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function forEach(src, fn, startIndex = 0) {\r\n    let i = startIndex - 1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function forSome(src, filter, fn) {\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (filter(el, i)) {\r\n            fn(el, i);\r\n        }\r\n    }\r\n}\r\nexport function until(src, fnOrTest, fn, startIndex) {\r\n    let isCombined = isUndefined(fn) || isNumber(fn);\r\n    startIndex = isCombined ? fn : startIndex;\r\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function reverseForEach(src, fn) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (--i >= 0) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function reverseUntil(src, fnOrTest, fn) {\r\n    let i = isNullOrUndefined(src) ? 0 : src.length;\r\n    let combined = isUndefined(fn);\r\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function some(src, fn) {\r\n    let result = false;\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && !(result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function all(src, fn) {\r\n    let result = true;\r\n    let i = -1;\r\n    const len = isNullOrUndefined(src) ? 0 : src.length;\r\n    while (++i < len && (result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function insertAt(src, pos, v) {\r\n    if (isNullOrUndefined(src)) {\r\n        throw new Error(\"Unable to insertAt on null or undefined\");\r\n    }\r\n    if (pos === 0) {\r\n        src.unshift(v);\r\n    }\r\n    else if (pos > 0) {\r\n        let i = src.length;\r\n        while (--i >= pos) {\r\n            src[i + 1] = src[i];\r\n        }\r\n        src[i + 1] = v;\r\n    }\r\n}\r\nexport function binarySearch(src, cmp, closest = false) {\r\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\r\n    while (lo <= hi) {\r\n        mid = ((lo + hi) >> 1);\r\n        element = src[mid];\r\n        let val = cmp(element);\r\n        if (val < 0) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (val > 0) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return closest ? lo : -1;\r\n}\r\nexport function create(length, populator) {\r\n    if ((length || -1) < 0) {\r\n        length = 0;\r\n    }\r\n    let arr = new Array(length);\r\n    let i = -1;\r\n    while (++i < length) {\r\n        arr[i] = populator(i, arr);\r\n    }\r\n    return arr;\r\n}\r\n//# sourceMappingURL=Arr.js.map","import { Global } from \"./Global\";\r\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nclass UtilState {\r\n}\r\nUtilState._int = 0;\r\nexport function init(win) {\r\n    if (win !== undefined) {\r\n        Global.window = win;\r\n    }\r\n}\r\nexport function getFunctionName(fn) {\r\n    let result;\r\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\r\n        result = fn.name;\r\n    }\r\n    else {\r\n        const fnString = fn.toString();\r\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\r\n    }\r\n    return result;\r\n}\r\nexport function getFunctionCode(fn) {\r\n    let result;\r\n    const fnString = fn.toString();\r\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\r\n    return result;\r\n}\r\nexport function newUUID() {\r\n    let d = new Date().getTime();\r\n    d += Timer.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\nexport function newInt() {\r\n    return UtilState._int++;\r\n}\r\nexport function callDebugger() {\r\n    debugger;\r\n}\r\nexport function pipeOut(log, warn, error) {\r\n    if (hasConsole()) {\r\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\r\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\r\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\r\n    }\r\n    else {\r\n        const console = {\r\n            log,\r\n            warn,\r\n            error\r\n        };\r\n        if (!(hasWindow())) {\r\n            Global.window = {};\r\n        }\r\n        Global.window.console = console;\r\n    }\r\n}\r\nexport function assert(assertion, message, isDebug = true) {\r\n    let result = true;\r\n    if (!assertion) {\r\n        if (hasConsole) {\r\n            result = false;\r\n            console.error(\"Assertion failed: \" + message);\r\n        }\r\n        if (isDebug) {\r\n            callDebugger();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function proxyFn(objOrClass, fnName, proxyFn) {\r\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\r\n    const fn = objOrClass[fnName];\r\n    const _superFn = function (...args) {\r\n        if (args.length !== 0) {\r\n            return fn.apply(this || objOrClass, args);\r\n        }\r\n        else {\r\n            return fn.call(this || objOrClass);\r\n        }\r\n    };\r\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\r\n}\r\nexport function loop(count, fn) {\r\n    let i = -1;\r\n    while (++i < count) {\r\n        fn(i);\r\n    }\r\n}\r\nexport function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n}\r\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\r\nexport var Sides;\r\n(function (Sides) {\r\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\r\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\r\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\r\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\r\n})(Sides || (Sides = {}));\r\nclass DomState {\r\n}\r\nDomState.Sides = Sides;\r\nDomState._window = Global.window;\r\nDomState._document = Global.window ? Global.window.document : undefined;\r\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\r\nexport function init(win) {\r\n    Global.window = win;\r\n    DomState._window = Global.window;\r\n    DomState._document = DomState._window.document;\r\n    DomState._el = DomState._document.createElement(\"div\");\r\n}\r\nexport function toArray(a) {\r\n    return Array.prototype.slice.call(a);\r\n}\r\nexport function create(html, attr) {\r\n    let result, keys, i, k, styles, styleKeys;\r\n    DomState._el.innerHTML = html;\r\n    result = DomState._el.children[0];\r\n    setAttr(result, attr);\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function outerHTML(el) {\r\n    DomState._el.appendChild(el);\r\n    const result = DomState._el.innerHTML;\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function setAttr(_el, attr) {\r\n    let el;\r\n    if (typeof (_el) === \"string\") {\r\n        el = get(_el);\r\n    }\r\n    else {\r\n        el = _el;\r\n    }\r\n    let keys, i, k, styles, styleKeys, style;\r\n    if (attr !== undefined && typeof (attr) === \"object\") {\r\n        keys = Object.keys(attr);\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"style\") {\r\n                styles = attr[keys[i]];\r\n                styleKeys = Object.keys(styles);\r\n                for (k = 0; k < styleKeys.length; k++) {\r\n                    style = styles[styleKeys[k]];\r\n                    if (typeof (style) === \"string\") {\r\n                        el.style.setProperty(styleKeys[k], style);\r\n                    }\r\n                    else {\r\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\r\n                    }\r\n                }\r\n            }\r\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\r\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\r\n            }\r\n            else {\r\n                el.setAttribute(keys[i], attr[keys[i]]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function remove(element) {\r\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\r\n}\r\nexport function replace(src, target) {\r\n    let result = target;\r\n    if (src.parentNode) {\r\n        src.parentNode.replaceChild(target, src);\r\n    }\r\n    return result;\r\n}\r\nexport function clear(element) {\r\n    let i = element.children.length;\r\n    while (i--) {\r\n        element.removeChild(element.children[i]);\r\n    }\r\n}\r\nexport function get(id) {\r\n    let result = DomState._document.getElementById(id);\r\n    if (result === null) {\r\n        switch (id) {\r\n            default:\r\n                result = DomState._document.body;\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function find(selector) {\r\n    return DomState._document.querySelector(selector);\r\n}\r\nexport function findAll(selector, root) {\r\n    return toArray((root || DomState._document).querySelectorAll(selector));\r\n}\r\nexport function children(root, selector) {\r\n    const children = toArray((root || DomState._document).children);\r\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\r\n}\r\nexport function findParent(root, selector) {\r\n    let result = root.parentElement;\r\n    while (result) {\r\n        if (is(selector, result)) {\r\n            break;\r\n        }\r\n        result = result.parentElement;\r\n    }\r\n    return result;\r\n}\r\nexport function position(el, x, y) {\r\n    el.style.top = y + \"px\";\r\n    el.style.left = x + \"px\";\r\n}\r\nexport function is(selector, element) {\r\n    let result = false;\r\n    if (element.matches) {\r\n        result = element.matches(selector);\r\n    }\r\n    else if (element.msMatchesSelector) {\r\n        result = element.msMatchesSelector(selector);\r\n    }\r\n    else if (element.webkitMatchesSelector) {\r\n        result = element.webkitMatchesSelector(selector);\r\n    }\r\n    else {\r\n        if (element.parentElement === null) {\r\n            throw new Error(\"Element has no parent\");\r\n        }\r\n        if (element.id !== \"\") {\r\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\r\n        }\r\n        else {\r\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setStylesExplicitly(element, ...styles) {\r\n    const comp = DomState._window.getComputedStyle(element);\r\n    for (const style of styles) {\r\n        element.style[style] = comp[style];\r\n    }\r\n}\r\n//# sourceMappingURL=Dom.js.map","export function Poolable(Base) {\r\n    return class extends Base {\r\n        release() {\r\n            this.__pool__.release(this);\r\n        }\r\n        initPool(pool) {\r\n            this.__pool__ = pool;\r\n        }\r\n        constructor(...args) {\r\n            super(...args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Poolable.js.map","import { setProperties } from \"../../Obj\";\r\nexport function Initable(base) {\r\n    return class extends base {\r\n        init(obj, mapping) {\r\n            setProperties(this, obj, mapping);\r\n            return this;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Initable.js.map","import { rotationRad } from \"../Calc\";\r\nexport class Vec2Const {\r\n}\r\nVec2Const.EPSILON = 1e-8;\r\nVec2Const.IDENTITY = { x: 1, y: 1 };\r\nVec2Const.X_DIM = { x: 1, y: 0 };\r\nVec2Const.Y_DIM = { x: 0, y: 1 };\r\nexport class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.angle = this.horizontalAngle;\r\n        this.direction = this.horizontalAngle;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    create(x = 0, y = 0) {\r\n        return new (this.constructor)(x, y);\r\n    }\r\n    set(src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.x, this.y);\r\n        return result;\r\n    }\r\n    toInt() {\r\n        this.x |= 0;\r\n        this.y |= 0;\r\n        return this;\r\n    }\r\n    ceil() {\r\n        this.x = Math.ceil(this.x);\r\n        this.y = Math.ceil(this.y);\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.x += Vec2Const.EPSILON;\r\n        this.y += Vec2Const.EPSILON;\r\n        return this;\r\n    }\r\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\r\n    length() { return Math.sqrt(this.lengthSq()); }\r\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\r\n    rotate(angle) {\r\n        const rot = rotationRad(angle);\r\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\r\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\r\n        this.x = nx;\r\n        this.y = ny;\r\n        return this;\r\n    }\r\n    rotateAround(center, angle) {\r\n        return this.subtract(center).rotate(angle).add(center);\r\n    }\r\n    normalize() {\r\n        const len = this.length();\r\n        if (len === 0) {\r\n            this.x = 1;\r\n            this.y = 0;\r\n        }\r\n        else {\r\n            this.x = this.x / len;\r\n            this.y = this.y / len;\r\n        }\r\n        return this;\r\n    }\r\n    scale(vectorB) {\r\n        this.x = this.x * vectorB.x;\r\n        this.y = this.y * vectorB.y;\r\n        return this;\r\n    }\r\n    relate(vectorB) {\r\n        this.x = this.x / vectorB.x;\r\n        this.y = this.y / vectorB.y;\r\n        return this;\r\n    }\r\n    multiply(scalar) {\r\n        this.x = this.x * scalar;\r\n        this.y = this.y * scalar;\r\n        return this;\r\n    }\r\n    add(vectorB) {\r\n        this.x = this.x + vectorB.x;\r\n        this.y = this.y + vectorB.y;\r\n        return this;\r\n    }\r\n    subtract(vectorB) {\r\n        this.x = this.x - vectorB.x;\r\n        this.y = this.y - vectorB.y;\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n    equals(target) {\r\n        return this.x === target.x && this.y === target.y;\r\n    }\r\n    almostEquals(target) {\r\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\r\n    }\r\n    getNormal(isNormalized) {\r\n        const result = this.clone();\r\n        if (!isNormalized) {\r\n            result.set(this).normalize();\r\n        }\r\n        const temp = result.x;\r\n        result.x = result.y;\r\n        result.y = -temp;\r\n        return result;\r\n    }\r\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\r\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\r\n    projectOnto(vectorB) {\r\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\r\n        this.x = coeff * vectorB.x;\r\n        this.y = coeff * vectorB.y;\r\n        return this;\r\n    }\r\n    verticalAngle() { return Math.atan2(this.x, this.y); }\r\n    rotateBy(rotation) {\r\n        const angle = -this.horizontalAngle() + rotation;\r\n        return this.rotate(angle);\r\n    }\r\n    max(v) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        return this;\r\n    }\r\n    min(v) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        return this;\r\n    }\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Rect {\r\n    get isZero() {\r\n        return this.start.isZero && this.stop.isZero;\r\n    }\r\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        this.start = new Vec2(x1, y1);\r\n        this.stop = new Vec2(x2, y2);\r\n        this.endInclusive = endInclusive;\r\n    }\r\n    create(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        return new (this.constructor)(x1, y1, x2, y2, endInclusive);\r\n    }\r\n    set(src) {\r\n        this.start.set(src.start);\r\n        this.stop.set(src.stop);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.start.x, this.start.y, this.stop.x, this.stop.y);\r\n        return result;\r\n    }\r\n    toRange2(out) {\r\n        let result = out || new Range2();\r\n        let start = this.start;\r\n        let stop = this.stop;\r\n        result.pos.x = start.x;\r\n        result.pos.y = start.y;\r\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\r\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        const ow = this.stop.x - this.start.x;\r\n        const oh = this.stop.y - this.start.y;\r\n        let w = ow;\r\n        let h = oh;\r\n        w *= factor.x;\r\n        h *= factor.y;\r\n        if (keepCenter) {\r\n            this.start.x -= (w - ow) / 2;\r\n            this.start.y -= (h - oh) / 2;\r\n        }\r\n        this.stop.x = this.start.x + w;\r\n        this.stop.y = this.start.y + h;\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.start.scale(system);\r\n        this.stop.scale(system);\r\n        return this;\r\n    }\r\n    equals(rect) {\r\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\r\n    }\r\n    toInt() {\r\n        this.start.toInt();\r\n        this.stop.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.start.toDecimal();\r\n        this.stop.toDecimal();\r\n        return this;\r\n    }\r\n    area() {\r\n        const x = this.stop.x - this.start.x;\r\n        const y = this.stop.y - this.start.y;\r\n        return x * y;\r\n    }\r\n    move(vec) {\r\n        this.start.add(vec);\r\n        this.stop.add(vec);\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.start.x <= target.start.x &&\r\n            this.start.y <= target.start.y &&\r\n            this.stop.x >= target.stop.x &&\r\n            this.stop.y >= target.stop.y;\r\n    }\r\n    intersect(target) {\r\n        return this.containsPoint(target.start.x, target.start.y) ||\r\n            this.containsPoint(target.stop.x, target.stop.y) ||\r\n            this.containsPoint(target.start.x, target.stop.y) ||\r\n            this.containsPoint(target.stop.x, target.start.y);\r\n    }\r\n    containsPoint(x, y) {\r\n        return this.start.x <= x && this.stop.x >= x &&\r\n            this.start.y <= y && this.stop.y >= y;\r\n    }\r\n    zero() {\r\n        this.start.zero();\r\n        this.stop.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Range2 {\r\n    get isZero() {\r\n        return this.pos.isZero && this.size.isZero;\r\n    }\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.pos = new Vec2(x, y);\r\n        this.size = new Vec2(w, h);\r\n    }\r\n    create(x = 0, y = 0, w = 0, h = 0) {\r\n        return new (this.constructor)(x, y, w, h);\r\n    }\r\n    set(src) {\r\n        this.pos.set(src.pos);\r\n        this.size.set(src.size);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.pos.x, this.pos.y, this.size.x, this.size.y);\r\n        return result;\r\n    }\r\n    toRect(endInclusive = false, out) {\r\n        let result = out || new Rect();\r\n        result.start.x = this.pos.x,\r\n            result.start.y = this.pos.y,\r\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\r\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\r\n            result.endInclusive = endInclusive;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        let org = null;\r\n        if (keepCenter) {\r\n            org = this.size.clone();\r\n        }\r\n        this.size.scale(factor);\r\n        if (keepCenter) {\r\n            this.pos.add(org.subtract(this.size).multiply(0.5));\r\n        }\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.toRect(false).translate(system).toRange2(this);\r\n        return this;\r\n    }\r\n    toInt() {\r\n        this.pos.toInt();\r\n        this.size.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.pos.toDecimal();\r\n        this.size.toDecimal();\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.pos.x <= target.pos.x &&\r\n            this.pos.y <= target.pos.y &&\r\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\r\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\r\n    }\r\n    intersect(target) {\r\n        let s = this.toRect();\r\n        let t = target.clone().toRect();\r\n        return s.intersect(t);\r\n    }\r\n    containsPoint(vec) {\r\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\r\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\r\n    }\r\n    first(fn) {\r\n        const p = new Vec2();\r\n        const x = this.pos.x;\r\n        const y = this.pos.y;\r\n        for (let i = 0; i < this.size.x; i++) {\r\n            for (let j = 0; j < this.size.y; j++) {\r\n                p.x = i + x, p.y = j + y;\r\n                if (fn(p)) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    forEach(fn, start = null) {\r\n        const pos = new Vec2();\r\n        const begin = this.pos.clone().toInt();\r\n        if (start === null || !this.containsPoint(start)) {\r\n            start = begin;\r\n        }\r\n        const end = this.pos.clone().add(this.size).toInt();\r\n        for (let y = begin.y; y < end.y; y += 1) {\r\n            for (let x = begin.x; x < end.x; x += 1) {\r\n                if (y < start.y || (y === start.y && x < start.x)) {\r\n                    continue;\r\n                }\r\n                pos.x = x;\r\n                pos.y = y;\r\n                const brk = fn(pos);\r\n                if (brk) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    equals(range) {\r\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\r\n    }\r\n    zero() {\r\n        this.pos.zero();\r\n        this.size.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\r\nvar win;\r\nif (typeof (window) === \"undefined\") {\r\n    win = null;\r\n    nativeWindow = false;\r\n}\r\nelse {\r\n    win = window;\r\n}\r\nexport class _Global {\r\n    constructor() {\r\n        this._window = win;\r\n        this._nativeWindow = nativeWindow;\r\n    }\r\n    get window() {\r\n        return this._window;\r\n    }\r\n    set window(v) {\r\n        this._window = v;\r\n        if (this.hasNativeWindow) {\r\n            win = v;\r\n        }\r\n    }\r\n    get hasNativeWindow() {\r\n        return this._nativeWindow;\r\n    }\r\n}\r\nexport let Global = new _Global();\r\n//# sourceMappingURL=Global.js.map","import { forEach } from \"../Arr\";\r\nimport { clone, setProperties, wipe } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Dictionary {\r\n    constructor() {\r\n        this._lookup = Object.create(null);\r\n        this._list = new List();\r\n        this._isDirty = false;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    has(key) {\r\n        return this._lookup[key] !== undefined;\r\n    }\r\n    contains(key) {\r\n        return this.has(key);\r\n    }\r\n    get(key) {\r\n        return this._lookup[key];\r\n    }\r\n    set(key, value) {\r\n        this._isDirty = this._isDirty || this.has(key);\r\n        if (value !== undefined) {\r\n            this._lookup[key] = value;\r\n            if (!this._isDirty) {\r\n                this._list.push(value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        if (this.has(key)) {\r\n            delete this._lookup[key];\r\n            this._isDirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        wipe(this._lookup);\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    get values() {\r\n        this.cleanList();\r\n        return this._list.values;\r\n    }\r\n    get keys() {\r\n        return Object.keys(this._lookup);\r\n    }\r\n    get list() {\r\n        this.cleanList();\r\n        return this._list;\r\n    }\r\n    get count() {\r\n        let result = 0;\r\n        if (this._isDirty) {\r\n            result = this.keys.length;\r\n        }\r\n        else {\r\n            result = this._list.count;\r\n        }\r\n        return result;\r\n    }\r\n    cleanList() {\r\n        if (this._isDirty) {\r\n            this.reCreateList();\r\n        }\r\n    }\r\n    reCreateList() {\r\n        let lookup = this._lookup;\r\n        let keys = Object.keys(this._lookup);\r\n        let i = -1;\r\n        let list = this._list;\r\n        list.clear();\r\n        while (++i < keys.length) {\r\n            list.add(lookup[keys[i]]);\r\n        }\r\n    }\r\n    clone() {\r\n        let result = this.create();\r\n        result._isDirty = this._isDirty;\r\n        result._list = this._list.clone();\r\n        result._lookup = clone(this._lookup);\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this._lookup;\r\n    }\r\n    serialize() {\r\n        let obj = Object.create(null);\r\n        forEach(this.keys, (key) => {\r\n            let v = this.get(key);\r\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\r\n        });\r\n        return obj;\r\n    }\r\n    revive(obj, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        this.clear();\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).revive(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else {\r\n                for (let key of Object.keys(obj)) {\r\n                    let newT = new T();\r\n                    setProperties(newT, obj[key]);\r\n                    this.set(key, newT);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let key of Object.keys(obj)) {\r\n                this.set(key, obj[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(obj, ...types) {\r\n        return this.revive(obj, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\r\nimport { clone, equals, setProperties } from \"../Obj\";\r\nimport { isArray, isFunction, isNotNullOrUndefined, isNotUndefined } from \"../Test\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nexport class List {\r\n    constructor(arr) {\r\n        this._array = [];\r\n        this._index = null;\r\n        this._indexer = null;\r\n        if (arr === undefined) {\r\n            this._array = new Array();\r\n        }\r\n        else {\r\n            if (arr instanceof (List)) {\r\n                this._array = Arr.shallowCopy(arr._array);\r\n            }\r\n            else {\r\n                this._array = Arr.shallowCopy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(arr) {\r\n        return new (this.constructor)(arr);\r\n    }\r\n    get values() {\r\n        return this._array;\r\n    }\r\n    get(pos) {\r\n        return this._array[pos];\r\n    }\r\n    getByIndex(key) {\r\n        let result;\r\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\r\n    }\r\n    set(pos, v) {\r\n        if (pos >= 0 && pos < this.length) {\r\n            this._array[pos | 0] = v;\r\n            if (this._indexer !== null) {\r\n                this._index.set(this._indexer(v), v);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\r\n        }\r\n        return this;\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    get length() {\r\n        return this._array.length;\r\n    }\r\n    get indexer() {\r\n        return this._indexer;\r\n    }\r\n    set indexer(fn) {\r\n        this._indexer = fn;\r\n        this._reindex();\r\n    }\r\n    _reindex() {\r\n        if (this._indexer === null) {\r\n            this._index = null;\r\n        }\r\n        else {\r\n            if (this._index === null) {\r\n                this._index = new Dictionary();\r\n            }\r\n            else {\r\n                this._index.clear();\r\n            }\r\n            this.forEach((el) => this._index.set(this._indexer(el), el));\r\n        }\r\n    }\r\n    fill(size, populator) {\r\n        size = Math.max(0, size || 0);\r\n        if (isFunction(populator)) {\r\n            this._array = Arr.create(size, populator);\r\n        }\r\n        else if (!(populator instanceof Object)) {\r\n            this._array = Arr.create(size, () => populator);\r\n        }\r\n        else {\r\n            this._array = Arr.create(size, () => clone(populator));\r\n        }\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._array.length = 0;\r\n        if (this._index !== null) {\r\n            this._index.clear();\r\n        }\r\n        return this;\r\n    }\r\n    add(v) {\r\n        this._array.push(v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    insertAt(pos, v) {\r\n        Arr.insertAt(this._array, pos, v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    push(v) {\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this._array.push(v);\r\n    }\r\n    pop() {\r\n        let result = this._array.pop();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    shift() {\r\n        let result = this._array.shift();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    concat(v) {\r\n        let arr;\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        arr = Arr.concat(this._array, arr2);\r\n        return this.create(arr);\r\n    }\r\n    index(arr) {\r\n        if (this._indexer !== null) {\r\n            Arr.forEach(arr, (el) => {\r\n                this._index.set(this._indexer(el), el);\r\n            });\r\n        }\r\n    }\r\n    unindexEl(el) {\r\n        if (this._indexer !== null) {\r\n            this._index.delete(this._indexer(el));\r\n        }\r\n    }\r\n    append(v) {\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        Arr.append(this._array, arr2);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.deepCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    shallowCopy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.shallowCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = Arr.deepCopy(this._array);\r\n        let result = this.create(arr);\r\n        if (this._indexer !== null) {\r\n            result._indexer = this._indexer;\r\n            result._index = this._index.clone();\r\n        }\r\n        return result;\r\n    }\r\n    remove(v) {\r\n        Arr.remove(this._array, v);\r\n        this.unindexEl(v);\r\n        return this;\r\n    }\r\n    removeFirst(fn) {\r\n        let result = this.removeAt(this.indexOf(fn));\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    removeAt(n) {\r\n        let result = Arr.removeAt(this._array, n);\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        Arr.forEach(this._array, fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        Arr.forSome(this._array, filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        Arr.until(this._array, fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        Arr.reverseForEach(this._array, fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        Arr.reverseUntil(this._array, fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return Arr.some(this._array, fn);\r\n    }\r\n    all(fn) {\r\n        return Arr.all(this._array, fn);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (isFunction(v)) {\r\n            result = Arr.indexOf(this._array, v);\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        let result = false;\r\n        if (isFunction(v)) {\r\n            result = this.find(v) !== undefined;\r\n        }\r\n        else {\r\n            if (this._indexer !== null) {\r\n                result = this._index.contains(this._indexer(v));\r\n            }\r\n            else {\r\n                result = Arr.indexOfElement(this._array, v) !== -1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    reverse() {\r\n        Arr.reverse(this._array);\r\n        return this;\r\n    }\r\n    first(fn) {\r\n        let index = -1;\r\n        let result;\r\n        if (fn === undefined) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = Arr.indexOf(this._array, fn);\r\n        }\r\n        return index === -1 ? undefined : this.get(index);\r\n    }\r\n    find(fn) {\r\n        return this.first(fn);\r\n    }\r\n    last() {\r\n        return this.length === 0 ? undefined : this.get(this.length - 1);\r\n    }\r\n    filter(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.filterInto(arr, this._array, fn);\r\n        this.index(arr);\r\n        return this;\r\n    }\r\n    head(count = 1) {\r\n        count = Math.max(0, count);\r\n        return this.create(Arr.slice(this._array, 0, count));\r\n    }\r\n    tail(count = 1) {\r\n        count = Math.min(this._array.length, count);\r\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\r\n    }\r\n    splice(pos = 0, remove = Infinity, insert = []) {\r\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    orderBy(fn) {\r\n        this._array.sort(fn);\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this.create(Arr.map(this._array, fn));\r\n    }\r\n    mapInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.mapInto(arr, this._array, fn);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return Arr.reduce(this._array, fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return Arr.reduceUntil(this._array, fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return Arr.reverseReduce(this._array, fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._array, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        let a = this;\r\n        let count = 0;\r\n        if (a.length === b.length) {\r\n            if (a.indexer !== null) {\r\n                b.until((el) => !a.contains(el), (el, i) => ++count);\r\n            }\r\n            else {\r\n                a.until((el) => !b.contains(el), (el, i) => ++count);\r\n            }\r\n        }\r\n        return count === a.length;\r\n    }\r\n    intersect(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            short.forEach((el) => {\r\n                if (long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            long.forEach((el) => {\r\n                if (short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            result = long.clone();\r\n            short.forEach((el) => {\r\n                if (!long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            result = short.clone();\r\n            long.forEach((el) => {\r\n                if (!short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    zip(list, fn = (t, u) => [t, u]) {\r\n        let result = this.create();\r\n        let length = list.length;\r\n        this.until(function (el, i) {\r\n            return i >= length;\r\n        }, function (el, i) {\r\n            result.push(fn(el, list.get(i)));\r\n        });\r\n        return result;\r\n    }\r\n    unzip(fn = (el) => [el[0], el[1]]) {\r\n        let result = [this.create(), this.create()];\r\n        this.forEach(function (el) {\r\n            let tuple = fn(el);\r\n            result[0].push(tuple[0]);\r\n            result[1].push(tuple[1]);\r\n        });\r\n        return result;\r\n    }\r\n    flatten(maxDepth = Infinity) {\r\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\r\n    }\r\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\r\n        let i = -1;\r\n        const len = src.length;\r\n        if (++depth > maxDepth) {\r\n            result.push(src);\r\n        }\r\n        else {\r\n            while (++i < len) {\r\n                if (isArray(src[i])) {\r\n                    this._flattenInner(src[i], maxDepth, depth, result);\r\n                }\r\n                else if (src[i] instanceof List) {\r\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\r\n                }\r\n                else {\r\n                    result.push(src[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).deserialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\r\nimport { equals, setProperties } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Comparer {\r\n}\r\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nexport class SortedList {\r\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\r\n        this._list = new List();\r\n        this._cmp = comparer;\r\n        if (arr === undefined) {\r\n            this._list = new List();\r\n        }\r\n        else {\r\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\r\n                this.copy(arr.values);\r\n            }\r\n            else {\r\n                this.copy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(comparer, arr) {\r\n        return new (this.constructor)(comparer, arr);\r\n    }\r\n    get values() {\r\n        return this._list.values;\r\n    }\r\n    get(pos) {\r\n        return this._list.get(pos);\r\n    }\r\n    get count() {\r\n        return this._list.length;\r\n    }\r\n    get length() {\r\n        return this._list.length;\r\n    }\r\n    get comparer() {\r\n        return this._cmp;\r\n    }\r\n    set comparer(v) {\r\n        this._cmp = v;\r\n        this.sort();\r\n    }\r\n    sort() {\r\n        this._list.orderBy(this._cmp);\r\n    }\r\n    fill(size, populator) {\r\n        this._list.fill(size, populator);\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    add(v) {\r\n        let index = this.getInsertIndex(v);\r\n        this._list.insertAt(index, v);\r\n        return this;\r\n    }\r\n    pop() {\r\n        return this._list.pop();\r\n    }\r\n    shift() {\r\n        return this._list.shift();\r\n    }\r\n    bulkAdd(v) {\r\n        if (v instanceof List || v instanceof SortedList) {\r\n            this._list.append(v.values);\r\n        }\r\n        else {\r\n            this._list.append(v);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.copy(src.values);\r\n        }\r\n        else {\r\n            this._list.copy(src);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clone() {\r\n        return this.create(this._cmp, this._list.clone());\r\n    }\r\n    remove(v) {\r\n        let index = this.indexOf(v);\r\n        if (index !== -1) {\r\n            this._list.removeAt(index);\r\n        }\r\n        return this;\r\n    }\r\n    removeAt(n) {\r\n        return this._list.removeAt(n);\r\n    }\r\n    removeFirst(fn) {\r\n        return this._list.removeFirst(fn);\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        this._list.forEach(fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        this._list.forSome(filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        this._list.until(fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        this._list.reverseForEach(fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        this._list.reverseUntil(fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return this._list.some(fn);\r\n    }\r\n    all(fn) {\r\n        return this._list.all(fn);\r\n    }\r\n    getInsertIndex(v) {\r\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (v instanceof Function) {\r\n            result = this._list.indexOf(v);\r\n        }\r\n        else {\r\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        return this.indexOf(v) !== -1;\r\n    }\r\n    first(fn) {\r\n        return this._list.first(fn);\r\n    }\r\n    find(fn) {\r\n        return this._list.find(fn);\r\n    }\r\n    last() {\r\n        return this._list.last();\r\n    }\r\n    filter(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.selectInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.selectInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    head(count = 1) {\r\n        return this.create(this.comparer, this._list.head(count));\r\n    }\r\n    tail(count = 1) {\r\n        return this.create(this.comparer, this._list.tail(count));\r\n    }\r\n    map(fn) {\r\n        return this._list.map(fn);\r\n    }\r\n    mapInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.mapInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.mapInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return this._list.reduce(fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return this._list.reduceUntil(fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return this._list.reverseReduce(fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return this._list.reverseReduceUntil(fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._list.values, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        return this.equals(b);\r\n    }\r\n    intersect(b) {\r\n        let result = this.create(this.comparer);\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 && b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (longPos < lastPos && ++i < shortLen) {\r\n                    let el = short.get(i);\r\n                    let aVsB;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if (longPos < lastPos && aVsB === 0) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                short.forEach((el) => {\r\n                    if (long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = result.bulkAdd(short.toList().intersect(long));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result;\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 || b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                result = this.create(this.comparer, long.values);\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (++i < shortLen && longPos < lastPos) {\r\n                    let el = short.get(i);\r\n                    let aVsB = -1;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n                if (i < shortLen) {\r\n                    --i;\r\n                    while (++i < shortLen) {\r\n                        result.add(short.get(i));\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                result = this.create(this.comparer, long.values);\r\n                short.forEach((el) => {\r\n                    if (!long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = this.create(this.comparer, short.toList().union(long));\r\n            }\r\n        }\r\n        else {\r\n            result = this.create(this.comparer);\r\n        }\r\n        return result;\r\n    }\r\n    toList() {\r\n        return new List(this.values);\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).deserialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, deepCopyInto, mapInto, slice } from \"../Arr\";\r\nimport { setProperties } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Stack {\r\n    constructor(size) {\r\n        this.DEFAULT_SIZE = 100;\r\n        this._pos = 0;\r\n        this._limit = 0;\r\n        if (!size) {\r\n            size = this.DEFAULT_SIZE;\r\n        }\r\n        this.DEFAULT_SIZE = size;\r\n        this._array = new Array(size);\r\n        this.push = this.fastPush;\r\n    }\r\n    get values() {\r\n        return slice(this._array, 0, this._pos);\r\n    }\r\n    get depth() {\r\n        return this._pos;\r\n    }\r\n    get size() {\r\n        return this._pos;\r\n    }\r\n    get isEmpty() {\r\n        return this.size === 0;\r\n    }\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n    set limit(value) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        this._limit = value;\r\n        if (value === 0) {\r\n            this.push = this.fastPush;\r\n        }\r\n        else {\r\n            this.push = this.limitedPush;\r\n            this.limitObjects();\r\n        }\r\n    }\r\n    create(size) {\r\n        return new (this.constructor)(size);\r\n    }\r\n    push(obj) {\r\n    }\r\n    fastPush(obj) {\r\n        this._array[this._pos++] = obj;\r\n    }\r\n    limitedPush(obj) {\r\n        this._array[this._pos] = obj;\r\n        ++this._pos;\r\n        this.limitObjects();\r\n    }\r\n    pop() {\r\n        let result = undefined;\r\n        if (this._pos !== 0) {\r\n            result = this._array[--this._pos];\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this._array[this._pos - 1];\r\n    }\r\n    peekAt(index) {\r\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\r\n    }\r\n    toList() {\r\n        const result = new List();\r\n        return new List(this.values);\r\n    }\r\n    clear() {\r\n        this._pos = 0;\r\n        this._array.length = this.DEFAULT_SIZE;\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = deepCopy(this._array);\r\n        let result = this.create(this.DEFAULT_SIZE);\r\n        result._array = arr;\r\n        result._limit = this._limit;\r\n        result._pos = this._pos;\r\n        return result;\r\n    }\r\n    limitObjects() {\r\n        while (this._pos > this._limit) {\r\n            this._array.shift();\r\n            --this._pos;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return slice(this.values, 0, this._pos);\r\n    }\r\n    serialize() {\r\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                mapInto(array, this._array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.deserialize)) {\r\n                mapInto(array, this._array, (el) => {\r\n                    return (new T()).deserialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                mapInto(array, this._array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            deepCopyInto(array, this._array);\r\n        }\r\n        this._pos = array.length;\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=Stack.js.map","class TimerState {\r\n}\r\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\r\nexport class Timer {\r\n    static get time() {\r\n        return TimerState._time;\r\n    }\r\n    static now() {\r\n        if (TimerState._hasPerformance) {\r\n            return performance.now();\r\n        }\r\n        else {\r\n            const hrTime = process.hrtime();\r\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\r\n        }\r\n    }\r\n    static start() {\r\n        const now = Timer.now();\r\n        TimerState._start = TimerState._last = now;\r\n        return TimerState._time = 0;\r\n    }\r\n    static stop() {\r\n        const start = TimerState._start;\r\n        const now = Timer.now();\r\n        TimerState._last = now;\r\n        return TimerState._time = now - start;\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map","import { map } from \"../Arr\";\r\nimport { clone, isSameClass, setProperties } from \"../Obj\";\r\nimport { isArray } from \"../Test\";\r\nimport { newUUID } from \"../Util\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { List } from \"./List\";\r\nimport { Stack } from \"./Stack\";\r\nexport class Tree {\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.parent = null;\r\n        this.children = null;\r\n        this.data = null;\r\n        this.id = newUUID();\r\n    }\r\n    static fromObject(obj) {\r\n        const parent = (this instanceof Tree) ? this : null;\r\n        const root = new Tree().init({ id: obj.id || newUUID(), data: obj.data, parent });\r\n        if (obj.children !== undefined && isArray(obj.children)) {\r\n            root.children = new List(map(obj.children, Tree.fromObject.bind(root)));\r\n        }\r\n        return root;\r\n    }\r\n    static fromNodeList(nodes, mapcfg) {\r\n        let result = new Tree();\r\n        let mapResolver = (key) => {\r\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\r\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\r\n                    mapcfg[key];\r\n        };\r\n        let map = {\r\n            id: mapResolver(\"id\"),\r\n            parent: mapResolver(\"parent\"),\r\n            data: mapResolver(\"data\")\r\n        };\r\n        let list = new List(nodes);\r\n        let lookup = new Dictionary();\r\n        list.forEach((el, i) => {\r\n            let node = new Tree().init({ id: map.id(el), data: map.data(el) });\r\n            lookup.set(node.id, node);\r\n        });\r\n        list.forEach((el, i) => {\r\n            let parent = map.parent(el);\r\n            if (lookup.contains(parent)) {\r\n                lookup.get(parent).add(lookup.get(map.id(el)));\r\n            }\r\n        });\r\n        result = lookup.get(map.id(list.get(0)));\r\n        while (result.parent) {\r\n            result = result.parent;\r\n        }\r\n        return result;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    init(obj) {\r\n        setProperties(this, obj);\r\n        return this;\r\n    }\r\n    insertAt(pos, data) {\r\n        if (this.children === null || this.children.count <= pos) {\r\n            this.add(data);\r\n        }\r\n        else {\r\n            this.children.insertAt(pos, this.create().init({ data, parent: this }));\r\n        }\r\n    }\r\n    add(data) {\r\n        if (this.children === null) {\r\n            this.children = new List();\r\n        }\r\n        if (isSameClass(data, this)) {\r\n            data.parent = this;\r\n            this.children.add(data);\r\n        }\r\n        else {\r\n            this.children.add((this.create()).init({ data: data, parent: this }));\r\n        }\r\n    }\r\n    remove() {\r\n        if (this.parent !== null) {\r\n            this.parent.children.remove(this);\r\n        }\r\n    }\r\n    prune() {\r\n        if (this.children !== null) {\r\n            this.children\r\n                .forEach(function (el, i) {\r\n                el.parent = null;\r\n            })\r\n                .clear();\r\n        }\r\n        this.children = null;\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        const stack = new Stack();\r\n        let acc = start;\r\n        if (!fn) {\r\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\r\n        }\r\n        if (start === undefined) {\r\n            acc = [];\r\n        }\r\n        let cur;\r\n        let i;\r\n        stack.push(this);\r\n        while (cur = stack.pop()) {\r\n            acc = fn(acc, cur);\r\n            i = (cur.children && cur.children.count) || 0;\r\n            while (i--) {\r\n                stack.push(cur.children.get(i));\r\n            }\r\n        }\r\n        return acc;\r\n    }\r\n    clone() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children === null ? null : this.children.clone();\r\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\r\n        return result;\r\n    }\r\n    duplicateNode() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children;\r\n        result.data = this.data;\r\n        return result;\r\n    }\r\n    filter(condition) {\r\n        const root = this.duplicateNode();\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            root.children =\r\n                root.children\r\n                    .select(condition)\r\n                    .map(function (el, i) {\r\n                    return el.filter(condition);\r\n                });\r\n        }\r\n        return root;\r\n    }\r\n    select(condition, acc = new List()) {\r\n        const result = acc;\r\n        const children = this.children;\r\n        if (condition === undefined || condition(this)) {\r\n            result.add(this);\r\n        }\r\n        if (children) {\r\n            children.reduce(function (acc, cur) {\r\n                return cur.select(condition, acc);\r\n            }, result);\r\n        }\r\n        return result;\r\n    }\r\n    find(condition) {\r\n        let result = null;\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            let i = -1;\r\n            const len = this.children.count;\r\n            const val = this.children.values;\r\n            while (++i < len) {\r\n                if (condition(val[i].data)) {\r\n                    result = val[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    result = val[i].children !== null ? val[i].find(condition) : null;\r\n                    if (result !== null) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    contains(condition) {\r\n        return this.find(condition) !== null;\r\n    }\r\n    depth() {\r\n        let result = 0;\r\n        let node = this;\r\n        while (node.parent) {\r\n            node = node.parent;\r\n            ++result;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.toJSON()));\r\n        }\r\n        return result.toJSON();\r\n    }\r\n    serialize() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.serialize()));\r\n        }\r\n        return result.serialize();\r\n    }\r\n}\r\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\r\nexport class Uri {\r\n    constructor() {\r\n        this._a = null;\r\n        this.hash = \"\";\r\n        this.pathName = \"\";\r\n        this.port = \"\";\r\n        this.hostName = \"\";\r\n        this.protocol = \"\";\r\n        this.origin = \"\";\r\n        this.full = \"\";\r\n        this.args = {};\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (Global.window !== null) {\r\n            this._a = Global.window.document.createElement(\"a\");\r\n            this._a.setAttribute(\"href\", Global.window.location.href);\r\n            const args = this.args;\r\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\r\n                const p = arg.split(\"=\");\r\n                args[p[0]] = p[1];\r\n            });\r\n            this.hash = this._a.hash;\r\n            this.pathName = this._a.pathname;\r\n            this.port = this._a.port;\r\n            this.hostName = this._a.hostname;\r\n            this.protocol = this._a.protocol;\r\n            this.origin = this._a.origin;\r\n            this.full = this._a.href;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    descriptor.value = function (...args) {\r\n        let result = new Promise((resolve, reject) => {\r\n            let value;\r\n            try {\r\n                value = orgFn.apply(this, args);\r\n                resolve(value);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    return descriptor;\r\n};\r\nasync.before = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                decoration.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    callback();\r\n                })\r\n                    .catch((reason) => {\r\n                    callback();\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.after = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = (value, reason) => {\r\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                orgFn.apply(this, args)\r\n                    .then((value) => {\r\n                    callback(value, undefined);\r\n                })\r\n                    .catch((reason) => {\r\n                    callback(undefined, reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.provided = function (async_predicate) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                async_predicate.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    if (value) {\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        reject(false);\r\n                    }\r\n                })\r\n                    .catch((reason) => {\r\n                    reject(reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\r\n    constructor(cls, growthStep = 10) {\r\n        this._pool = [];\r\n        this._available = 0;\r\n        this._size = 0;\r\n        this._cls = cls;\r\n        this._growthStep = growthStep;\r\n        this.create();\r\n    }\r\n    get available() {\r\n        return this._available;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    create() {\r\n        let i = 0;\r\n        for (; i < this._growthStep; i++) {\r\n            this._pool.push(new this._cls());\r\n        }\r\n        this._size += this._growthStep;\r\n        this._available += this._growthStep;\r\n    }\r\n    get() {\r\n        let result;\r\n        if (this._pool.length === 0) {\r\n            this.create();\r\n        }\r\n        result = this._pool.pop();\r\n        --this._available;\r\n        result.initPool(this);\r\n        return result;\r\n    }\r\n    release(obj) {\r\n        this._pool.push(obj);\r\n        ++this._available;\r\n    }\r\n}\r\n//# sourceMappingURL=Pool.js.map","export var MocDataType;\r\n(function (MocDataType) {\r\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\r\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\r\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\r\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\r\n})(MocDataType || (MocDataType = {}));\r\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nexport function randomString(length = 25) {\r\n    let result = \"\";\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\r\n    }\r\n    return result;\r\n}\r\nexport function randomInt() {\r\n    return this.randomNumber() | 0;\r\n}\r\nexport function randomNumber() {\r\n    return Math.random() * 2147483647;\r\n}\r\nexport function numericArray(length, type = MocDataType.LinearInt) {\r\n    const result = new Array(length);\r\n    switch (type) {\r\n        case MocDataType.RandomInt:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomInt();\r\n            }\r\n            break;\r\n        case MocDataType.LinearFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i + 0.5;\r\n            }\r\n            break;\r\n        case MocDataType.RandomFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomNumber();\r\n            }\r\n            break;\r\n        default:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i;\r\n            }\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nexport function stringArray(arrayLength, stringLength) {\r\n    const result = new Array(arrayLength);\r\n    let i = -1;\r\n    while (++i < arrayLength) {\r\n        result[i] = this.randomString(stringLength);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=MocData.js.map","export class KeyValuePair {\r\n}\r\n//# sourceMappingURL=KeyValuePair.js.map","export function before(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            decoration.apply(this, [orgFn.name].concat(args));\r\n            const result = orgFn.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function after(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\r\n            decoration.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function around(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            let callback = () => result = orgFn.apply(this, args);\r\n            decoration.apply(this, [callback, orgFn.name].concat(args));\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function provided(condition) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            if (condition.apply(this, [orgFn.name].concat(args))) {\r\n                result = orgFn.apply(this, args);\r\n            }\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function once(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    let result;\r\n    let first = true;\r\n    descriptor.value = function (...args) {\r\n        if (first) {\r\n            result = orgFn.apply(this, args);\r\n            first = false;\r\n        }\r\n        return result;\r\n    };\r\n    return descriptor;\r\n}\r\n//# sourceMappingURL=Combinators.js.map","import * as Arr from \"./Arr\";\r\nimport * as Calc from \"./Calc\";\r\nimport * as Dom from \"./Dom\";\r\nimport { Global } from \"./Global\";\r\nimport * as MocData from \"./MocData\";\r\nimport * as Obj from \"./Obj\";\r\nimport { Initable } from \"./standard/mixins/Initable\";\r\nimport { Poolable } from \"./standard/mixins/Poolable\";\r\nimport { Pool } from \"./standard/Pool\";\r\nimport { Dictionary } from \"./struct/Dictionary\";\r\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\r\nimport { List } from \"./struct/List\";\r\nimport { Range2 } from \"./struct/Range2\";\r\nimport { Rect } from \"./struct/Rect\";\r\nimport { Stack } from \"./struct/Stack\";\r\nimport { Tree } from \"./struct/Tree\";\r\nimport { Vec2 } from \"./struct/Vec2\";\r\nimport * as Test from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nimport { Uri } from \"./Uri\";\r\nimport * as Util from \"./Util\";\r\nexport function integrate(alias) {\r\n    let stringAlias = false;\r\n    let objectAlias = false;\r\n    let list = [\r\n        { name: \"Arr\", object: Arr },\r\n        { name: \"Calc\", object: Calc },\r\n        { name: \"Dom\", object: Dom },\r\n        { name: \"MocData\", object: MocData },\r\n        { name: \"Obj\", object: Obj },\r\n        { name: \"Initable\", object: Initable },\r\n        { name: \"Poolable\", object: Poolable },\r\n        { name: \"Pool\", object: Pool },\r\n        { name: \"Dictionary\", object: Dictionary },\r\n        { name: \"KeyValuePair\", object: KeyValuePair },\r\n        { name: \"List\", object: List },\r\n        { name: \"Range2\", object: Range2 },\r\n        { name: \"Rect\", object: Rect },\r\n        { name: \"Stack\", object: Stack },\r\n        { name: \"Tree\", object: Tree },\r\n        { name: \"Vec2\", object: Vec2 },\r\n        { name: \"Test\", object: Test },\r\n        { name: \"Timer\", object: Timer },\r\n        { name: \"Uri\", object: Uri },\r\n        { name: \"Util\", object: Util },\r\n    ];\r\n    if (typeof (alias) === \"string\") {\r\n        Global.window[alias] = {};\r\n        stringAlias = true;\r\n    }\r\n    for (const stuff of list) {\r\n        if (stringAlias) {\r\n            Global.window[alias][stuff.name] = stuff.object;\r\n        }\r\n        else if (objectAlias) {\r\n            alias[stuff.name] = stuff.object;\r\n        }\r\n        else {\r\n            Global.window[stuff.name] = stuff.object;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Integration.js.map"],"names":["rotationRad","rotation","deg","CalcConst","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","isFunction","Object","prototype","toString","call","isNumber","x","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","areUndefined","isUndefined","isNotUndefined","wipe","obj","keys","setNull","constructor","clear","key","isClassOf","b","isSameClass","equals","isDifferent","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","target","arrS","arrT","setProperties","values","mapping","value","flatten","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","splice","pos","remove","insert","Error","srcLen","max","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","create","populator","newUUID","d","Timer","now","replace","c","r","random","floor","callDebugger","proxyFn","objOrClass","fnName","bind","toArray","setAttr","_el","attr","get","k","styles","styleKeys","style","setProperty","join","setAttribute","children","removeChild","id","DomState","_document","getElementById","body","is","selector","matches","msMatchesSelector","webkitMatchesSelector","parentElement","querySelector","querySelectorAll","Poolable","Base","[object Object]","__pool__","release","pool","super","Initable","base","RADIAN_FACTOR","PI","DEG360","ROTATION_LOOKUP","lookup","cos","sin","NaN","radian","Vec2Const","EPSILON","IDENTITY","y","X_DIM","Y_DIM","Vec2","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","Rect","stop","x1","y1","x2","y2","endInclusive","Range2","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","win","_Global","_window","_nativeWindow","hasNativeWindow","nodeType","String","destroy","exclude","sources","hasOwnProperty","at","Dictionary","_lookup","_list","List","_isDirty","has","cleanList","list","reCreateList","serialize","types","T","passthroughT","revive","deserialize","newT","_array","_index","_indexer","Arr.shallowCopy","indexer","_reindex","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","u","tuple","maxDepth","_flattenInner","depth","copy","SortedList","comparer","_cmp","orderBy","fill","getInsertIndex","removeFirst","Function","last","selectInto","head","tail","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","UtilState","_int","name","fnString","substring","lastIndexOf","log","warn","error","superfn","assertion","message","isDebug","Tree","parent","data","root","init","fromObject","nodes","mapcfg","mapResolver","node","stack","cur","condition","duplicateNode","select","toJSON","Sides","document","createElement","html","innerHTML","appendChild","parentNode","replaceChild","top","comp","getComputedStyle","Uri","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","propertyKey","descriptor","orgFn","Promise","resolve","reject","err","before","decoration","callback","then","catch","reason","after","provided","async_predicate","Pool","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool","MocDataType","VALID_CHARS","charAt","randomNumber","type","LinearInt","RandomInt","randomInt","LinearFloat","RandomFloat","arrayLength","stringLength","randomString","KeyValuePair","alias","stringAlias","object","Arr","Calc","Dom","MocData","Obj","Test","Util","stuff"],"mappings":"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"}