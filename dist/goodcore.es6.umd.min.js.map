{"version":3,"file":"goodcore.es6.umd.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/standard/mixins/Initable.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/MocData.js","lib/struct/KeyValuePair.js","lib/standard/Combinators.js","lib/Integration.js"],"sourcesContent":["export class CalcConst {\r\n}\r\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\r\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\r\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\r\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\r\nCalcConst.ROTATION_LOOKUP = (function () {\r\n    const lookup = [];\r\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\r\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\r\n    }\r\n    return lookup;\r\n})();\r\nexport function sign(x) {\r\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\nexport function rotationDeg(rotation) {\r\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return CalcConst.ROTATION_LOOKUP[deg];\r\n}\r\nexport function rotationRad(rotation) {\r\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\r\n}\r\nexport function closestRadianRotation(radian) {\r\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\r\n}\r\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\r\nexport function hasWindow() {\r\n    return Global.window !== null;\r\n}\r\nexport function hasConsole() {\r\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\r\n}\r\nexport function isArray(it) {\r\n    return !!(it && (it instanceof Array || typeof (it) === \"array\"));\r\n}\r\nexport function isElement(target) {\r\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\r\n}\r\nexport function isFunction(it) {\r\n    return Object.prototype.toString.call(it) === \"[object Function]\";\r\n}\r\nexport function isNumber(x) {\r\n    return x === +x;\r\n}\r\nexport function isInt(x) {\r\n    return isNumber(x) && (x === (x | 0));\r\n}\r\nexport function isString(x) {\r\n    return isNotNullOrUndefined(x) && x.constructor === String;\r\n}\r\nexport function areNullOrUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined || a === null;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotNullOrUndefined(...args) {\r\n    return !areNullOrUndefined(...args);\r\n}\r\nexport function isNullOrUndefined(arg) {\r\n    return arg === undefined || arg === null;\r\n}\r\nexport function isNotNullOrUndefined(arg) {\r\n    return !isNullOrUndefined(arg);\r\n}\r\nexport function areUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotUndefined(...args) {\r\n    return !areUndefined(...args);\r\n}\r\nexport function isUndefined(arg) {\r\n    return arg === undefined;\r\n}\r\nexport function isNotUndefined(arg) {\r\n    return !isUndefined(arg);\r\n}\r\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\r\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\r\nexport function destroy(obj) {\r\n    if (obj.constructor.prototype.destroy !== undefined) {\r\n        obj.destroy();\r\n    }\r\n    else {\r\n        setNull(obj);\r\n    }\r\n}\r\nexport function wipe(obj) {\r\n    const keys = Object.keys(obj);\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        delete obj[keys[i]];\r\n    }\r\n}\r\nexport function setNull(obj) {\r\n    if (obj.constructor.prototype.clear !== undefined) {\r\n        obj.clear();\r\n    }\r\n    else {\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            obj[key] = null;\r\n        }\r\n    }\r\n}\r\nexport function isClassOf(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\r\n}\r\nexport function isSameClass(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\r\n}\r\nexport function inherits(a, b) {\r\n    return isClassOf(a, b) && !isSameClass(a, b);\r\n}\r\nexport function equals(a, b) {\r\n    let result = a === b;\r\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\r\n        if (isArray(a)) {\r\n            const len = a.length;\r\n            let i = 0;\r\n            result = len === b.length;\r\n            if (result) {\r\n                for (; i < len; i += 1) {\r\n                    result = equals(a[i], b[i]);\r\n                    if (result === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (a.constructor.prototype.equals) {\r\n            result = a.equals(b);\r\n        }\r\n        else {\r\n            const keys = Object.keys(a);\r\n            let key = null;\r\n            result = true;\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                result = equals(a[key], b[key]);\r\n                if (!result) {\r\n                    if (isFunction(a[key])) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function isDifferent(a, b) {\r\n    return !equals(a, b);\r\n}\r\nexport function shallowCopy(obj) {\r\n    const keys = Object.keys(obj);\r\n    const result = {};\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        const key = keys[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nexport function clone(obj) {\r\n    let result;\r\n    if (!(obj instanceof Object)) {\r\n        result = obj;\r\n    }\r\n    else if (obj.constructor.prototype.clone !== undefined) {\r\n        result = obj.clone();\r\n    }\r\n    else if (isArray(obj)) {\r\n        result = deepCopy(obj);\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return new Date(obj.getTime());\r\n    }\r\n    else if (obj instanceof RegExp) {\r\n        return new RegExp(obj);\r\n    }\r\n    else {\r\n        result = new obj.constructor();\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            result[key] = clone(obj[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function cloneInto(src, target) {\r\n    if (isArray(target)) {\r\n        const arrS = src;\r\n        const arrT = target;\r\n        const len = arrS.length;\r\n        arrT.length = len;\r\n        let i = -1;\r\n        while (++i < len) {\r\n            if (arrS[i] instanceof Object) {\r\n                cloneInto(arrS[i], arrT[i]);\r\n            }\r\n            else {\r\n                arrT[i] = arrS[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            const a = src[key];\r\n            if (a instanceof Object) {\r\n                let b = target[key];\r\n                if (b === undefined || b === null) {\r\n                    if (isArray(a)) {\r\n                        b = target[key] = [];\r\n                    }\r\n                    else {\r\n                        b = target[key] = {};\r\n                    }\r\n                }\r\n                if (isDifferent(a, b)) {\r\n                    cloneInto(a, b);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = a;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function mixin(target = {}, exclude, ...sources) {\r\n    const result = target, len = sources ? sources.length : 0;\r\n    let i = 0;\r\n    sources = flatten(sources);\r\n    for (; i < len; i++) {\r\n        let src = sources[i];\r\n        if (isFunction(src)) {\r\n            src = src.prototype;\r\n        }\r\n        if (src === undefined) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        if (exclude) {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                if (exclude.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n        else {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setProperties(target, values, mapping) {\r\n    const keys = Object.keys(values);\r\n    let key;\r\n    let value;\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        key = keys[i];\r\n        value = values[key];\r\n        if (mapping && key in mapping) {\r\n            key = mapping[key];\r\n        }\r\n        if (key in target) {\r\n            target[key] = values[keys[i]];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Obj.js.map","import { isNumber, isUndefined } from \"util\";\r\nimport { clone } from \"./Obj\";\r\nimport { isArray } from \"./Test\";\r\nclass ArrayState {\r\n}\r\nexport function flatten(src) {\r\n    return flattenInner(src);\r\n}\r\nfunction flattenInner(src, result = []) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (isArray(src[i])) {\r\n            flattenInner(src[i], result);\r\n        }\r\n        else {\r\n            result.push(src[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function reverse(array) {\r\n    let left = null;\r\n    let right = null;\r\n    const length = array.length;\r\n    for (left = 0; left < length / 2; left += 1) {\r\n        right = length - 1 - left;\r\n        const temporary = array[left];\r\n        array[left] = array[right];\r\n        array[right] = temporary;\r\n    }\r\n    return array;\r\n}\r\nexport function concat(...arrs) {\r\n    const result = Array.prototype.concat.apply([], arrs);\r\n    return result;\r\n}\r\nexport function slice(src, from = 0, count = Infinity) {\r\n    let len = Math.min(src.length - from, count);\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    let i = -1;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i + from];\r\n    }\r\n    return result;\r\n}\r\nexport function append(arr, values) {\r\n    let index = -1;\r\n    const offset = arr.length;\r\n    const length = values.length;\r\n    while (++index < length) {\r\n        arr[offset + index] = values[index];\r\n    }\r\n}\r\nexport function removeAt(arr, index) {\r\n    let result;\r\n    if (index !== -1 && index < arr.length) {\r\n        const len = arr.length;\r\n        let i = index;\r\n        result = arr[index];\r\n        while (++i < len) {\r\n            arr[i - 1] = arr[i];\r\n        }\r\n        arr.length -= 1;\r\n    }\r\n    return result;\r\n}\r\nexport function indexOfElement(src, el) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (src[i] === el) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function remove(arr, el) {\r\n    const start = indexOfElement(arr, el);\r\n    removeAt(arr, start);\r\n}\r\nexport function indexOf(src, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (fn(src[i])) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function removeOneByFn(arr, fn) {\r\n    const start = indexOf(arr, fn);\r\n    removeAt(arr, start);\r\n}\r\nexport function shallowCopy(src) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i];\r\n    }\r\n    return result;\r\n}\r\nexport function shallowCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = src[i];\r\n    }\r\n}\r\nexport function shallowFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = src[i];\r\n    }\r\n}\r\nexport function deepCopy(src) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = (clone(src[i]));\r\n    }\r\n    return result;\r\n}\r\nexport function deepCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function deepFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function filter(src, fn) {\r\n    const result = [];\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            result.push(el);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function filterInto(src, target, fn) {\r\n    let i = -1;\r\n    let j = 0;\r\n    const len = src.length;\r\n    const space = target.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            if (j < space) {\r\n                target[j++] = el;\r\n            }\r\n            else {\r\n                ++j;\r\n                target.push(el);\r\n            }\r\n        }\r\n    }\r\n    target.length = j;\r\n}\r\nexport function map(src, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = fn(src[i], i);\r\n    }\r\n    return result;\r\n}\r\nexport function mapInto(src, target, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = fn(src[i], i);\r\n    }\r\n}\r\nexport function reduce(src, fn, start) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    let acc = start;\r\n    while (++i < len) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceUntil(src, fn, test, start) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    let acc = start;\r\n    while (++i < len && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduce(src, fn, start) {\r\n    let i = src.length;\r\n    let acc = start;\r\n    while (--i >= 0) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduceUntil(src, fn, test, start) {\r\n    let i = src.length;\r\n    let acc = start;\r\n    while (--i >= 0 && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function forEach(src, fn, startIndex = 0) {\r\n    let i = startIndex - 1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function forSome(src, filter, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (filter(el, i)) {\r\n            fn(el, i);\r\n        }\r\n    }\r\n}\r\nexport function until(src, fnOrTest, fn, startIndex) {\r\n    let isCombined = isUndefined(fn) || isNumber(fn);\r\n    startIndex = isCombined ? fn : startIndex;\r\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\r\n    const len = src.length;\r\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function reverseForEach(src, fn) {\r\n    let i = src.length;\r\n    while (--i >= 0) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function reverseUntil(src, fnOrTest, fn) {\r\n    let i = src.length;\r\n    let combined = isUndefined(fn);\r\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function some(src, fn) {\r\n    let result = false;\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len && !(result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function all(src, fn) {\r\n    let result = true;\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len && (result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function insertAt(src, pos, v) {\r\n    if (pos === 0) {\r\n        src.unshift(v);\r\n    }\r\n    else if (pos > 0) {\r\n        let i = src.length;\r\n        while (--i >= pos) {\r\n            src[i + 1] = src[i];\r\n        }\r\n        src[i + 1] = v;\r\n    }\r\n}\r\nexport function binarySearch(src, cmp, closest = false) {\r\n    let lo = 0, hi = src.length - 1, mid, element;\r\n    while (lo <= hi) {\r\n        mid = ((lo + hi) >> 1);\r\n        element = src[mid];\r\n        let val = cmp(element);\r\n        if (val < 0) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (val > 0) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return closest ? lo : -1;\r\n}\r\nexport function create(length, populator) {\r\n    if (length < 0) {\r\n        length = 0;\r\n    }\r\n    let arr = new Array(length);\r\n    let i = -1;\r\n    while (++i < length) {\r\n        arr[i] = populator(i, arr);\r\n    }\r\n    return arr;\r\n}\r\n//# sourceMappingURL=Arr.js.map","import { Global } from \"./Global\";\r\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nclass UtilState {\r\n}\r\nUtilState._int = 0;\r\nexport function init(win) {\r\n    if (win !== undefined) {\r\n        Global.window = win;\r\n    }\r\n}\r\nexport function getFunctionName(fn) {\r\n    let result;\r\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\r\n        result = fn.name;\r\n    }\r\n    else {\r\n        const fnString = fn.toString();\r\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\r\n    }\r\n    return result;\r\n}\r\nexport function getFunctionCode(fn) {\r\n    let result;\r\n    const fnString = fn.toString();\r\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\r\n    return result;\r\n}\r\nexport function newUUID() {\r\n    let d = new Date().getTime();\r\n    d += Timer.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\nexport function newInt() {\r\n    return UtilState._int++;\r\n}\r\nexport function callDebugger() {\r\n    debugger;\r\n}\r\nexport function pipeOut(log, warn, error) {\r\n    if (hasConsole) {\r\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\r\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\r\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\r\n    }\r\n    else {\r\n        const console = {\r\n            log,\r\n            warn,\r\n            error\r\n        };\r\n        if (!(hasWindow())) {\r\n            Global.window = {\r\n                console\r\n            };\r\n        }\r\n        else {\r\n            Global.window.console = console;\r\n        }\r\n    }\r\n}\r\nexport function assert(assertion, message, isDebug = true) {\r\n    let result = true;\r\n    if (!assertion) {\r\n        if (hasConsole) {\r\n            result = false;\r\n            console.error(\"Assertion failed: \" + message);\r\n        }\r\n        if (isDebug) {\r\n            callDebugger();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function proxyFn(objOrClass, fnName, proxyFn) {\r\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\r\n    const fn = objOrClass[fnName];\r\n    const _superFn = function (...args) {\r\n        if (args.length !== 0) {\r\n            return fn.apply(this || objOrClass, args);\r\n        }\r\n        else {\r\n            return fn.call(this || objOrClass);\r\n        }\r\n    };\r\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\r\n}\r\nexport function loop(count, fn) {\r\n    let i = -1;\r\n    while (++i < count) {\r\n        fn(i);\r\n    }\r\n}\r\nexport function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n}\r\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\r\nexport var Sides;\r\n(function (Sides) {\r\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\r\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\r\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\r\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\r\n})(Sides || (Sides = {}));\r\nclass DomState {\r\n}\r\nDomState.Sides = Sides;\r\nDomState._window = Global.window;\r\nDomState._document = Global.window ? Global.window.document : undefined;\r\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\r\nexport function init(win) {\r\n    Global.window = win;\r\n    DomState._window = Global.window;\r\n    DomState._document = DomState._window.document;\r\n    DomState._el = DomState._document.createElement(\"div\");\r\n}\r\nexport function toArray(a) {\r\n    return Array.prototype.slice.call(a);\r\n}\r\nexport function create(html, attr) {\r\n    let result, keys, i, k, styles, styleKeys;\r\n    DomState._el.innerHTML = html;\r\n    result = DomState._el.children[0];\r\n    setAttr(result, attr);\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function outerHTML(el) {\r\n    DomState._el.appendChild(el);\r\n    const result = DomState._el.innerHTML;\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function setAttr(_el, attr) {\r\n    let el;\r\n    if (typeof (_el) === \"string\") {\r\n        el = get(_el);\r\n    }\r\n    else {\r\n        el = _el;\r\n    }\r\n    let keys, i, k, styles, styleKeys, style;\r\n    if (attr !== undefined && typeof (attr) === \"object\") {\r\n        keys = Object.keys(attr);\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"style\") {\r\n                styles = attr[keys[i]];\r\n                styleKeys = Object.keys(styles);\r\n                for (k = 0; k < styleKeys.length; k++) {\r\n                    style = styles[styleKeys[k]];\r\n                    if (typeof (style) === \"string\") {\r\n                        el.style.setProperty(styleKeys[k], style);\r\n                    }\r\n                    else {\r\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\r\n                    }\r\n                }\r\n            }\r\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\r\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\r\n            }\r\n            else {\r\n                el.setAttribute(keys[i], attr[keys[i]]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function remove(element) {\r\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\r\n}\r\nexport function replace(src, target) {\r\n    let result = target;\r\n    if (src.parentNode) {\r\n        src.parentNode.replaceChild(target, src);\r\n    }\r\n    return result;\r\n}\r\nexport function clear(element) {\r\n    let i = element.children.length;\r\n    while (i--) {\r\n        element.removeChild(element.children[i]);\r\n    }\r\n}\r\nexport function get(id) {\r\n    let result = DomState._document.getElementById(id);\r\n    if (result === null) {\r\n        switch (id) {\r\n            default:\r\n                result = DomState._document.body;\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function find(selector) {\r\n    return DomState._document.querySelector(selector);\r\n}\r\nexport function findAll(selector, root) {\r\n    return toArray((root || DomState._document).querySelectorAll(selector));\r\n}\r\nexport function children(root, selector) {\r\n    const children = toArray((root || DomState._document).children);\r\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\r\n}\r\nexport function findParent(root, selector) {\r\n    let result = root.parentElement;\r\n    while (result) {\r\n        if (is(selector, result)) {\r\n            break;\r\n        }\r\n        result = result.parentElement;\r\n    }\r\n    return result;\r\n}\r\nexport function position(el, x, y) {\r\n    el.style.top = y + \"px\";\r\n    el.style.left = x + \"px\";\r\n}\r\nexport function is(selector, element) {\r\n    let result = false;\r\n    if (element.matches) {\r\n        result = element.matches(selector);\r\n    }\r\n    else if (element.msMatchesSelector) {\r\n        result = element.msMatchesSelector(selector);\r\n    }\r\n    else if (element.webkitMatchesSelector) {\r\n        result = element.webkitMatchesSelector(selector);\r\n    }\r\n    else {\r\n        if (element.parentElement === null) {\r\n            throw new Error(\"Element has no parent\");\r\n        }\r\n        if (element.id !== \"\") {\r\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\r\n        }\r\n        else {\r\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setStylesExplicitly(element, ...styles) {\r\n    const comp = DomState._window.getComputedStyle(element);\r\n    for (const style of styles) {\r\n        element.style[style] = comp[style];\r\n    }\r\n}\r\n//# sourceMappingURL=Dom.js.map","export function Poolable(Base) {\r\n    return class extends Base {\r\n        release() {\r\n            this.__pool__.release(this);\r\n        }\r\n        initPool(pool) {\r\n            this.__pool__ = pool;\r\n        }\r\n        constructor(...args) {\r\n            super(...args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Poolable.js.map","import { setProperties } from \"../../Obj\";\r\nexport function Initable(base) {\r\n    return class extends base {\r\n        init(obj, mapping) {\r\n            setProperties(this, obj, mapping);\r\n            return this;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Initable.js.map","import { rotationRad } from \"../Calc\";\r\nexport class Vec2Const {\r\n}\r\nVec2Const.EPSILON = 1e-8;\r\nVec2Const.IDENTITY = { x: 1, y: 1 };\r\nVec2Const.X_DIM = { x: 1, y: 0 };\r\nVec2Const.Y_DIM = { x: 0, y: 1 };\r\nexport class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.angle = this.horizontalAngle;\r\n        this.direction = this.horizontalAngle;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    create(x = 0, y = 0) {\r\n        return new (this.constructor)(x, y);\r\n    }\r\n    set(src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.x, this.y);\r\n        return result;\r\n    }\r\n    toInt() {\r\n        this.x |= 0;\r\n        this.y |= 0;\r\n        return this;\r\n    }\r\n    ceil() {\r\n        this.x = Math.ceil(this.x);\r\n        this.y = Math.ceil(this.y);\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.x += Vec2Const.EPSILON;\r\n        this.y += Vec2Const.EPSILON;\r\n        return this;\r\n    }\r\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\r\n    length() { return Math.sqrt(this.lengthSq()); }\r\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\r\n    rotate(angle) {\r\n        const rot = rotationRad(angle);\r\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\r\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\r\n        this.x = nx;\r\n        this.y = ny;\r\n        return this;\r\n    }\r\n    rotateAround(center, angle) {\r\n        return this.subtract(center).rotate(angle).add(center);\r\n    }\r\n    normalize() {\r\n        const len = this.length();\r\n        if (len === 0) {\r\n            this.x = 1;\r\n            this.y = 0;\r\n        }\r\n        else {\r\n            this.x = this.x / len;\r\n            this.y = this.y / len;\r\n        }\r\n        return this;\r\n    }\r\n    scale(vectorB) {\r\n        this.x = this.x * vectorB.x;\r\n        this.y = this.y * vectorB.y;\r\n        return this;\r\n    }\r\n    relate(vectorB) {\r\n        this.x = this.x / vectorB.x;\r\n        this.y = this.y / vectorB.y;\r\n        return this;\r\n    }\r\n    multiply(scalar) {\r\n        this.x = this.x * scalar;\r\n        this.y = this.y * scalar;\r\n        return this;\r\n    }\r\n    add(vectorB) {\r\n        this.x = this.x + vectorB.x;\r\n        this.y = this.y + vectorB.y;\r\n        return this;\r\n    }\r\n    subtract(vectorB) {\r\n        this.x = this.x - vectorB.x;\r\n        this.y = this.y - vectorB.y;\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n    equals(target) {\r\n        return this.x === target.x && this.y === target.y;\r\n    }\r\n    almostEquals(target) {\r\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\r\n    }\r\n    getNormal(isNormalized) {\r\n        const result = this.clone();\r\n        if (!isNormalized) {\r\n            result.set(this).normalize();\r\n        }\r\n        const temp = result.x;\r\n        result.x = result.y;\r\n        result.y = -temp;\r\n        return result;\r\n    }\r\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\r\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\r\n    projectOnto(vectorB) {\r\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\r\n        this.x = coeff * vectorB.x;\r\n        this.y = coeff * vectorB.y;\r\n        return this;\r\n    }\r\n    verticalAngle() { return Math.atan2(this.x, this.y); }\r\n    rotateBy(rotation) {\r\n        const angle = -this.horizontalAngle() + rotation;\r\n        return this.rotate(angle);\r\n    }\r\n    max(v) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        return this;\r\n    }\r\n    min(v) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        return this;\r\n    }\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Rect {\r\n    get isZero() {\r\n        return this.start.isZero && this.stop.isZero;\r\n    }\r\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        this.start = new Vec2(x1, y1);\r\n        this.stop = new Vec2(x2, y2);\r\n        this.endInclusive = endInclusive;\r\n    }\r\n    create(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        return new (this.constructor)(x1, y1, x2, y2, endInclusive);\r\n    }\r\n    set(src) {\r\n        this.start.set(src.start);\r\n        this.stop.set(src.stop);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.start.x, this.start.y, this.stop.x, this.stop.y);\r\n        return result;\r\n    }\r\n    toRange2(out) {\r\n        let result = out || new Range2();\r\n        let start = this.start;\r\n        let stop = this.stop;\r\n        result.pos.x = start.x;\r\n        result.pos.y = start.y;\r\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\r\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        const ow = this.stop.x - this.start.x;\r\n        const oh = this.stop.y - this.start.y;\r\n        let w = ow;\r\n        let h = oh;\r\n        w *= factor.x;\r\n        h *= factor.y;\r\n        if (keepCenter) {\r\n            this.start.x -= (w - ow) / 2;\r\n            this.start.y -= (h - oh) / 2;\r\n        }\r\n        this.stop.x = this.start.x + w;\r\n        this.stop.y = this.start.y + h;\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.start.scale(system);\r\n        this.stop.scale(system);\r\n        return this;\r\n    }\r\n    equals(rect) {\r\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\r\n    }\r\n    toInt() {\r\n        this.start.toInt();\r\n        this.stop.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.start.toDecimal();\r\n        this.stop.toDecimal();\r\n        return this;\r\n    }\r\n    area() {\r\n        const x = this.stop.x - this.start.x;\r\n        const y = this.stop.y - this.start.y;\r\n        return x * y;\r\n    }\r\n    move(vec) {\r\n        this.start.add(vec);\r\n        this.stop.add(vec);\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.start.x <= target.start.x &&\r\n            this.start.y <= target.start.y &&\r\n            this.stop.x >= target.stop.x &&\r\n            this.stop.y >= target.stop.y;\r\n    }\r\n    intersect(target) {\r\n        return this.containsPoint(target.start.x, target.start.y) ||\r\n            this.containsPoint(target.stop.x, target.stop.y) ||\r\n            this.containsPoint(target.start.x, target.stop.y) ||\r\n            this.containsPoint(target.stop.x, target.start.y);\r\n    }\r\n    containsPoint(x, y) {\r\n        return this.start.x <= x && this.stop.x >= x &&\r\n            this.start.y <= y && this.stop.y >= y;\r\n    }\r\n    zero() {\r\n        this.start.zero();\r\n        this.stop.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Range2 {\r\n    get isZero() {\r\n        return this.pos.isZero && this.size.isZero;\r\n    }\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.pos = new Vec2(x, y);\r\n        this.size = new Vec2(w, h);\r\n    }\r\n    create(x = 0, y = 0, w = 0, h = 0) {\r\n        return new (this.constructor)(x, y, w, h);\r\n    }\r\n    set(src) {\r\n        this.pos.set(src.pos);\r\n        this.size.set(src.size);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : this.create(this.pos.x, this.pos.y, this.size.x, this.size.y);\r\n        return result;\r\n    }\r\n    toRect(endInclusive = false, out) {\r\n        let result = out || new Rect();\r\n        result.start.x = this.pos.x,\r\n            result.start.y = this.pos.y,\r\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\r\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\r\n            result.endInclusive = endInclusive;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        let org = null;\r\n        if (keepCenter) {\r\n            org = this.size.clone();\r\n        }\r\n        this.size.scale(factor);\r\n        if (keepCenter) {\r\n            this.pos.add(org.subtract(this.size).multiply(0.5));\r\n        }\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.toRect(false).translate(system).toRange2(this);\r\n        return this;\r\n    }\r\n    toInt() {\r\n        this.pos.toInt();\r\n        this.size.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.pos.toDecimal();\r\n        this.size.toDecimal();\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.pos.x <= target.pos.x &&\r\n            this.pos.y <= target.pos.y &&\r\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\r\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\r\n    }\r\n    intersect(target) {\r\n        let s = this.toRect();\r\n        let t = target.clone().toRect();\r\n        return s.intersect(t);\r\n    }\r\n    containsPoint(vec) {\r\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\r\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\r\n    }\r\n    first(fn) {\r\n        const p = new Vec2();\r\n        const x = this.pos.x;\r\n        const y = this.pos.y;\r\n        for (let i = 0; i < this.size.x; i++) {\r\n            for (let j = 0; j < this.size.y; j++) {\r\n                p.x = i + x, p.y = j + y;\r\n                if (fn(p)) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    forEach(fn, start = null) {\r\n        const pos = new Vec2();\r\n        const begin = this.pos.clone().toInt();\r\n        if (start === null || !this.containsPoint(start)) {\r\n            start = begin;\r\n        }\r\n        const end = this.pos.clone().add(this.size).toInt();\r\n        for (let y = begin.y; y < end.y; y += 1) {\r\n            for (let x = begin.x; x < end.x; x += 1) {\r\n                if (y < start.y || (y === start.y && x < start.x)) {\r\n                    continue;\r\n                }\r\n                pos.x = x;\r\n                pos.y = y;\r\n                const brk = fn(pos);\r\n                if (brk) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    equals(range) {\r\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\r\n    }\r\n    zero() {\r\n        this.pos.zero();\r\n        this.size.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\r\nvar win;\r\nif (typeof (window) === \"undefined\") {\r\n    win = null;\r\n    nativeWindow = false;\r\n}\r\nelse {\r\n    win = window;\r\n}\r\nexport class _Global {\r\n    constructor() {\r\n        this._window = win;\r\n        this._nativeWindow = nativeWindow;\r\n    }\r\n    get window() {\r\n        return this._window;\r\n    }\r\n    set window(v) {\r\n        this._window = v;\r\n        if (this.hasNativeWindow) {\r\n            win = v;\r\n        }\r\n    }\r\n    get hasNativeWindow() {\r\n        return this._nativeWindow;\r\n    }\r\n}\r\nexport let Global = new _Global();\r\n//# sourceMappingURL=Global.js.map","import { forEach } from \"../Arr\";\r\nimport { clone, setProperties, wipe } from \"../Obj\";\r\nimport { isFunction, isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Dictionary {\r\n    constructor() {\r\n        this._lookup = Object.create(null);\r\n        this._list = new List();\r\n        this._isDirty = false;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    has(key) {\r\n        return this._lookup[key] !== undefined;\r\n    }\r\n    contains(key) {\r\n        return this.has(key);\r\n    }\r\n    get(key) {\r\n        return this._lookup[key];\r\n    }\r\n    set(key, value) {\r\n        this._isDirty = this._isDirty || this.has(key);\r\n        if (value !== undefined) {\r\n            this._lookup[key] = value;\r\n            if (!this._isDirty) {\r\n                this._list.push(value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        if (this.has(key)) {\r\n            delete this._lookup[key];\r\n            this._isDirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        wipe(this._lookup);\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    get values() {\r\n        this.cleanList();\r\n        return this._list.values;\r\n    }\r\n    get keys() {\r\n        return Object.keys(this._lookup);\r\n    }\r\n    get list() {\r\n        this.cleanList();\r\n        return this._list;\r\n    }\r\n    get count() {\r\n        let result = 0;\r\n        if (this._isDirty) {\r\n            result = this.keys.length;\r\n        }\r\n        else {\r\n            result = this._list.count;\r\n        }\r\n        return result;\r\n    }\r\n    cleanList() {\r\n        if (this._isDirty) {\r\n            this.reCreateList();\r\n        }\r\n    }\r\n    reCreateList() {\r\n        let lookup = this._lookup;\r\n        let keys = Object.keys(this._lookup);\r\n        let i = -1;\r\n        let list = this._list;\r\n        list.clear();\r\n        while (++i < keys.length) {\r\n            list.add(lookup[keys[i]]);\r\n        }\r\n    }\r\n    clone() {\r\n        let result = this.create();\r\n        result._isDirty = this._isDirty;\r\n        result._list = this._list.clone();\r\n        result._lookup = clone(this._lookup);\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this._lookup;\r\n    }\r\n    serialize() {\r\n        let obj = Object.create(null);\r\n        forEach(this.keys, (key) => {\r\n            let v = this.get(key);\r\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\r\n        });\r\n        return obj;\r\n    }\r\n    revive(obj, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        this.clear();\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).revive(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else {\r\n                for (let key of Object.keys(obj)) {\r\n                    let newT = new T();\r\n                    setProperties(newT, obj[key]);\r\n                    this.set(key, newT);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let key of Object.keys(obj)) {\r\n                this.set(key, obj[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(obj, ...types) {\r\n        return this.revive(obj, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\r\nimport { equals, setProperties } from \"../Obj\";\r\nimport { isArray, isFunction, isNotNullOrUndefined, isNotUndefined } from \"../Test\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nexport class List {\r\n    constructor(arr) {\r\n        this._array = [];\r\n        this._index = null;\r\n        this._indexer = null;\r\n        if (arr === undefined) {\r\n            this._array = new Array();\r\n        }\r\n        else {\r\n            if (arr instanceof (List)) {\r\n                this._array = Arr.shallowCopy(arr._array);\r\n            }\r\n            else {\r\n                this._array = Arr.shallowCopy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(arr) {\r\n        return new (this.constructor)(arr);\r\n    }\r\n    get values() {\r\n        return this._array;\r\n    }\r\n    get(pos) {\r\n        return this._array[pos];\r\n    }\r\n    getByIndex(key) {\r\n        let result;\r\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\r\n    }\r\n    set(pos, v) {\r\n        if (pos >= 0 && pos < this.length) {\r\n            this._array[pos | 0] = v;\r\n            if (this._indexer !== null) {\r\n                this._index.set(this._indexer(v), v);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\r\n        }\r\n        return this;\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    get length() {\r\n        return this._array.length;\r\n    }\r\n    get indexer() {\r\n        return this._indexer;\r\n    }\r\n    set indexer(fn) {\r\n        this._indexer = fn;\r\n        this._reindex();\r\n    }\r\n    _reindex() {\r\n        if (this._indexer === null) {\r\n            this._index = null;\r\n        }\r\n        else {\r\n            if (this._index === null) {\r\n                this._index = new Dictionary();\r\n            }\r\n            else {\r\n                this._index.clear();\r\n            }\r\n            this.forEach((el) => this._index.set(this._indexer(el), el));\r\n        }\r\n    }\r\n    clear() {\r\n        this._array.length = 0;\r\n        if (this._index !== null) {\r\n            this._index.clear();\r\n        }\r\n        return this;\r\n    }\r\n    add(v) {\r\n        this._array.push(v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    insertAt(pos, v) {\r\n        Arr.insertAt(this._array, pos, v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    push(v) {\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this._array.push(v);\r\n    }\r\n    pop() {\r\n        let result = this._array.pop();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    shift() {\r\n        let result = this._array.shift();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    concat(v) {\r\n        let arr;\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        arr = Arr.concat(this._array, arr2);\r\n        return this.create(arr);\r\n    }\r\n    index(arr) {\r\n        if (this._indexer !== null) {\r\n            Arr.forEach(arr, (el) => {\r\n                this._index.set(this._indexer(el), el);\r\n            });\r\n        }\r\n    }\r\n    unindexEl(el) {\r\n        if (this._indexer !== null) {\r\n            this._index.delete(this._indexer(el));\r\n        }\r\n    }\r\n    append(v) {\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        Arr.append(this._array, arr2);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.deepCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    shallowCopy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.shallowCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = Arr.deepCopy(this._array);\r\n        let result = this.create(arr);\r\n        if (this._indexer !== null) {\r\n            result._indexer = this._indexer;\r\n            result._index = this._index.clone();\r\n        }\r\n        return result;\r\n    }\r\n    remove(v) {\r\n        Arr.remove(this._array, v);\r\n        this.unindexEl(v);\r\n        return this;\r\n    }\r\n    removeFirst(fn) {\r\n        let result = this.removeAt(this.indexOf(fn));\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    removeAt(n) {\r\n        let result = Arr.removeAt(this._array, n);\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        Arr.forEach(this._array, fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        Arr.forSome(this._array, filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        Arr.until(this._array, fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        Arr.reverseForEach(this._array, fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        Arr.reverseUntil(this._array, fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return Arr.some(this._array, fn);\r\n    }\r\n    all(fn) {\r\n        return Arr.all(this._array, fn);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (isFunction(v)) {\r\n            result = Arr.indexOf(this._array, v);\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        let result = false;\r\n        if (isFunction(v)) {\r\n            result = this.find(v) !== undefined;\r\n        }\r\n        else {\r\n            if (this._indexer !== null) {\r\n                result = this._index.contains(this._indexer(v));\r\n            }\r\n            else {\r\n                result = Arr.indexOfElement(this._array, v) !== -1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    reverse() {\r\n        Arr.reverse(this._array);\r\n        return this;\r\n    }\r\n    first(fn) {\r\n        let index = -1;\r\n        let result;\r\n        if (fn === undefined) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = Arr.indexOf(this._array, fn);\r\n        }\r\n        return index === -1 ? undefined : this.get(index);\r\n    }\r\n    find(fn) {\r\n        return this.first(fn);\r\n    }\r\n    last() {\r\n        return this.length === 0 ? undefined : this.get(this.length - 1);\r\n    }\r\n    filter(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(Arr.filter(this._array, fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.filterInto(arr, this._array, fn);\r\n        this.index(arr);\r\n        return this;\r\n    }\r\n    orderBy(fn) {\r\n        this._array.sort(fn);\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this.create(Arr.map(this._array, fn));\r\n    }\r\n    mapInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.mapInto(arr, this._array, fn);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return Arr.reduce(this._array, fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return Arr.reduceUntil(this._array, fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return Arr.reverseReduce(this._array, fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._array, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        let a = this;\r\n        let count = 0;\r\n        if (a.length === b.length) {\r\n            if (a.indexer !== null) {\r\n                b.until((el) => !a.contains(el), (el, i) => ++count);\r\n            }\r\n            else {\r\n                a.until((el) => !b.contains(el), (el, i) => ++count);\r\n            }\r\n        }\r\n        return count === a.length;\r\n    }\r\n    intersect(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            short.forEach((el) => {\r\n                if (long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            long.forEach((el) => {\r\n                if (short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result = this.create();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            result = long.clone();\r\n            short.forEach((el) => {\r\n                if (!long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            result = short.clone();\r\n            long.forEach((el) => {\r\n                if (!short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    zip(list, fn = (t, u) => [t, u]) {\r\n        let result = this.create();\r\n        let length = list.length;\r\n        this.until(function (el, i) {\r\n            return i >= length;\r\n        }, function (el, i) {\r\n            result.push(fn(el, list.get(i)));\r\n        });\r\n        return result;\r\n    }\r\n    unzip(fn = (el) => [el[0], el[1]]) {\r\n        let result = [this.create(), this.create()];\r\n        this.forEach(function (el) {\r\n            let tuple = fn(el);\r\n            result[0].push(tuple[0]);\r\n            result[1].push(tuple[1]);\r\n        });\r\n        return result;\r\n    }\r\n    flatten(maxDepth = Infinity) {\r\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\r\n    }\r\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\r\n        let i = -1;\r\n        const len = src.length;\r\n        if (++depth > maxDepth) {\r\n            result.push(src);\r\n        }\r\n        else {\r\n            while (++i < len) {\r\n                if (isArray(src[i])) {\r\n                    this._flattenInner(src[i], maxDepth, depth, result);\r\n                }\r\n                else if (src[i] instanceof List) {\r\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\r\n                }\r\n                else {\r\n                    result.push(src[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.serialize)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).serialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { isFunction } from \"util\";\r\nimport { binarySearch } from \"../Arr\";\r\nimport { equals, setProperties } from \"../Obj\";\r\nimport { isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Comparer {\r\n}\r\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nexport class SortedList {\r\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\r\n        this._list = new List();\r\n        this._cmp = comparer;\r\n        if (arr === undefined) {\r\n            this._list = new List();\r\n        }\r\n        else {\r\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\r\n                this.copy(arr.values);\r\n            }\r\n            else {\r\n                this.copy(arr);\r\n            }\r\n        }\r\n    }\r\n    create(comparer, arr) {\r\n        return new (this.constructor)(comparer, arr);\r\n    }\r\n    get values() {\r\n        return this._list.values;\r\n    }\r\n    get(pos) {\r\n        return this._list.get(pos);\r\n    }\r\n    get count() {\r\n        return this._list.length;\r\n    }\r\n    get length() {\r\n        return this._list.length;\r\n    }\r\n    get comparer() {\r\n        return this._cmp;\r\n    }\r\n    set comparer(v) {\r\n        this._cmp = v;\r\n        this.sort();\r\n    }\r\n    sort() {\r\n        this._list.orderBy(this._cmp);\r\n    }\r\n    clear() {\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    add(v) {\r\n        let index = this.getInsertIndex(v);\r\n        this._list.insertAt(index, v);\r\n        return this;\r\n    }\r\n    pop() {\r\n        return this._list.pop();\r\n    }\r\n    shift() {\r\n        return this._list.shift();\r\n    }\r\n    bulkAdd(v) {\r\n        if (v instanceof List || v instanceof SortedList) {\r\n            this._list.append(v.values);\r\n        }\r\n        else {\r\n            this._list.append(v);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.copy(src.values);\r\n        }\r\n        else {\r\n            this._list.copy(src);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clone() {\r\n        return this.create(this._cmp, this._list.clone());\r\n    }\r\n    remove(v) {\r\n        let index = this.indexOf(v);\r\n        if (index !== -1) {\r\n            this._list.removeAt(index);\r\n        }\r\n        return this;\r\n    }\r\n    removeAt(n) {\r\n        return this._list.removeAt(n);\r\n    }\r\n    removeFirst(fn) {\r\n        return this._list.removeFirst(fn);\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        this._list.forEach(fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        this._list.forSome(filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        this._list.until(fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        this._list.reverseForEach(fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        this._list.reverseUntil(fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return this._list.some(fn);\r\n    }\r\n    all(fn) {\r\n        return this._list.all(fn);\r\n    }\r\n    getInsertIndex(v) {\r\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (v instanceof Function) {\r\n            result = this._list.indexOf(v);\r\n        }\r\n        else {\r\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        return this.indexOf(v) !== -1;\r\n    }\r\n    first(fn) {\r\n        return this._list.first(fn);\r\n    }\r\n    find(fn) {\r\n        return this._list.find(fn);\r\n    }\r\n    last() {\r\n        return this._list.last();\r\n    }\r\n    filter(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    select(fn) {\r\n        return this.create(this._cmp, this._list.filter(fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.selectInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.selectInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this._list.map(fn);\r\n    }\r\n    mapInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.mapInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.mapInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return this._list.reduce(fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return this._list.reduceUntil(fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return this._list.reverseReduce(fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return this._list.reverseReduceUntil(fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._list.values, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        return this.equals(b);\r\n    }\r\n    intersect(b) {\r\n        let result = this.create(this.comparer);\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 && b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (longPos < lastPos && ++i < shortLen) {\r\n                    let el = short.get(i);\r\n                    let aVsB;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if (longPos < lastPos && aVsB === 0) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                short.forEach((el) => {\r\n                    if (long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = result.bulkAdd(short.toList().intersect(long));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result;\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 || b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                result = this.create(this.comparer, long.values);\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (++i < shortLen && longPos < lastPos) {\r\n                    let el = short.get(i);\r\n                    let aVsB = -1;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n                if (i < shortLen) {\r\n                    --i;\r\n                    while (++i < shortLen) {\r\n                        result.add(short.get(i));\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                result = this.create(this.comparer, long.values);\r\n                short.forEach((el) => {\r\n                    if (!long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = this.create(this.comparer, short.toList().union(long));\r\n            }\r\n        }\r\n        else {\r\n            result = this.create(this.comparer);\r\n        }\r\n        return result;\r\n    }\r\n    toList() {\r\n        return new List(this.values);\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    serialize() {\r\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else if (isNotUndefined(T.prototype.serialize)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).serialize(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=SortedList.js.map","import { isFunction } from \"util\";\r\nimport { deepCopy, deepCopyInto, mapInto, slice } from \"../Arr\";\r\nimport { setProperties } from \"../Obj\";\r\nimport { isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Stack {\r\n    constructor(size) {\r\n        this.DEFAULT_SIZE = 100;\r\n        this._pos = 0;\r\n        this._limit = 0;\r\n        if (!size) {\r\n            size = this.DEFAULT_SIZE;\r\n        }\r\n        this.DEFAULT_SIZE = size;\r\n        this._array = new Array(size);\r\n        this.push = this.fastPush;\r\n    }\r\n    get values() {\r\n        return slice(this._array, 0, this._pos);\r\n    }\r\n    get depth() {\r\n        return this._pos;\r\n    }\r\n    get size() {\r\n        return this._pos;\r\n    }\r\n    get isEmpty() {\r\n        return this.size === 0;\r\n    }\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n    set limit(value) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        this._limit = value;\r\n        if (value === 0) {\r\n            this.push = this.fastPush;\r\n        }\r\n        else {\r\n            this.push = this.limitedPush;\r\n            this.limitObjects();\r\n        }\r\n    }\r\n    create(size) {\r\n        return new (this.constructor)(size);\r\n    }\r\n    push(obj) {\r\n    }\r\n    fastPush(obj) {\r\n        this._array[this._pos++] = obj;\r\n    }\r\n    limitedPush(obj) {\r\n        this._array[this._pos] = obj;\r\n        ++this._pos;\r\n        this.limitObjects();\r\n    }\r\n    pop() {\r\n        let result = undefined;\r\n        if (this._pos !== 0) {\r\n            result = this._array[--this._pos];\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this._array[this._pos - 1];\r\n    }\r\n    peekAt(index) {\r\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\r\n    }\r\n    toList() {\r\n        const result = new List();\r\n        return new List(this.values);\r\n    }\r\n    clear() {\r\n        this._pos = 0;\r\n        this._array.length = this.DEFAULT_SIZE;\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = deepCopy(this._array);\r\n        let result = this.create(this.DEFAULT_SIZE);\r\n        result._array = arr;\r\n        result._limit = this._limit;\r\n        result._pos = this._pos;\r\n        return result;\r\n    }\r\n    limitObjects() {\r\n        if (this._limit > 0) {\r\n            while (this._pos > this._limit) {\r\n                this._array.shift();\r\n                --this._pos;\r\n            }\r\n        }\r\n    }\r\n    toJSON() {\r\n        return slice(this.values, 0, this._pos);\r\n    }\r\n    serialize() {\r\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                mapInto(array, this._array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                mapInto(array, this._array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            deepCopyInto(array, this._array);\r\n        }\r\n        this._pos = array.length;\r\n        return this;\r\n    }\r\n    deserialize(array, ...types) {\r\n        return this.revive(array, ...types);\r\n    }\r\n}\r\n//# sourceMappingURL=Stack.js.map","class TimerState {\r\n}\r\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\r\nexport class Timer {\r\n    static get time() {\r\n        return TimerState._time;\r\n    }\r\n    constructor() {\r\n        Timer.start();\r\n    }\r\n    static now() {\r\n        if (TimerState._hasPerformance) {\r\n            return performance.now();\r\n        }\r\n        else {\r\n            const hrTime = process.hrtime();\r\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\r\n        }\r\n    }\r\n    static start() {\r\n        const now = Timer.now();\r\n        TimerState._start = TimerState._last = now;\r\n        return TimerState._time = 0;\r\n    }\r\n    static stop() {\r\n        const start = TimerState._start;\r\n        const now = Timer.now();\r\n        TimerState._last = now;\r\n        return TimerState._time = now - start;\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map","import { map } from \"../Arr\";\r\nimport { clone, isSameClass, setProperties } from \"../Obj\";\r\nimport { isArray } from \"../Test\";\r\nimport { newUUID } from \"../Util\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { List } from \"./List\";\r\nimport { Stack } from \"./Stack\";\r\nexport class Tree {\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.parent = null;\r\n        this.children = null;\r\n        this.data = null;\r\n        this.id = newUUID();\r\n    }\r\n    static fromObject(obj) {\r\n        const parent = (this instanceof Tree) ? this : null;\r\n        const root = new Tree().init({ id: obj.id || newUUID(), data: obj.data, parent });\r\n        if (obj.children !== undefined && isArray(obj.children)) {\r\n            root.children = new List(map(obj.children, Tree.fromObject.bind(root)));\r\n        }\r\n        return root;\r\n    }\r\n    static fromNodeList(nodes, mapcfg) {\r\n        let result = new Tree();\r\n        let mapResolver = (key) => {\r\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\r\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\r\n                    mapcfg[key];\r\n        };\r\n        let map = {\r\n            id: mapResolver(\"id\"),\r\n            parent: mapResolver(\"parent\"),\r\n            data: mapResolver(\"data\")\r\n        };\r\n        let list = new List(nodes);\r\n        let lookup = new Dictionary();\r\n        list.forEach((el, i) => {\r\n            let node = new Tree().init({ id: map.id(el), data: map.data(el) });\r\n            lookup.set(node.id, node);\r\n        });\r\n        list.forEach((el, i) => {\r\n            let parent = map.parent(el);\r\n            if (lookup.contains(parent)) {\r\n                lookup.get(parent).add(lookup.get(map.id(el)));\r\n            }\r\n        });\r\n        result = lookup.get(map.id(list.get(0)));\r\n        while (result.parent) {\r\n            result = result.parent;\r\n        }\r\n        return result;\r\n    }\r\n    create() {\r\n        return new (this.constructor)();\r\n    }\r\n    init(obj) {\r\n        setProperties(this, obj);\r\n        return this;\r\n    }\r\n    insertAt(pos, data) {\r\n        if (this.children === null || this.children.count <= pos) {\r\n            this.add(data);\r\n        }\r\n        else {\r\n            this.children.insertAt(pos, this.create().init({ data, parent: this }));\r\n        }\r\n    }\r\n    add(data) {\r\n        if (this.children === null) {\r\n            this.children = new List();\r\n        }\r\n        if (isSameClass(data, this)) {\r\n            data.parent = this;\r\n            this.children.add(data);\r\n        }\r\n        else {\r\n            this.children.add((this.create()).init({ data: data, parent: this }));\r\n        }\r\n    }\r\n    remove() {\r\n        if (this.parent !== null) {\r\n            this.parent.children.remove(this);\r\n        }\r\n    }\r\n    prune() {\r\n        if (this.children !== null) {\r\n            this.children\r\n                .forEach(function (el, i) {\r\n                el.parent = null;\r\n            })\r\n                .clear();\r\n        }\r\n        this.children = null;\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        const stack = new Stack();\r\n        let acc = start;\r\n        if (!fn) {\r\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\r\n        }\r\n        if (start === undefined) {\r\n            acc = [];\r\n        }\r\n        let cur;\r\n        let i;\r\n        stack.push(this);\r\n        while (cur = stack.pop()) {\r\n            acc = fn(acc, cur);\r\n            i = (cur.children && cur.children.count) || 0;\r\n            while (i--) {\r\n                stack.push(cur.children.get(i));\r\n            }\r\n        }\r\n        return acc;\r\n    }\r\n    clone() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children === null ? null : this.children.clone();\r\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\r\n        return result;\r\n    }\r\n    duplicateNode() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children;\r\n        result.data = this.data;\r\n        return result;\r\n    }\r\n    filter(condition) {\r\n        const root = this.duplicateNode();\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            root.children =\r\n                root.children\r\n                    .select(condition)\r\n                    .map(function (el, i) {\r\n                    return el.filter(condition);\r\n                });\r\n        }\r\n        return root;\r\n    }\r\n    select(condition, acc = new List()) {\r\n        const result = acc;\r\n        const children = this.children;\r\n        if (condition === undefined || condition(this)) {\r\n            result.add(this);\r\n        }\r\n        if (children) {\r\n            children.reduce(function (acc, cur) {\r\n                return cur.select(condition, acc);\r\n            }, result);\r\n        }\r\n        return result;\r\n    }\r\n    find(condition) {\r\n        let result = null;\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            let i = -1;\r\n            const len = this.children.count;\r\n            const val = this.children.values;\r\n            while (++i < len) {\r\n                if (condition(val[i].data)) {\r\n                    result = val[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    result = val[i].children !== null ? val[i].find(condition) : null;\r\n                    if (result !== null) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    contains(condition) {\r\n        return this.find(condition) !== null;\r\n    }\r\n    depth() {\r\n        let result = 0;\r\n        let node = this;\r\n        while (node.parent) {\r\n            node = node.parent;\r\n            ++result;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.toJSON()));\r\n        }\r\n        return result.toJSON();\r\n    }\r\n    serialize() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.serialize()));\r\n        }\r\n        return result.serialize();\r\n    }\r\n}\r\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\r\nexport class Uri {\r\n    constructor() {\r\n        this._a = null;\r\n        this.hash = \"\";\r\n        this.pathName = \"\";\r\n        this.port = \"\";\r\n        this.hostName = \"\";\r\n        this.protocol = \"\";\r\n        this.origin = \"\";\r\n        this.full = \"\";\r\n        this.args = {};\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (Global.window !== null) {\r\n            this._a = Global.window.document.createElement(\"a\");\r\n            this._a.setAttribute(\"href\", Global.window.location.href);\r\n            const args = this.args;\r\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\r\n                const p = arg.split(\"=\");\r\n                args[p[0]] = p[1];\r\n            });\r\n            this.hash = this._a.hash;\r\n            this.pathName = this._a.pathname;\r\n            this.port = this._a.port;\r\n            this.hostName = this._a.hostname;\r\n            this.protocol = this._a.protocol;\r\n            this.origin = this._a.origin;\r\n            this.full = this._a.href;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    descriptor.value = function (...args) {\r\n        let result = new Promise((resolve, reject) => {\r\n            let value;\r\n            try {\r\n                value = orgFn.apply(this, args);\r\n                resolve(value);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    return descriptor;\r\n};\r\nasync.before = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                decoration.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    callback();\r\n                })\r\n                    .catch((reason) => {\r\n                    callback();\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.after = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = (value, reason) => {\r\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                orgFn.apply(this, args)\r\n                    .then((value) => {\r\n                    callback(value, undefined);\r\n                })\r\n                    .catch((reason) => {\r\n                    callback(undefined, reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.provided = function (async_predicate) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                async_predicate.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    if (value) {\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        reject(false);\r\n                    }\r\n                })\r\n                    .catch((reason) => {\r\n                    reject(reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\r\n    constructor(cls, growthStep = 10) {\r\n        this._pool = [];\r\n        this._available = 0;\r\n        this._size = 0;\r\n        this._cls = cls;\r\n        this._growthStep = growthStep;\r\n        this.create();\r\n    }\r\n    get available() {\r\n        return this._available;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    create() {\r\n        let i = 0;\r\n        for (; i < this._growthStep; i++) {\r\n            this._pool.push(new this._cls());\r\n        }\r\n        this._size += this._growthStep;\r\n        this._available += this._growthStep;\r\n    }\r\n    get() {\r\n        let result;\r\n        if (this._pool.length === 0) {\r\n            this.create();\r\n        }\r\n        result = this._pool.pop();\r\n        --this._available;\r\n        result.initPool(this);\r\n        return result;\r\n    }\r\n    release(obj) {\r\n        this._pool.push(obj);\r\n        ++this._available;\r\n    }\r\n}\r\n//# sourceMappingURL=Pool.js.map","export var MocDataType;\r\n(function (MocDataType) {\r\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\r\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\r\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\r\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\r\n})(MocDataType || (MocDataType = {}));\r\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nexport function randomString(length = 25) {\r\n    let result = \"\";\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\r\n    }\r\n    return result;\r\n}\r\nexport function randomInt() {\r\n    return this.randomNumber() | 0;\r\n}\r\nexport function randomNumber() {\r\n    return Math.random() * 2147483647;\r\n}\r\nexport function numericArray(length, type = MocDataType.LinearInt) {\r\n    const result = new Array(length);\r\n    switch (type) {\r\n        case MocDataType.RandomInt:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomInt();\r\n            }\r\n            break;\r\n        case MocDataType.LinearFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i + 0.5;\r\n            }\r\n            break;\r\n        case MocDataType.RandomFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomNumber();\r\n            }\r\n            break;\r\n        default:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i;\r\n            }\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nexport function stringArray(arrayLength, stringLength) {\r\n    const result = new Array(arrayLength);\r\n    let i = -1;\r\n    while (++i < arrayLength) {\r\n        result[i] = this.randomString(stringLength);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=MocData.js.map","export class KeyValuePair {\r\n}\r\n//# sourceMappingURL=KeyValuePair.js.map","export function before(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            decoration.apply(this, [orgFn.name].concat(args));\r\n            const result = orgFn.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function after(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\r\n            decoration.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function around(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            let callback = () => result = orgFn.apply(this, args);\r\n            decoration.apply(this, [callback, orgFn.name].concat(args));\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function provided(condition) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            if (condition.apply(this, [orgFn.name].concat(args))) {\r\n                result = orgFn.apply(this, args);\r\n            }\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\n//# sourceMappingURL=Combinators.js.map","import * as Arr from \"./Arr\";\r\nimport * as Calc from \"./Calc\";\r\nimport * as Dom from \"./Dom\";\r\nimport { Global } from \"./Global\";\r\nimport * as MocData from \"./MocData\";\r\nimport * as Obj from \"./Obj\";\r\nimport { Initable } from \"./standard/mixins/Initable\";\r\nimport { Poolable } from \"./standard/mixins/Poolable\";\r\nimport { Pool } from \"./standard/Pool\";\r\nimport { Dictionary } from \"./struct/Dictionary\";\r\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\r\nimport { List } from \"./struct/List\";\r\nimport { Range2 } from \"./struct/Range2\";\r\nimport { Rect } from \"./struct/Rect\";\r\nimport { Stack } from \"./struct/Stack\";\r\nimport { Tree } from \"./struct/Tree\";\r\nimport { Vec2 } from \"./struct/Vec2\";\r\nimport * as Test from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nimport { Uri } from \"./Uri\";\r\nimport * as Util from \"./Util\";\r\nexport function integrate(alias) {\r\n    let stringAlias = false;\r\n    let objectAlias = false;\r\n    let list = [\r\n        { name: \"Arr\", object: Arr },\r\n        { name: \"Calc\", object: Calc },\r\n        { name: \"Dom\", object: Dom },\r\n        { name: \"MocData\", object: MocData },\r\n        { name: \"Obj\", object: Obj },\r\n        { name: \"Initable\", object: Initable },\r\n        { name: \"Poolable\", object: Poolable },\r\n        { name: \"Pool\", object: Pool },\r\n        { name: \"Dictionary\", object: Dictionary },\r\n        { name: \"KeyValuePair\", object: KeyValuePair },\r\n        { name: \"List\", object: List },\r\n        { name: \"Range2\", object: Range2 },\r\n        { name: \"Rect\", object: Rect },\r\n        { name: \"Stack\", object: Stack },\r\n        { name: \"Tree\", object: Tree },\r\n        { name: \"Vec2\", object: Vec2 },\r\n        { name: \"Test\", object: Test },\r\n        { name: \"Timer\", object: Timer },\r\n        { name: \"Uri\", object: Uri },\r\n        { name: \"Util\", object: Util },\r\n    ];\r\n    if (typeof (alias) === \"string\") {\r\n        Global.window[alias] = {};\r\n        stringAlias = true;\r\n    }\r\n    for (const stuff of list) {\r\n        if (stringAlias) {\r\n            Global.window[alias][stuff.name] = stuff.object;\r\n        }\r\n        else if (objectAlias) {\r\n            alias[stuff.name] = stuff.object;\r\n        }\r\n        else {\r\n            Global.window[stuff.name] = stuff.object;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Integration.js.map"],"names":["rotationRad","rotation","deg","CalcConst","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","isFunction","Object","prototype","toString","call","isNumber","x","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","areUndefined","isUndefined","isNotUndefined","wipe","obj","keys","setNull","constructor","clear","key","isClassOf","b","isSameClass","equals","isDifferent","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","target","arrS","arrT","setProperties","values","mapping","value","flatten","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","append","arr","index","offset","removeAt","indexOfElement","el","remove","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","pos","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","newUUID","d","Timer","now","replace","c","r","random","floor","callDebugger","proxyFn","objOrClass","fnName","bind","toArray","setAttr","_el","attr","get","k","styles","styleKeys","style","setProperty","join","setAttribute","children","removeChild","id","DomState","_document","getElementById","body","is","selector","matches","msMatchesSelector","webkitMatchesSelector","parentElement","Error","querySelector","querySelectorAll","Poolable","Base","[object Object]","__pool__","release","pool","super","Initable","base","RADIAN_FACTOR","PI","DEG360","ROTATION_LOOKUP","lookup","cos","sin","NaN","radian","Vec2Const","EPSILON","IDENTITY","y","X_DIM","Y_DIM","Vec2","angle","horizontalAngle","direction","isZero","out","set","create","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","max","Rect","stop","x1","y1","x2","y2","endInclusive","Range2","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","win","_Global","_window","_nativeWindow","hasNativeWindow","nodeType","String","destroy","exclude","sources","hasOwnProperty","at","populator","Dictionary","_lookup","_list","List","_isDirty","has","cleanList","list","reCreateList","serialize","types","T","passthroughT","revive","newT","_array","_index","_indexer","Arr.shallowCopy","indexer","_reindex","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","u","tuple","maxDepth","_flattenInner","depth","copy","SortedList","comparer","_cmp","orderBy","getInsertIndex","removeFirst","Function","last","selectInto","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","UtilState","_int","name","fnString","substring","lastIndexOf","log","warn","error","superfn","assertion","message","isDebug","Tree","parent","data","root","init","fromObject","nodes","mapcfg","mapResolver","node","stack","cur","condition","duplicateNode","select","toJSON","Sides","document","createElement","html","innerHTML","appendChild","parentNode","replaceChild","top","comp","getComputedStyle","Uri","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","propertyKey","descriptor","orgFn","Promise","resolve","reject","err","before","decoration","callback","then","catch","reason","after","provided","async_predicate","Pool","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool","MocDataType","VALID_CHARS","charAt","randomNumber","type","LinearInt","RandomInt","randomInt","LinearFloat","RandomFloat","arrayLength","stringLength","randomString","KeyValuePair","alias","stringAlias","object","Arr","Calc","Dom","MocData","Obj","Test","Util","stuff"],"mappings":"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"}