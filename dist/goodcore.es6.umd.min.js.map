{"version":3,"file":"goodcore.es6.umd.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/standard/mixins/Initable.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/MocData.js","lib/struct/KeyValuePair.js","lib/standard/Combinators.js","lib/Integration.js"],"sourcesContent":["export class CalcConst {\n}\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\nCalcConst.ROTATION_LOOKUP = (function () {\n    const lookup = [];\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\n    }\n    return lookup;\n})();\nexport function sign(x) {\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\n}\nexport function rotationDeg(rotation) {\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return CalcConst.ROTATION_LOOKUP[deg];\n}\nexport function rotationRad(rotation) {\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\n}\nexport function closestRadianRotation(radian) {\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\n    while (deg < 0) {\n        deg += CalcConst.DEG360;\n    }\n    while (deg >= CalcConst.DEG360) {\n        deg -= CalcConst.DEG360;\n    }\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\n}\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\nexport function hasWindow() {\n    return Global.window !== null;\n}\nexport function hasConsole() {\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\n}\nexport function isArray(it) {\n    return Array.isArray ? Array.isArray(it) : Object.prototype.toString.call(it) === \"[object Array]\";\n}\nexport function isElement(target) {\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\n}\nexport function isFunction(it) {\n    return Object.prototype.toString.call(it) === \"[object Function]\";\n}\nexport function isNumber(x) {\n    return x === +x;\n}\nexport function isInt(x) {\n    return isNumber(x) && (x === (x | 0));\n}\nexport function isString(x) {\n    return isNotNullOrUndefined(x) && x.constructor === String;\n}\nexport function areNullOrUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined || a === null;\n    }\n    return result;\n}\nexport function areNotNullOrUndefined(...args) {\n    return !areNullOrUndefined(...args);\n}\nexport function isNullOrUndefined(arg) {\n    return arg === undefined || arg === null;\n}\nexport function isNotNullOrUndefined(arg) {\n    return !isNullOrUndefined(arg);\n}\nexport function areUndefined(...args) {\n    const len = args.length;\n    let i = -1;\n    let a;\n    let result = false;\n    while (!result && ++i < len) {\n        a = args[i];\n        result = a === undefined;\n    }\n    return result;\n}\nexport function areNotUndefined(...args) {\n    return !areUndefined(...args);\n}\nexport function isUndefined(arg) {\n    return arg === undefined;\n}\nexport function isNotUndefined(arg) {\n    return !isUndefined(arg);\n}\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\nexport function destroy(obj) {\n    if (obj.constructor.prototype.destroy !== undefined) {\n        obj.destroy();\n    }\n    else {\n        setNull(obj);\n    }\n}\nexport function wipe(obj) {\n    const keys = Object.keys(obj);\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        delete obj[keys[i]];\n    }\n}\nexport function setNull(obj) {\n    if (obj.constructor.prototype.clear !== undefined) {\n        obj.clear();\n    }\n    else {\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            obj[key] = null;\n        }\n    }\n}\nexport function isClassOf(a, b) {\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\n}\nexport function isSameClass(a, b) {\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\n}\nexport function inherits(a, b) {\n    return isClassOf(a, b) && !isSameClass(a, b);\n}\nexport function equals(a, b) {\n    let result = a === b;\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\n        if (isArray(a)) {\n            const len = a.length;\n            let i = 0;\n            result = len === b.length;\n            if (result) {\n                for (; i < len; i += 1) {\n                    result = equals(a[i], b[i]);\n                    if (result === false) {\n                        break;\n                    }\n                }\n            }\n        }\n        else if (a.constructor.prototype.equals) {\n            result = a.equals(b);\n        }\n        else {\n            const keys = Object.keys(a);\n            let key = null;\n            result = true;\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                result = equals(a[key], b[key]);\n                if (!result) {\n                    if (isFunction(a[key])) {\n                        result = true;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return result;\n}\nexport function isDifferent(a, b) {\n    return !equals(a, b);\n}\nexport function shallowCopy(obj) {\n    const keys = Object.keys(obj);\n    const result = {};\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        const key = keys[i];\n        result[key] = obj[key];\n    }\n    return result;\n}\nexport function clone(obj) {\n    let result;\n    if (!(obj instanceof Object)) {\n        result = obj;\n    }\n    else if (obj.constructor.prototype.clone !== undefined) {\n        result = obj.clone();\n    }\n    else if (isArray(obj)) {\n        result = deepCopy(obj);\n    }\n    else if (obj instanceof Date) {\n        return new Date(obj.getTime());\n    }\n    else if (obj instanceof RegExp) {\n        return new RegExp(obj);\n    }\n    else {\n        result = new obj.constructor();\n        const keys = Object.keys(obj);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            result[key] = clone(obj[key]);\n        }\n    }\n    return result;\n}\nexport function cloneInto(src, target) {\n    if (isArray(target)) {\n        const arrS = src;\n        const arrT = target;\n        const len = arrS.length;\n        arrT.length = len;\n        let i = -1;\n        while (++i < len) {\n            if (arrS[i] instanceof Object) {\n                cloneInto(arrS[i], arrT[i]);\n            }\n            else {\n                arrT[i] = arrS[i];\n            }\n        }\n    }\n    else {\n        const keys = Object.keys(src);\n        let key = null;\n        let i = -1;\n        const len = keys.length;\n        while (++i < len) {\n            key = keys[i];\n            const a = src[key];\n            if (a instanceof Object) {\n                let b = target[key];\n                if (b === undefined || b === null) {\n                    if (isArray(a)) {\n                        b = target[key] = [];\n                    }\n                    else {\n                        b = target[key] = {};\n                    }\n                }\n                if (isDifferent(a, b)) {\n                    cloneInto(a, b);\n                }\n            }\n            else {\n                target[key] = a;\n            }\n        }\n    }\n    return target;\n}\nexport function mixin(target = {}, exclude, ...sources) {\n    const result = target, len = sources ? sources.length : 0;\n    let i = 0;\n    sources = flatten(sources);\n    for (; i < len; i++) {\n        let src = sources[i];\n        if (isFunction(src)) {\n            src = src.prototype;\n        }\n        if (src === undefined) {\n            continue;\n        }\n        const keys = Object.keys(src);\n        let key = null;\n        if (exclude) {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                if (exclude.hasOwnProperty(key)) {\n                    continue;\n                }\n                target[key] = src[key];\n            }\n        }\n        else {\n            let i = -1;\n            const len = keys.length;\n            while (++i < len) {\n                key = keys[i];\n                target[key] = src[key];\n            }\n        }\n    }\n    return result;\n}\nexport function setProperties(target, values, mapping) {\n    const keys = Object.keys(values);\n    let key;\n    let value;\n    let i = -1;\n    const len = keys.length;\n    while (++i < len) {\n        key = keys[i];\n        value = values[key];\n        if (mapping && key in mapping) {\n            key = mapping[key];\n        }\n        if (key in target) {\n            target[key] = values[keys[i]];\n        }\n    }\n}\n//# sourceMappingURL=Obj.js.map","import { clone, setProperties } from \"./Obj\";\nimport { isArray, isNullOrUndefined, isNumber, isUndefined, isNotUndefined } from \"./Test\";\nclass ArrayState {\n}\nexport function flatten(src) {\n    return flattenInner(src);\n}\nfunction flattenInner(src, result = []) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (isArray(src[i])) {\n            flattenInner(src[i], result);\n        }\n        else {\n            result.push(src[i]);\n        }\n    }\n    return result;\n}\nexport function reverse(array) {\n    let left = null;\n    let right = null;\n    const length = isNullOrUndefined(array) ? 0 : array.length;\n    for (left = 0; left < length / 2; left += 1) {\n        right = length - 1 - left;\n        const temporary = array[left];\n        array[left] = array[right];\n        array[right] = temporary;\n    }\n    return array;\n}\nexport function concat(...arrs) {\n    const result = Array.prototype.concat.apply([], arrs);\n    return result;\n}\nexport function slice(src, from = 0, count = Infinity) {\n    let len = Math.min(isNullOrUndefined(src) ? 0 : src.length - from, count);\n    if (len < 0) {\n        len = 0;\n    }\n    let i = -1;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i + from];\n    }\n    return result;\n}\nexport function splice(src, pos = 0, remove = Infinity, insert = []) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to splice on null or undefined\");\n    }\n    let srcLen = src.length;\n    pos = Math.max(0, pos);\n    pos = Math.min(pos, srcLen);\n    remove = Math.max(0, remove);\n    remove = Math.min(remove, srcLen - pos);\n    let insertLen = insert.length;\n    let newLen = srcLen - remove + insertLen;\n    let delta = remove - insertLen;\n    if (delta < 0) {\n        src.length = newLen;\n        let i = newLen;\n        while (--i >= pos + remove) {\n            src[i] = src[i + delta];\n        }\n    }\n    let i = pos - 1;\n    while (++i < pos + insertLen) {\n        src[i] = insert[i - pos];\n    }\n    if (delta > 0) {\n        --i;\n        while (++i < srcLen - delta) {\n            src[i] = src[i + delta];\n        }\n        src.length = newLen;\n    }\n}\nexport function append(arr, values) {\n    let index = -1;\n    const offset = arr.length;\n    const length = isNullOrUndefined(values) ? 0 : values.length;\n    while (++index < length) {\n        arr[offset + index] = values[index];\n    }\n}\nexport function removeAt(arr, index) {\n    let result;\n    let len = isNullOrUndefined(arr) ? 0 : arr.length;\n    if (index >= 0 && index < len) {\n        let i = index;\n        result = arr[index];\n        while (++i < len) {\n            arr[i - 1] = arr[i];\n        }\n        arr.length -= 1;\n    }\n    return result;\n}\nexport function indexOfElement(src, el) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (src[i] === el) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function remove(arr, el) {\n    const start = indexOfElement(arr, el);\n    removeAt(arr, start);\n}\nexport function indexOf(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        if (fn(src[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function removeOneByFn(arr, fn) {\n    const start = indexOf(arr, fn);\n    removeAt(arr, start);\n}\nexport function shallowCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = src[i];\n    }\n    return result;\n}\nexport function shallowCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = src[i];\n    }\n}\nexport function shallowFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = src[i];\n    }\n}\nexport function deepCopy(src) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = (clone(src[i]));\n    }\n    return result;\n}\nexport function deepCopyInto(src, target) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = (clone(src[i]));\n    }\n}\nexport function deepFill(src, target, at = 0) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    if (target.length < len + at) {\n        target.length = len + at;\n    }\n    while (++i < len) {\n        target[at + i] = (clone(src[i]));\n    }\n}\nexport function filter(src, fn) {\n    const result = [];\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            result.push(el);\n        }\n    }\n    return result;\n}\nexport function filterInto(src, target, fn) {\n    let i = -1;\n    let j = 0;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const space = target.length;\n    while (++i < len) {\n        const el = src[i];\n        if (fn(el, i) === true) {\n            if (j < space) {\n                target[j++] = el;\n            }\n            else {\n                ++j;\n                target.push(el);\n            }\n        }\n    }\n    target.length = j;\n}\nexport function map(src, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    const result = new Array(len);\n    while (++i < len) {\n        result[i] = fn(src[i], i);\n    }\n    return result;\n}\nexport function mapInto(src, target, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    target.length = len;\n    while (++i < len) {\n        target[i] = fn(src[i], i);\n    }\n}\nexport function reduce(src, fn, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reduceUntil(src, fn, test, start) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (++i < len && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduce(src, fn, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function reverseReduceUntil(src, fn, test, start) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let acc = start;\n    while (--i >= 0 && !test(acc, src[i])) {\n        acc = fn(acc, src[i]);\n    }\n    return acc;\n}\nexport function forEach(src, fn, startIndex = 0) {\n    let i = startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        fn(src[i], i);\n    }\n}\nexport function forSome(src, filter, fn) {\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len) {\n        const el = src[i];\n        if (filter(el, i)) {\n            fn(el, i);\n        }\n    }\n}\nexport function until(src, fnOrTest, fn, startIndex) {\n    let isCombined = isUndefined(fn) || isNumber(fn);\n    startIndex = isCombined ? fn : startIndex;\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function reverseForEach(src, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    while (--i >= 0) {\n        fn(src[i], i);\n    }\n}\nexport function reverseUntil(src, fnOrTest, fn) {\n    let i = isNullOrUndefined(src) ? 0 : src.length;\n    let combined = isUndefined(fn);\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\n    }\n}\nexport function some(src, fn) {\n    let result = false;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && !(result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function all(src, fn) {\n    let result = true;\n    let i = -1;\n    const len = isNullOrUndefined(src) ? 0 : src.length;\n    while (++i < len && (result = fn(src[i]))) {\n    }\n    return result;\n}\nexport function insertAt(src, pos, v) {\n    if (isNullOrUndefined(src)) {\n        throw new Error(\"Unable to insertAt on null or undefined\");\n    }\n    if (pos === 0) {\n        src.unshift(v);\n    }\n    else if (pos > 0) {\n        let i = src.length;\n        while (--i >= pos) {\n            src[i + 1] = src[i];\n        }\n        src[i + 1] = v;\n    }\n}\nexport function binarySearch(src, cmp, closest = false) {\n    let lo = 0, hi = isNullOrUndefined(src) ? -1 : src.length - 1, mid, element;\n    while (lo <= hi) {\n        mid = ((lo + hi) >> 1);\n        element = src[mid];\n        let val = cmp(element);\n        if (val < 0) {\n            lo = mid + 1;\n        }\n        else if (val > 0) {\n            hi = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return closest ? lo : -1;\n}\nexport function create(length, populator) {\n    if ((length || -1) < 0) {\n        length = 0;\n    }\n    let arr = new Array(length);\n    let i = -1;\n    while (++i < length) {\n        arr[i] = populator(i, arr);\n    }\n    return arr;\n}\nexport function deserialize(array, target, ...types) {\n    let [T, ...passthroughT] = types;\n    if (isNotUndefined(T)) {\n        if (isNotUndefined(T.prototype.deserialize)) {\n            mapInto(array, target, (el) => {\n                return (new T()).deserialize(el, ...passthroughT);\n            });\n        }\n        else {\n            mapInto(array, target, (el) => {\n                let newT = new T();\n                setProperties(newT, el);\n                return newT;\n            });\n        }\n    }\n    else {\n        deepCopyInto(array, target);\n    }\n    return this;\n}\n//# sourceMappingURL=Arr.js.map","import { setProperties } from \"../../Obj\";\nexport function Initable(constructor) {\n    return class extends constructor {\n        init(obj, mapping) {\n            setProperties(this, obj, mapping);\n            return this;\n        }\n    };\n}\n//# sourceMappingURL=Initable.js.map","import { Global } from \"./Global\";\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\nimport { Timer } from \"./Timer\";\nclass LoggableCounter {\n    constructor(name = \"\") {\n        this.name = \"\";\n        this._value = 0;\n        this.name = name;\n    }\n    log() {\n        console.log(\"Counter \" + this.name + \": \" + this.toString());\n    }\n    inc() {\n        this._value++;\n        return this;\n    }\n    reset() {\n        this._value = 0;\n        return this;\n    }\n    valueOf() {\n        return this._value;\n    }\n    toString() {\n        return this._value.toString();\n    }\n}\nclass UtilState {\n}\nUtilState._int = { \"0\": 0 };\nUtilState._counter = { \"\": new LoggableCounter(\"\") };\nexport function init(win) {\n    if (win !== undefined) {\n        Global.window = win;\n    }\n}\nexport function getFunctionName(fn) {\n    let result;\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\n        result = fn.name;\n    }\n    else {\n        const fnString = fn.toString();\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\n    }\n    return result;\n}\nexport function getFunctionCode(fn) {\n    let result;\n    const fnString = fn.toString();\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\n    return result;\n}\nexport function newUUID() {\n    let d = new Date().getTime();\n    d += Timer.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n}\nexport function newInt(key = 0) {\n    if (UtilState._int[key] === undefined) {\n        UtilState._int[key] = 0;\n    }\n    return UtilState._int[key]++;\n}\nexport function counter(key = \"\") {\n    if (UtilState._counter[key] === undefined) {\n        UtilState._counter[key] = new LoggableCounter(key.toString());\n    }\n    return UtilState._counter[key];\n}\nexport function count(key = \"\") {\n    return counter(key).inc();\n}\nexport function callDebugger() {\n    debugger;\n}\nexport function pipeOut(log, warn, error) {\n    if (hasConsole()) {\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\n    }\n    else {\n        const console = {\n            log,\n            warn,\n            error\n        };\n        if (!(hasWindow())) {\n            Global.window = {};\n        }\n        Global.window.console = console;\n    }\n}\nexport function assert(assertion, message, isDebug = true) {\n    let result = true;\n    if (!assertion) {\n        if (hasConsole) {\n            result = false;\n            console.error(\"Assertion failed: \" + message);\n        }\n        if (isDebug) {\n            callDebugger();\n        }\n    }\n    return result;\n}\nexport function proxyFn(objOrClass, fnName, proxyFn) {\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\n    const fn = objOrClass[fnName];\n    const _superFn = function (...args) {\n        if (args.length !== 0) {\n            return fn.apply(this || objOrClass, args);\n        }\n        else {\n            return fn.call(this || objOrClass);\n        }\n    };\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\n}\nexport function loop(count, fn) {\n    let i = -1;\n    while (++i < count) {\n        fn(i);\n    }\n}\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\nexport var Sides;\n(function (Sides) {\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\n})(Sides || (Sides = {}));\nclass DomState {\n}\nDomState.Sides = Sides;\nDomState._window = Global.window;\nDomState._document = Global.window ? Global.window.document : undefined;\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\nexport function init(win) {\n    Global.window = win;\n    DomState._window = Global.window;\n    DomState._document = DomState._window.document;\n    DomState._el = DomState._document.createElement(\"div\");\n}\nexport function toArray(a) {\n    return Array.prototype.slice.call(a);\n}\nexport function create(html, attr) {\n    let result, keys, i, k, styles, styleKeys;\n    DomState._el.innerHTML = html;\n    result = DomState._el.children[0];\n    setAttr(result, attr);\n    clear(DomState._el);\n    return result;\n}\nexport function outerHTML(el) {\n    DomState._el.appendChild(el);\n    const result = DomState._el.innerHTML;\n    clear(DomState._el);\n    return result;\n}\nexport function setAttr(_el, attr) {\n    let el;\n    if (typeof (_el) === \"string\") {\n        el = get(_el);\n    }\n    else {\n        el = _el;\n    }\n    let keys, i, k, styles, styleKeys, style;\n    if (attr !== undefined && typeof (attr) === \"object\") {\n        keys = Object.keys(attr);\n        for (i = 0; i < keys.length; i++) {\n            if (keys[i] === \"style\") {\n                styles = attr[keys[i]];\n                styleKeys = Object.keys(styles);\n                for (k = 0; k < styleKeys.length; k++) {\n                    style = styles[styleKeys[k]];\n                    if (typeof (style) === \"string\") {\n                        el.style.setProperty(styleKeys[k], style);\n                    }\n                    else {\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\n                    }\n                }\n            }\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\n            }\n            else {\n                el.setAttribute(keys[i], attr[keys[i]]);\n            }\n        }\n    }\n}\nexport function remove(element) {\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\n}\nexport function replace(src, target) {\n    let result = target;\n    if (src.parentNode) {\n        src.parentNode.replaceChild(target, src);\n    }\n    return result;\n}\nexport function clear(element) {\n    let i = element.children.length;\n    while (i--) {\n        element.removeChild(element.children[i]);\n    }\n}\nexport function get(id) {\n    let result = DomState._document.getElementById(id);\n    if (result === null) {\n        switch (id) {\n            default:\n                result = DomState._document.body;\n                break;\n        }\n    }\n    return result;\n}\nexport function find(selector) {\n    return DomState._document.querySelector(selector);\n}\nexport function findAll(selector, root) {\n    return toArray((root || DomState._document).querySelectorAll(selector));\n}\nexport function children(root, selector) {\n    const children = toArray((root || DomState._document).children);\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\n}\nexport function findParent(root, selector) {\n    let result = root.parentElement;\n    while (result) {\n        if (is(selector, result)) {\n            break;\n        }\n        result = result.parentElement;\n    }\n    return result;\n}\nexport function position(el, x, y) {\n    el.style.top = y + \"px\";\n    el.style.left = x + \"px\";\n}\nexport function is(selector, element) {\n    let result = false;\n    if (element.matches) {\n        result = element.matches(selector);\n    }\n    else if (element.msMatchesSelector) {\n        result = element.msMatchesSelector(selector);\n    }\n    else if (element.webkitMatchesSelector) {\n        result = element.webkitMatchesSelector(selector);\n    }\n    else {\n        if (element.parentElement === null) {\n            throw new Error(\"Element has no parent\");\n        }\n        if (element.id !== \"\") {\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\n        }\n        else {\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\n        }\n    }\n    return result;\n}\nexport function setStylesExplicitly(element, ...styles) {\n    const comp = DomState._window.getComputedStyle(element);\n    for (const style of styles) {\n        element.style[style] = comp[style];\n    }\n}\n//# sourceMappingURL=Dom.js.map","export function Poolable(constructor) {\n    return class extends constructor {\n        constructor(...args) {\n            super(...args);\n        }\n        release() {\n            this.__pool__.release(this);\n        }\n        initPool(pool) {\n            this.__pool__ = pool;\n        }\n    };\n}\n//# sourceMappingURL=Poolable.js.map","import { rotationRad } from \"../Calc\";\nexport class Vec2Const {\n}\nVec2Const.EPSILON = 1e-8;\nVec2Const.IDENTITY = { x: 1, y: 1 };\nVec2Const.X_DIM = { x: 1, y: 0 };\nVec2Const.Y_DIM = { x: 0, y: 1 };\nexport class Vec2 {\n    constructor(x = 0, y = 0) {\n        this.angle = this.horizontalAngle;\n        this.direction = this.horizontalAngle;\n        this.x = x;\n        this.y = y;\n    }\n    get isZero() {\n        return this.x === 0 && this.y === 0;\n    }\n    create(x = 0, y = 0) {\n        return new (this.constructor)(x, y);\n    }\n    set(src) {\n        this.x = src.x;\n        this.y = src.y;\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.x, this.y);\n        return result;\n    }\n    toInt() {\n        this.x |= 0;\n        this.y |= 0;\n        return this;\n    }\n    ceil() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    }\n    toDecimal() {\n        this.x += Vec2Const.EPSILON;\n        this.y += Vec2Const.EPSILON;\n        return this;\n    }\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\n    length() { return Math.sqrt(this.lengthSq()); }\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\n    rotate(angle) {\n        const rot = rotationRad(angle);\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\n        this.x = nx;\n        this.y = ny;\n        return this;\n    }\n    rotateAround(center, angle) {\n        return this.subtract(center).rotate(angle).add(center);\n    }\n    normalize() {\n        const len = this.length();\n        if (len === 0) {\n            this.x = 1;\n            this.y = 0;\n        }\n        else {\n            this.x = this.x / len;\n            this.y = this.y / len;\n        }\n        return this;\n    }\n    scale(vectorB) {\n        this.x = this.x * vectorB.x;\n        this.y = this.y * vectorB.y;\n        return this;\n    }\n    relate(vectorB) {\n        this.x = this.x / vectorB.x;\n        this.y = this.y / vectorB.y;\n        return this;\n    }\n    multiply(scalar) {\n        this.x = this.x * scalar;\n        this.y = this.y * scalar;\n        return this;\n    }\n    add(vectorB) {\n        this.x = this.x + vectorB.x;\n        this.y = this.y + vectorB.y;\n        return this;\n    }\n    subtract(vectorB) {\n        this.x = this.x - vectorB.x;\n        this.y = this.y - vectorB.y;\n        return this;\n    }\n    invert() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    }\n    equals(target) {\n        return this.x === target.x && this.y === target.y;\n    }\n    almostEquals(target) {\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\n    }\n    getNormal(isNormalized) {\n        const result = this.clone();\n        if (!isNormalized) {\n            result.set(this).normalize();\n        }\n        const temp = result.x;\n        result.x = result.y;\n        result.y = -temp;\n        return result;\n    }\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\n    projectOnto(vectorB) {\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\n        this.x = coeff * vectorB.x;\n        this.y = coeff * vectorB.y;\n        return this;\n    }\n    verticalAngle() { return Math.atan2(this.x, this.y); }\n    rotateBy(rotation) {\n        const angle = -this.horizontalAngle() + rotation;\n        return this.rotate(angle);\n    }\n    max(v) {\n        this.x = Math.max(this.x, v.x);\n        this.y = Math.max(this.y, v.y);\n        return this;\n    }\n    min(v) {\n        this.x = Math.min(this.x, v.x);\n        this.y = Math.min(this.y, v.y);\n        return this;\n    }\n    zero() {\n        this.x = 0;\n        this.y = 0;\n        return this;\n    }\n}\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\nimport { Vec2 } from \"./Vec2\";\nexport class Rect {\n    get isZero() {\n        return this.start.isZero && this.stop.isZero;\n    }\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\n        this.start = new Vec2(x1, y1);\n        this.stop = new Vec2(x2, y2);\n        this.endInclusive = endInclusive;\n    }\n    create(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\n        return new (this.constructor)(x1, y1, x2, y2, endInclusive);\n    }\n    set(src) {\n        this.start.set(src.start);\n        this.stop.set(src.stop);\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.start.x, this.start.y, this.stop.x, this.stop.y);\n        return result;\n    }\n    toRange2(out) {\n        let result = out || new Range2();\n        let start = this.start;\n        let stop = this.stop;\n        result.pos.x = start.x;\n        result.pos.y = start.y;\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\n        return result;\n    }\n    scale(factor, keepCenter = true) {\n        const ow = this.stop.x - this.start.x;\n        const oh = this.stop.y - this.start.y;\n        let w = ow;\n        let h = oh;\n        w *= factor.x;\n        h *= factor.y;\n        if (keepCenter) {\n            this.start.x -= (w - ow) / 2;\n            this.start.y -= (h - oh) / 2;\n        }\n        this.stop.x = this.start.x + w;\n        this.stop.y = this.start.y + h;\n        return this;\n    }\n    translate(system) {\n        this.start.scale(system);\n        this.stop.scale(system);\n        return this;\n    }\n    equals(rect) {\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\n    }\n    toInt() {\n        this.start.toInt();\n        this.stop.toInt();\n        return this;\n    }\n    toDecimal() {\n        this.start.toDecimal();\n        this.stop.toDecimal();\n        return this;\n    }\n    area() {\n        const x = this.stop.x - this.start.x;\n        const y = this.stop.y - this.start.y;\n        return x * y;\n    }\n    move(vec) {\n        this.start.add(vec);\n        this.stop.add(vec);\n        return this;\n    }\n    contains(target) {\n        return this.start.x <= target.start.x &&\n            this.start.y <= target.start.y &&\n            this.stop.x >= target.stop.x &&\n            this.stop.y >= target.stop.y;\n    }\n    intersect(target) {\n        return this.containsPoint(target.start.x, target.start.y) ||\n            this.containsPoint(target.stop.x, target.stop.y) ||\n            this.containsPoint(target.start.x, target.stop.y) ||\n            this.containsPoint(target.stop.x, target.start.y);\n    }\n    containsPoint(x, y) {\n        return this.start.x <= x && this.stop.x >= x &&\n            this.start.y <= y && this.stop.y >= y;\n    }\n    zero() {\n        this.start.zero();\n        this.stop.zero();\n        return this;\n    }\n}\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\nimport { Vec2 } from \"./Vec2\";\nexport class Range2 {\n    get isZero() {\n        return this.pos.isZero && this.size.isZero;\n    }\n    constructor(x = 0, y = 0, w = 0, h = 0) {\n        this.pos = new Vec2(x, y);\n        this.size = new Vec2(w, h);\n    }\n    create(x = 0, y = 0, w = 0, h = 0) {\n        return new (this.constructor)(x, y, w, h);\n    }\n    set(src) {\n        this.pos.set(src.pos);\n        this.size.set(src.size);\n        return this;\n    }\n    clone(out) {\n        const result = out ? out.set(this) : this.create(this.pos.x, this.pos.y, this.size.x, this.size.y);\n        return result;\n    }\n    toRect(endInclusive = false, out) {\n        let result = out || new Rect();\n        result.start.x = this.pos.x,\n            result.start.y = this.pos.y,\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\n            result.endInclusive = endInclusive;\n        return result;\n    }\n    scale(factor, keepCenter = true) {\n        let org = null;\n        if (keepCenter) {\n            org = this.size.clone();\n        }\n        this.size.scale(factor);\n        if (keepCenter) {\n            this.pos.add(org.subtract(this.size).multiply(0.5));\n        }\n        return this;\n    }\n    translate(system) {\n        this.toRect(false).translate(system).toRange2(this);\n        return this;\n    }\n    toInt() {\n        this.pos.toInt();\n        this.size.toInt();\n        return this;\n    }\n    toDecimal() {\n        this.pos.toDecimal();\n        this.size.toDecimal();\n        return this;\n    }\n    contains(target) {\n        return this.pos.x <= target.pos.x &&\n            this.pos.y <= target.pos.y &&\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\n    }\n    intersect(target) {\n        let s = this.toRect();\n        let t = target.clone().toRect();\n        return s.intersect(t);\n    }\n    containsPoint(vec) {\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\n    }\n    first(fn) {\n        const p = new Vec2();\n        const x = this.pos.x;\n        const y = this.pos.y;\n        for (let i = 0; i < this.size.x; i++) {\n            for (let j = 0; j < this.size.y; j++) {\n                p.x = i + x, p.y = j + y;\n                if (fn(p)) {\n                    return p;\n                }\n            }\n        }\n        return null;\n    }\n    forEach(fn, start = null) {\n        const pos = new Vec2();\n        const begin = this.pos.clone().toInt();\n        if (start === null || !this.containsPoint(start)) {\n            start = begin;\n        }\n        const end = this.pos.clone().add(this.size).toInt();\n        for (let y = begin.y; y < end.y; y += 1) {\n            for (let x = begin.x; x < end.x; x += 1) {\n                if (y < start.y || (y === start.y && x < start.x)) {\n                    continue;\n                }\n                pos.x = x;\n                pos.y = y;\n                const brk = fn(pos);\n                if (brk) {\n                    return;\n                }\n            }\n        }\n    }\n    equals(range) {\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\n    }\n    zero() {\n        this.pos.zero();\n        this.size.zero();\n        return this;\n    }\n}\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\nvar win;\nif (typeof (window) === \"undefined\") {\n    win = null;\n    nativeWindow = false;\n}\nelse {\n    win = window;\n}\nexport class _Global {\n    constructor() {\n        this._window = win;\n        this._nativeWindow = nativeWindow;\n    }\n    get window() {\n        return this._window;\n    }\n    set window(v) {\n        this._window = v;\n        if (this.hasNativeWindow) {\n            win = v;\n        }\n    }\n    get hasNativeWindow() {\n        return this._nativeWindow;\n    }\n}\nexport let Global = new _Global();\n//# sourceMappingURL=Global.js.map","import { forEach } from \"../Arr\";\nimport { clone, setProperties, wipe } from \"../Obj\";\nimport { isFunction, isNotUndefined } from \"../Test\";\nimport { List } from \"./List\";\nexport class Dictionary {\n    constructor() {\n        this._lookup = Object.create(null);\n        this._list = new List();\n        this._isDirty = false;\n    }\n    create() {\n        return new (this.constructor)();\n    }\n    has(key) {\n        return this._lookup[key] !== undefined;\n    }\n    contains(key) {\n        return this.has(key);\n    }\n    get(key) {\n        return this._lookup[key];\n    }\n    set(key, value) {\n        this._isDirty = this._isDirty || this.has(key);\n        if (value !== undefined) {\n            this._lookup[key] = value;\n            if (!this._isDirty) {\n                this._list.push(value);\n            }\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.has(key)) {\n            delete this._lookup[key];\n            this._isDirty = true;\n        }\n        return this;\n    }\n    clear() {\n        wipe(this._lookup);\n        this._list.clear();\n        return this;\n    }\n    get values() {\n        this.cleanList();\n        return this._list.values;\n    }\n    get keys() {\n        return Object.keys(this._lookup);\n    }\n    get list() {\n        this.cleanList();\n        return this._list;\n    }\n    get count() {\n        let result = 0;\n        if (this._isDirty) {\n            result = this.keys.length;\n        }\n        else {\n            result = this._list.count;\n        }\n        return result;\n    }\n    cleanList() {\n        if (this._isDirty) {\n            this.reCreateList();\n        }\n    }\n    reCreateList() {\n        let lookup = this._lookup;\n        let keys = Object.keys(this._lookup);\n        let i = -1;\n        let list = this._list;\n        list.clear();\n        while (++i < keys.length) {\n            list.add(lookup[keys[i]]);\n        }\n    }\n    clone() {\n        let result = this.create();\n        result._isDirty = this._isDirty;\n        result._list = this._list.clone();\n        result._lookup = clone(this._lookup);\n        return result;\n    }\n    toJSON() {\n        return this._lookup;\n    }\n    serialize() {\n        let obj = Object.create(null);\n        forEach(this.keys, (key) => {\n            let v = this.get(key);\n            obj[key] = isFunction(v.serialize) ? v.serialize() : v;\n        });\n        return obj;\n    }\n    deserialize(obj, ...types) {\n        let [T, ...passthroughT] = types;\n        this.clear();\n        if (isNotUndefined(T)) {\n            if (isNotUndefined(T.prototype.deserialize)) {\n                for (let key of Object.keys(obj)) {\n                    this.set(key, (new T()).deserialize(obj[key], ...passthroughT));\n                }\n            }\n            else {\n                for (let key of Object.keys(obj)) {\n                    let newT = new T();\n                    setProperties(newT, obj[key]);\n                    this.set(key, newT);\n                }\n            }\n        }\n        else {\n            for (let key of Object.keys(obj)) {\n                this.set(key, obj[key]);\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\nimport { clone, equals } from \"../Obj\";\nimport { isArray, isFunction, isNotNullOrUndefined, hasWindow } from \"../Test\";\nimport { Dictionary } from \"./Dictionary\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class List {\n    constructor(arr) {\n        this._array = [];\n        this._index = null;\n        this._indexer = null;\n        this._pointer = 0;\n        if (arr === undefined) {\n            this._array = new Array();\n        }\n        else {\n            if (arr instanceof (List)) {\n                this._array = Arr.shallowCopy(arr._array);\n            }\n            else {\n                this._array = Arr.shallowCopy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this._array[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(arr) {\n        return new (this.constructor)(arr);\n    }\n    get values() {\n        return this._array;\n    }\n    get(pos) {\n        return this._array[pos];\n    }\n    getByIndex(key) {\n        let result;\n        return isNotNullOrUndefined(this._index) ? this._index.get(key) : undefined;\n    }\n    set(pos, v) {\n        if (pos >= 0 && pos < this.length) {\n            this._array[pos | 0] = v;\n            if (this._indexer !== null) {\n                this._index.set(this._indexer(v), v);\n            }\n        }\n        else {\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\n        }\n        return this;\n    }\n    get count() {\n        return this._array.length;\n    }\n    get length() {\n        return this._array.length;\n    }\n    get indexer() {\n        return this._indexer;\n    }\n    set indexer(fn) {\n        this._indexer = fn;\n        this._reindex();\n    }\n    _reindex() {\n        if (this._indexer === null) {\n            this._index = null;\n        }\n        else {\n            if (this._index === null) {\n                this._index = new Dictionary();\n            }\n            else {\n                this._index.clear();\n            }\n            this.forEach((el) => this._index.set(this._indexer(el), el));\n        }\n    }\n    fill(size, populator) {\n        size = Math.max(0, size || 0);\n        if (isFunction(populator)) {\n            this._array = Arr.create(size, populator);\n        }\n        else if (!(populator instanceof Object)) {\n            this._array = Arr.create(size, () => populator);\n        }\n        else {\n            this._array = Arr.create(size, () => clone(populator));\n        }\n        this._reindex();\n        return this;\n    }\n    clear() {\n        this._array.length = 0;\n        if (this._index !== null) {\n            this._index.clear();\n        }\n        return this;\n    }\n    add(v) {\n        this._array.push(v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    insertAt(pos, v) {\n        Arr.insertAt(this._array, pos, v);\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this;\n    }\n    push(v) {\n        if (this._indexer !== null) {\n            this._index.set(this._indexer(v), v);\n        }\n        return this._array.push(v);\n    }\n    pop() {\n        let result = this._array.pop();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    shift() {\n        let result = this._array.shift();\n        if (result !== undefined && this._indexer !== null) {\n            this._index.delete(this._indexer(result));\n        }\n        return result;\n    }\n    concat(v) {\n        let arr;\n        let arr2 = v instanceof List ? v.values : v;\n        arr = Arr.concat(this._array, arr2);\n        return this.create(arr);\n    }\n    index(arr) {\n        if (this._indexer !== null) {\n            Arr.forEach(arr, (el) => {\n                this._index.set(this._indexer(el), el);\n            });\n        }\n    }\n    unindexEl(el) {\n        if (this._indexer !== null) {\n            this._index.delete(this._indexer(el));\n        }\n    }\n    append(v) {\n        let arr2 = v instanceof List ? v.values : v;\n        Arr.append(this._array, arr2);\n        this.index(arr2);\n        return this;\n    }\n    copy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.deepCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    shallowCopy(src) {\n        let arr2 = src instanceof List ? src.values : src;\n        Arr.shallowCopyInto(arr2, this._array);\n        this.index(arr2);\n        return this;\n    }\n    clone() {\n        const arr = Arr.deepCopy(this._array);\n        let result = this.create(arr);\n        if (this._indexer !== null) {\n            result._indexer = this._indexer;\n            result._index = this._index.clone();\n        }\n        return result;\n    }\n    remove(v) {\n        Arr.remove(this._array, v);\n        this.unindexEl(v);\n        return this;\n    }\n    removeFirst(fn) {\n        let result = this.removeAt(this.indexOf(fn));\n        this.unindexEl(result);\n        return result;\n    }\n    removeAt(n) {\n        let result = Arr.removeAt(this._array, n);\n        this.unindexEl(result);\n        return result;\n    }\n    forEach(fn, startIndex = 0) {\n        Arr.forEach(this._array, fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        Arr.forSome(this._array, filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        Arr.until(this._array, fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        Arr.reverseForEach(this._array, fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        Arr.reverseUntil(this._array, fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return Arr.some(this._array, fn);\n    }\n    all(fn) {\n        return Arr.all(this._array, fn);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (isFunction(v)) {\n            result = Arr.indexOf(this._array, v);\n        }\n        else {\n            result = Arr.indexOfElement(this._array, v);\n        }\n        return result;\n    }\n    contains(v) {\n        let result = false;\n        if (isFunction(v)) {\n            result = this.find(v) !== undefined;\n        }\n        else {\n            if (this._indexer !== null) {\n                result = this._index.contains(this._indexer(v));\n            }\n            else {\n                result = Arr.indexOfElement(this._array, v) !== -1;\n            }\n        }\n        return result;\n    }\n    reverse() {\n        Arr.reverse(this._array);\n        return this;\n    }\n    first(fn) {\n        let index = -1;\n        let result;\n        if (fn === undefined) {\n            index = 0;\n        }\n        else {\n            index = Arr.indexOf(this._array, fn);\n        }\n        return index === -1 ? undefined : this.get(index);\n    }\n    find(fn) {\n        return this.first(fn);\n    }\n    last() {\n        return this.length === 0 ? undefined : this.get(this.length - 1);\n    }\n    filter(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    select(fn) {\n        return this.create(Arr.filter(this._array, fn));\n    }\n    selectInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.filterInto(arr, this._array, fn);\n        this.index(arr);\n        return this;\n    }\n    head(count = 1) {\n        count = Math.max(0, count);\n        return this.create(Arr.slice(this._array, 0, count));\n    }\n    tail(count = 1) {\n        count = Math.min(this._array.length, count);\n        return this.create(Arr.slice(this._array, Math.max(0, this._array.length - count)));\n    }\n    splice(pos = 0, remove = Infinity, insert = []) {\n        Arr.splice(this._array, pos, remove, isArray(insert) ? insert : insert.values);\n        this._reindex();\n        return this;\n    }\n    orderBy(fn) {\n        this._array.sort(fn);\n        return this;\n    }\n    map(fn) {\n        return this.create(Arr.map(this._array, fn));\n    }\n    mapInto(src, fn) {\n        let arr = src instanceof List ? src.values : src;\n        Arr.mapInto(arr, this._array, fn);\n        this._reindex();\n        return this;\n    }\n    reduce(fn, start) {\n        return Arr.reduce(this._array, fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return Arr.reduceUntil(this._array, fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return Arr.reverseReduce(this._array, fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._array, b.values);\n        return result;\n    }\n    same(b) {\n        let a = this;\n        let count = 0;\n        if (a.length === b.length) {\n            if (a.indexer !== null) {\n                b.until((el) => !a.contains(el), (el, i) => ++count);\n            }\n            else {\n                a.until((el) => !b.contains(el), (el, i) => ++count);\n            }\n        }\n        return count === a.length;\n    }\n    intersect(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            short.forEach((el) => {\n                if (long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            long.forEach((el) => {\n                if (short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    union(b) {\n        let result = this.create();\n        let long;\n        let short;\n        result.indexer = this.indexer;\n        if (this.length < b.length) {\n            short = this, long = b;\n        }\n        else {\n            long = this, short = b;\n        }\n        if (long.indexer !== null) {\n            result = long.clone();\n            short.forEach((el) => {\n                if (!long.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        else {\n            result = short.clone();\n            long.forEach((el) => {\n                if (!short.contains(el)) {\n                    result.push(el);\n                }\n            });\n        }\n        return result;\n    }\n    subtract(b) {\n        let result = this.create();\n        result.indexer = this.indexer;\n        result = this.select((el) => !b.contains(el));\n        return result;\n    }\n    zip(list, fn = (t, u) => [t, u]) {\n        let result = this.create();\n        let length = list.length;\n        this.until(function (el, i) {\n            return i >= length;\n        }, function (el, i) {\n            result.push(fn(el, list.get(i)));\n        });\n        return result;\n    }\n    unzip(fn = (el) => [el[0], el[1]]) {\n        let result = [this.create(), this.create()];\n        this.forEach(function (el) {\n            let tuple = fn(el);\n            result[0].push(tuple[0]);\n            result[1].push(tuple[1]);\n        });\n        return result;\n    }\n    flatten(maxDepth = Infinity) {\n        return this.create(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\n    }\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\n        let i = -1;\n        const len = src.length;\n        if (++depth > maxDepth) {\n            result.push(src);\n        }\n        else {\n            while (++i < len) {\n                if (isArray(src[i])) {\n                    this._flattenInner(src[i], maxDepth, depth, result);\n                }\n                else if (src[i] instanceof List) {\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\n                }\n                else {\n                    result.push(src[i]);\n                }\n            }\n        }\n        return result;\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        Arr.deserialize(array, this._array, ...types);\n        return this;\n    }\n}\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\nimport { equals } from \"../Obj\";\nimport { isFunction, hasWindow } from \"../Test\";\nimport { List } from \"./List\";\nif (hasWindow() && !window.Symbol) {\n    window.Symbol = { iterator: \"iterator\" };\n}\nexport class Comparer {\n}\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\nexport class SortedList {\n    constructor(comparer = ((a, b) => a < b ? -1 : a === b ? 0 : 1), arr) {\n        this._list = new List();\n        this._pointer = 0;\n        this._cmp = comparer;\n        if (arr === undefined) {\n            this._list = new List();\n        }\n        else {\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\n                this.copy(arr.values);\n            }\n            else {\n                this.copy(arr);\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next(value) {\n        return {\n            done: this._pointer >= this.length,\n            value: this._pointer < this.length ? this.values[this._pointer++] : (this._pointer = 0, undefined)\n        };\n    }\n    create(comparer, arr) {\n        return new (this.constructor)(comparer, arr);\n    }\n    get values() {\n        return this._list.values;\n    }\n    get(pos) {\n        return this._list.get(pos);\n    }\n    get count() {\n        return this._list.length;\n    }\n    get length() {\n        return this._list.length;\n    }\n    get comparer() {\n        return this._cmp;\n    }\n    set comparer(v) {\n        this._cmp = v;\n        this.sort();\n    }\n    sort() {\n        this._list.orderBy(this._cmp);\n    }\n    fill(size, populator) {\n        this._list.fill(size, populator);\n        this.sort();\n        return this;\n    }\n    clear() {\n        this._list.clear();\n        return this;\n    }\n    add(v) {\n        let index = this.getInsertIndex(v);\n        this._list.insertAt(index, v);\n        return this;\n    }\n    pop() {\n        return this._list.pop();\n    }\n    shift() {\n        return this._list.shift();\n    }\n    bulkAdd(v) {\n        if (v instanceof List || v instanceof SortedList) {\n            this._list.append(v.values);\n        }\n        else {\n            this._list.append(v);\n        }\n        this.sort();\n        return this;\n    }\n    copy(src) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.copy(src.values);\n        }\n        else {\n            this._list.copy(src);\n        }\n        this.sort();\n        return this;\n    }\n    clone() {\n        return this.create(this._cmp, this._list.clone());\n    }\n    remove(v) {\n        let index = this.indexOf(v);\n        if (index !== -1) {\n            this._list.removeAt(index);\n        }\n        return this;\n    }\n    removeAt(n) {\n        return this._list.removeAt(n);\n    }\n    removeFirst(fn) {\n        return this._list.removeFirst(fn);\n    }\n    forEach(fn, startIndex = 0) {\n        this._list.forEach(fn, startIndex);\n        return this;\n    }\n    forSome(filter, fn) {\n        this._list.forSome(filter, fn);\n        return this;\n    }\n    until(fnOrTest, fn, startIndex) {\n        this._list.until(fnOrTest, fn, startIndex);\n        return this;\n    }\n    reverseForEach(fn) {\n        this._list.reverseForEach(fn);\n        return this;\n    }\n    reverseUntil(fnOrTest, fn) {\n        this._list.reverseUntil(fnOrTest, fn);\n        return this;\n    }\n    some(fn) {\n        return this._list.some(fn);\n    }\n    all(fn) {\n        return this._list.all(fn);\n    }\n    getInsertIndex(v) {\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\n    }\n    indexOf(v) {\n        let result = -1;\n        if (v instanceof Function) {\n            result = this._list.indexOf(v);\n        }\n        else {\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\n        }\n        return result;\n    }\n    contains(v) {\n        return this.indexOf(v) !== -1;\n    }\n    first(fn) {\n        return this._list.first(fn);\n    }\n    find(fn) {\n        return this._list.find(fn);\n    }\n    last() {\n        return this._list.last();\n    }\n    filter(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    select(fn) {\n        return this.create(this._cmp, this._list.filter(fn));\n    }\n    selectInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.selectInto(src.values, fn);\n        }\n        else {\n            this._list.selectInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    head(count = 1) {\n        return this.create(this.comparer, this._list.head(count));\n    }\n    tail(count = 1) {\n        return this.create(this.comparer, this._list.tail(count));\n    }\n    map(fn) {\n        return this._list.map(fn);\n    }\n    mapInto(src, fn) {\n        if (src instanceof List || src instanceof SortedList) {\n            this._list.mapInto(src.values, fn);\n        }\n        else {\n            this._list.mapInto(src, fn);\n        }\n        this.sort();\n        return this;\n    }\n    reduce(fn, start) {\n        return this._list.reduce(fn, start);\n    }\n    reduceUntil(fn, test, start) {\n        return this._list.reduceUntil(fn, test, start);\n    }\n    reverseReduce(fn, start) {\n        return this._list.reverseReduce(fn, start);\n    }\n    reverseReduceUntil(fn, test, start) {\n        return this._list.reverseReduceUntil(fn, test, start);\n    }\n    equals(b) {\n        const result = equals(this._list.values, b.values);\n        return result;\n    }\n    same(b) {\n        return this.equals(b);\n    }\n    intersect(b) {\n        let result = this.create(this.comparer);\n        let long;\n        let short;\n        if (this.length > 0 && b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (longPos < lastPos && ++i < shortLen) {\n                    let el = short.get(i);\n                    let aVsB;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if (longPos < lastPos && aVsB === 0) {\n                        result.add(el);\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                short.forEach((el) => {\n                    if (long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = result.bulkAdd(short.toList().intersect(long));\n            }\n        }\n        return result;\n    }\n    union(b) {\n        let result;\n        let long;\n        let short;\n        if (this.length > 0 || b.length > 0) {\n            if (this.length < b.length) {\n                short = this, long = b;\n            }\n            else {\n                long = this, short = b;\n            }\n            if (b instanceof SortedList && this.comparer === b.comparer) {\n                result = this.create(this.comparer, long.values);\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\n                let lastPos = long.getInsertIndex(short.last()) - 1;\n                let i = -1;\n                let shortLen = short.length;\n                while (++i < shortLen && longPos < lastPos) {\n                    let el = short.get(i);\n                    let aVsB = -1;\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\n                        void (0);\n                    }\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\n                        result.add(el);\n                    }\n                }\n                if (i < shortLen) {\n                    --i;\n                    while (++i < shortLen) {\n                        result.add(short.get(i));\n                    }\n                }\n            }\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\n                result = this.create(this.comparer, long.values);\n                short.forEach((el) => {\n                    if (!long.contains(el)) {\n                        result.add(el);\n                    }\n                });\n            }\n            else {\n                result = this.create(this.comparer, short.toList().union(long));\n            }\n        }\n        else {\n            result = this.create(this.comparer);\n        }\n        return result;\n    }\n    toList() {\n        return new List(this.values);\n    }\n    toJSON() {\n        return this.values;\n    }\n    serialize() {\n        return this.values.map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        this._list.deserialize(array, ...types);\n        this.sort();\n        return this;\n    }\n}\n//# sourceMappingURL=SortedList.js.map","import { deepCopy, slice, deserialize } from \"../Arr\";\nimport { isFunction } from \"../Test\";\nimport { List } from \"./List\";\nexport class Stack {\n    constructor(size) {\n        this.DEFAULT_SIZE = 100;\n        this._pos = 0;\n        this._limit = 0;\n        if (!size) {\n            size = this.DEFAULT_SIZE;\n        }\n        this.DEFAULT_SIZE = size;\n        this._array = new Array(size);\n        this.push = this.fastPush;\n    }\n    get values() {\n        return slice(this._array, 0, this._pos);\n    }\n    get depth() {\n        return this._pos;\n    }\n    get size() {\n        return this._pos;\n    }\n    get isEmpty() {\n        return this.size === 0;\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(value) {\n        if (value < 0) {\n            value = 0;\n        }\n        this._limit = value;\n        if (value === 0) {\n            this.push = this.fastPush;\n        }\n        else {\n            this.push = this.limitedPush;\n            this.limitObjects();\n        }\n    }\n    create(size) {\n        return new (this.constructor)(size);\n    }\n    push(obj) {\n    }\n    fastPush(obj) {\n        this._array[this._pos++] = obj;\n    }\n    limitedPush(obj) {\n        this._array[this._pos] = obj;\n        ++this._pos;\n        this.limitObjects();\n    }\n    pop() {\n        let result = undefined;\n        if (this._pos !== 0) {\n            result = this._array[--this._pos];\n        }\n        return result;\n    }\n    peek() {\n        return this._array[this._pos - 1];\n    }\n    peekAt(index) {\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\n    }\n    toList() {\n        const result = new List();\n        return new List(this.values);\n    }\n    clear() {\n        this._pos = 0;\n        this._array.length = this.DEFAULT_SIZE;\n        return this;\n    }\n    clone() {\n        const arr = deepCopy(this._array);\n        let result = this.create(this.DEFAULT_SIZE);\n        result._array = arr;\n        result._limit = this._limit;\n        result._pos = this._pos;\n        return result;\n    }\n    limitObjects() {\n        while (this._pos > this._limit) {\n            this._array.shift();\n            --this._pos;\n        }\n    }\n    toJSON() {\n        return slice(this.values, 0, this._pos);\n    }\n    serialize() {\n        return slice(this.values, 0, this._pos).map((el) => isFunction(el.serialize) ? el.serialize() : el);\n    }\n    deserialize(array, ...types) {\n        deserialize(array, this._array, ...types);\n        this._pos = array.length;\n        return this;\n    }\n}\n//# sourceMappingURL=Stack.js.map","class TimerState {\n}\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\nexport class Timer {\n    static get time() {\n        return TimerState._time;\n    }\n    static now() {\n        if (TimerState._hasPerformance) {\n            return performance.now();\n        }\n        else {\n            const hrTime = process.hrtime();\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\n        }\n    }\n    static start() {\n        const now = Timer.now();\n        TimerState._start = TimerState._last = now;\n        return TimerState._time = 0;\n    }\n    static stop() {\n        const start = TimerState._start;\n        const now = Timer.now();\n        TimerState._last = now;\n        return TimerState._time = now - start;\n    }\n}\n//# sourceMappingURL=Timer.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { map } from \"../Arr\";\nimport { clone, isSameClass, setProperties } from \"../Obj\";\nimport { Initable } from \"../standard/mixins/Initable\";\nimport { isArray } from \"../Test\";\nimport { newUUID } from \"../Util\";\nimport { Dictionary } from \"./Dictionary\";\nimport { List } from \"./List\";\nimport { Stack } from \"./Stack\";\nlet Tree = Tree_1 = class Tree {\n    constructor(id) {\n        this.id = \"\";\n        this.parent = null;\n        this.children = null;\n        this.data = null;\n        this.virtual = false;\n        this.id = id || newUUID();\n    }\n    static fromObject(obj) {\n        const parent = (this instanceof Tree_1) ? this : null;\n        const root = new Tree_1(obj.id).init({ data: obj.data, parent });\n        if (obj.children !== undefined && isArray(obj.children)) {\n            root.children = new List(map(obj.children, Tree_1.fromObject.bind(root)));\n        }\n        return root;\n    }\n    static fromNodeList(nodes, mapcfg, virtualRoot = false) {\n        let result = new Tree_1();\n        let mapResolver = (key) => {\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\n                    mapcfg[key];\n        };\n        let map = {\n            id: mapResolver(\"id\"),\n            parent: mapResolver(\"parent\"),\n            data: mapResolver(\"data\")\n        };\n        let list = new List(nodes);\n        let lookup = new Dictionary();\n        function getLookupKey(node) {\n            return node.parent ? `${node.parent.id}_${node.id}` : \"_root_\" + node.id;\n        }\n        let nodeList = list.map((el) => new Tree_1().init({ id: map.id(el), data: map.data(el) }));\n        nodeList.forEach((node, i) => {\n            if (!lookup.has(node.id)) {\n                lookup.set(node.id, []);\n            }\n            lookup.get(node.id).push(node);\n        });\n        let rootNodes = new List();\n        list.forEach((el, i) => {\n            let parentId = map.parent(el);\n            let nodeId = map.id(el);\n            if (lookup.contains(parentId)) {\n                lookup.get(parentId).forEach((p) => p.add(nodeList.get(i)));\n            }\n            else {\n                rootNodes.add(nodeList.get(i));\n            }\n        });\n        if (virtualRoot === false) {\n            result = rootNodes.first();\n        }\n        else {\n            result = new Tree_1().init({ virtual: true });\n            rootNodes.forEach((el) => result.add(el));\n        }\n        return result;\n    }\n    create(...args) {\n        return new (this.constructor)(...args);\n    }\n    init(obj) {\n        setProperties(this, obj);\n        return this;\n    }\n    insertAt(pos, data, id) {\n        let node;\n        if (this.children === null || this.children.count <= pos) {\n            node = this.add(data);\n        }\n        else {\n            node = this.create(id).init({ data, parent: this });\n            this.children.insertAt(pos, node);\n        }\n        return node;\n    }\n    add(data, id) {\n        let node;\n        if (this.children === null) {\n            this.children = new List();\n        }\n        if (isSameClass(data, this)) {\n            node = data;\n            node.parent = this;\n            this.children.add(node);\n        }\n        else {\n            node = (this.create(id)).init({ data: data, parent: this });\n            this.children.add(node);\n        }\n        return node;\n    }\n    remove() {\n        if (this.parent !== null) {\n            this.parent.children.remove(this);\n        }\n    }\n    prune() {\n        if (this.children !== null) {\n            this.children\n                .forEach(function (el, i) {\n                el.parent = null;\n            })\n                .clear();\n        }\n        this.children = null;\n        return this;\n    }\n    reduce(fn, start) {\n        const stack = new Stack();\n        let acc = start;\n        if (!fn) {\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\n        }\n        if (start === undefined) {\n            acc = [];\n        }\n        let cur;\n        let i;\n        stack.push(this);\n        while (cur = stack.pop()) {\n            acc = fn(acc, cur);\n            i = (cur.children && cur.children.count) || 0;\n            while (i--) {\n                stack.push(cur.children.get(i));\n            }\n        }\n        return acc;\n    }\n    clone() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children === null ? null : this.children.clone();\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\n        return result;\n    }\n    duplicateNode() {\n        const result = this.create();\n        result.id = this.id;\n        result.parent = this.parent;\n        result.children = this.children;\n        result.data = this.data;\n        return result;\n    }\n    filter(condition) {\n        const root = this.duplicateNode();\n        const children = this.children;\n        if (children !== null) {\n            root.children =\n                root.children\n                    .select(condition)\n                    .map(function (el, i) {\n                    return el.filter(condition);\n                });\n        }\n        return root;\n    }\n    select(condition, acc = new List()) {\n        const result = acc;\n        const children = this.children;\n        if (condition === undefined || condition(this)) {\n            result.add(this);\n        }\n        if (children) {\n            children.reduce(function (acc, cur) {\n                return cur.select(condition, acc);\n            }, result);\n        }\n        return result;\n    }\n    find(condition) {\n        let result = null;\n        const children = this.children;\n        if (children !== null) {\n            let i = -1;\n            const len = this.children.count;\n            const val = this.children.values;\n            while (++i < len) {\n                if (condition(val[i].data)) {\n                    result = val[i];\n                    break;\n                }\n                else {\n                    result = val[i].children !== null ? val[i].find(condition) : null;\n                    if (result !== null) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    depth() {\n        let result = 0;\n        let node = this;\n        while (node.parent) {\n            node = node.parent;\n            ++result;\n        }\n        return result;\n    }\n    sort(comparer) {\n        if (this.children !== null) {\n            this.children.orderBy(comparer);\n            this.children.forEach((el) => el.sort(comparer));\n        }\n        return this;\n    }\n    toJSON() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.toJSON()));\n        }\n        return result.toJSON();\n    }\n    serialize() {\n        let result = new List();\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\n        if (this.children !== null) {\n            this.children.forEach((node) => result.append(node.serialize()));\n        }\n        return result.serialize();\n    }\n};\nTree = Tree_1 = __decorate([\n    Initable,\n    __metadata(\"design:paramtypes\", [Object])\n], Tree);\nexport { Tree };\nvar Tree_1;\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\nexport class Uri {\n    constructor() {\n        this._a = null;\n        this.hash = \"\";\n        this.pathName = \"\";\n        this.port = \"\";\n        this.hostName = \"\";\n        this.protocol = \"\";\n        this.origin = \"\";\n        this.full = \"\";\n        this.args = {};\n        this.init();\n    }\n    init() {\n        if (Global.window !== null) {\n            this._a = Global.window.document.createElement(\"a\");\n            this._a.setAttribute(\"href\", Global.window.location.href);\n            const args = this.args;\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\n                const p = arg.split(\"=\");\n                args[p[0]] = p[1];\n            });\n            this.hash = this._a.hash;\n            this.pathName = this._a.pathname;\n            this.port = this._a.port;\n            this.hostName = this._a.hostname;\n            this.protocol = this._a.protocol;\n            this.origin = this._a.origin;\n            this.full = this._a.href;\n        }\n    }\n}\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\n    const orgFn = descriptor.value;\n    descriptor.value = function (...args) {\n        let result = new Promise((resolve, reject) => {\n            let value;\n            try {\n                value = orgFn.apply(this, args);\n                resolve(value);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n        return result;\n    };\n    return descriptor;\n};\nasync.before = function (decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result = new Promise((resolve, reject) => {\n                const callback = () => {\n                    orgFn.apply(this, args)\n                        .then((value) => {\n                        resolve(value);\n                    })\n                        .catch((reason) => {\n                        reject(reason);\n                    });\n                };\n                decoration.apply(this, [orgFn.name].concat(args))\n                    .then((value) => {\n                    callback();\n                })\n                    .catch((reason) => {\n                    callback();\n                });\n            });\n            return result;\n        };\n        return descriptor;\n    };\n};\nasync.after = function (decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result = new Promise((resolve, reject) => {\n                const callback = (value, reason) => {\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\n                        .then((value) => {\n                        resolve(value);\n                    })\n                        .catch((reason) => {\n                        reject(reason);\n                    });\n                };\n                orgFn.apply(this, args)\n                    .then((value) => {\n                    callback(value, undefined);\n                })\n                    .catch((reason) => {\n                    callback(undefined, reason);\n                });\n            });\n            return result;\n        };\n        return descriptor;\n    };\n};\nasync.provided = function (async_predicate) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result = new Promise((resolve, reject) => {\n                const callback = () => {\n                    orgFn.apply(this, args)\n                        .then((value) => {\n                        resolve(value);\n                    })\n                        .catch((reason) => {\n                        reject(reason);\n                    });\n                };\n                async_predicate.apply(this, [orgFn.name].concat(args))\n                    .then((value) => {\n                    if (value) {\n                        callback();\n                    }\n                    else {\n                        reject(false);\n                    }\n                })\n                    .catch((reason) => {\n                    reject(reason);\n                });\n            });\n            return result;\n        };\n        return descriptor;\n    };\n};\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\n    constructor(cls, growthStep = 10) {\n        this._pool = [];\n        this._available = 0;\n        this._size = 0;\n        this._cls = cls;\n        this._growthStep = growthStep;\n        this.create();\n    }\n    get available() {\n        return this._available;\n    }\n    get size() {\n        return this._size;\n    }\n    create() {\n        let i = 0;\n        for (; i < this._growthStep; i++) {\n            this._pool.push(new this._cls());\n        }\n        this._size += this._growthStep;\n        this._available += this._growthStep;\n    }\n    get() {\n        let result;\n        if (this._pool.length === 0) {\n            this.create();\n        }\n        result = this._pool.pop();\n        --this._available;\n        result.initPool(this);\n        return result;\n    }\n    release(obj) {\n        this._pool.push(obj);\n        ++this._available;\n    }\n}\n//# sourceMappingURL=Pool.js.map","export var MocDataType;\n(function (MocDataType) {\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\n})(MocDataType || (MocDataType = {}));\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\nexport function randomString(length = 25) {\n    let result = \"\";\n    for (let i = 0; i < length; i += 1) {\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\n    }\n    return result;\n}\nexport function randomInt() {\n    return this.randomNumber() | 0;\n}\nexport function randomNumber() {\n    return Math.random() * 2147483647;\n}\nexport function numericArray(length, type = MocDataType.LinearInt) {\n    const result = new Array(length);\n    switch (type) {\n        case MocDataType.RandomInt:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomInt();\n            }\n            break;\n        case MocDataType.LinearFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i + 0.5;\n            }\n            break;\n        case MocDataType.RandomFloat:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = this.randomNumber();\n            }\n            break;\n        default:\n            for (let i = 0; i < length; i += 1) {\n                result[i] = i;\n            }\n            break;\n    }\n    return result;\n}\nexport function stringArray(arrayLength, stringLength) {\n    const result = new Array(arrayLength);\n    let i = -1;\n    while (++i < arrayLength) {\n        result[i] = this.randomString(stringLength);\n    }\n    return result;\n}\n//# sourceMappingURL=MocData.js.map","export class KeyValuePair {\n}\n//# sourceMappingURL=KeyValuePair.js.map","export function before(decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            decoration.apply(this, [orgFn.name].concat(args));\n            const result = orgFn.apply(this, args);\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function after(decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\n            decoration.apply(this, args);\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function around(decoration) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result;\n            let callback = () => result = orgFn.apply(this, args);\n            decoration.apply(this, [callback, orgFn.name].concat(args));\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function provided(condition) {\n    return function (target, propertyKey, descriptor) {\n        const orgFn = descriptor.value;\n        descriptor.value = function (...args) {\n            let result;\n            if (condition.apply(this, [orgFn.name].concat(args))) {\n                result = orgFn.apply(this, args);\n            }\n            return result;\n        };\n        return descriptor;\n    };\n}\nexport function once(target, propertyKey, descriptor) {\n    const orgFn = descriptor.value;\n    let result;\n    let first = true;\n    descriptor.value = function (...args) {\n        if (first) {\n            result = orgFn.apply(this, args);\n            first = false;\n        }\n        return result;\n    };\n    return descriptor;\n}\n//# sourceMappingURL=Combinators.js.map","import * as Arr from \"./Arr\";\nimport * as Calc from \"./Calc\";\nimport * as Dom from \"./Dom\";\nimport { Global } from \"./Global\";\nimport * as MocData from \"./MocData\";\nimport * as Obj from \"./Obj\";\nimport { Initable } from \"./standard/mixins/Initable\";\nimport { Poolable } from \"./standard/mixins/Poolable\";\nimport { Pool } from \"./standard/Pool\";\nimport { Dictionary } from \"./struct/Dictionary\";\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\nimport { List } from \"./struct/List\";\nimport { Range2 } from \"./struct/Range2\";\nimport { Rect } from \"./struct/Rect\";\nimport { Stack } from \"./struct/Stack\";\nimport { Tree } from \"./struct/Tree\";\nimport { Vec2 } from \"./struct/Vec2\";\nimport * as Test from \"./Test\";\nimport { Timer } from \"./Timer\";\nimport { Uri } from \"./Uri\";\nimport * as Util from \"./Util\";\nexport function integrate(alias) {\n    let stringAlias = false;\n    let objectAlias = false;\n    let list = [\n        { name: \"Arr\", object: Arr },\n        { name: \"Calc\", object: Calc },\n        { name: \"Dom\", object: Dom },\n        { name: \"MocData\", object: MocData },\n        { name: \"Obj\", object: Obj },\n        { name: \"Initable\", object: Initable },\n        { name: \"Poolable\", object: Poolable },\n        { name: \"Pool\", object: Pool },\n        { name: \"Dictionary\", object: Dictionary },\n        { name: \"KeyValuePair\", object: KeyValuePair },\n        { name: \"List\", object: List },\n        { name: \"Range2\", object: Range2 },\n        { name: \"Rect\", object: Rect },\n        { name: \"Stack\", object: Stack },\n        { name: \"Tree\", object: Tree },\n        { name: \"Vec2\", object: Vec2 },\n        { name: \"Test\", object: Test },\n        { name: \"Timer\", object: Timer },\n        { name: \"Uri\", object: Uri },\n        { name: \"Util\", object: Util },\n    ];\n    if (typeof (alias) === \"string\") {\n        Global.window[alias] = {};\n        stringAlias = true;\n    }\n    for (const stuff of list) {\n        if (stringAlias) {\n            Global.window[alias][stuff.name] = stuff.object;\n        }\n        else if (objectAlias) {\n            alias[stuff.name] = stuff.object;\n        }\n        else {\n            Global.window[stuff.name] = stuff.object;\n        }\n    }\n}\n//# sourceMappingURL=Integration.js.map"],"names":["rotationRad","rotation","deg","CalcConst","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","Object","prototype","toString","call","isFunction","isNumber","x","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","areUndefined","isUndefined","isNotUndefined","wipe","obj","keys","setNull","constructor","clear","key","isClassOf","b","isSameClass","equals","isDifferent","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","target","arrS","arrT","setProperties","values","mapping","value","flatten","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","splice","pos","remove","insert","Error","srcLen","max","insertLen","newLen","delta","append","arr","index","offset","removeAt","indexOfElement","el","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","create","populator","deserialize","types","T","passthroughT","newT","Initable","[object Object]","newUUID","d","Timer","now","replace","c","r","random","floor","counter","UtilState","_counter","LoggableCounter","callDebugger","proxyFn","objOrClass","fnName","bind","toArray","setAttr","_el","attr","get","k","styles","styleKeys","style","setProperty","join","setAttribute","children","removeChild","id","DomState","_document","getElementById","body","is","selector","matches","msMatchesSelector","webkitMatchesSelector","parentElement","querySelector","querySelectorAll","Poolable","super","__pool__","release","pool","RADIAN_FACTOR","PI","DEG360","ROTATION_LOOKUP","lookup","cos","sin","NaN","radian","Vec2Const","EPSILON","IDENTITY","y","X_DIM","Y_DIM","Vec2","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","Rect","stop","x1","y1","x2","y2","endInclusive","Range2","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","win","_Global","_window","_nativeWindow","hasNativeWindow","nodeType","String","destroy","exclude","sources","hasOwnProperty","at","Dictionary","_lookup","_list","List","_isDirty","has","cleanList","list","reCreateList","serialize","Symbol","iterator","_array","_index","_indexer","_pointer","Arr.shallowCopy","done","indexer","_reindex","Arr.create","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Arr.indexOf","Arr.indexOfElement","find","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","Arr.slice","Arr.splice","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","select","u","tuple","maxDepth","_flattenInner","depth","Arr.deserialize","SortedList","comparer","_cmp","copy","orderBy","fill","getInsertIndex","removeFirst","Function","last","selectInto","head","tail","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","name","_value","log","_int","0","fnString","substring","lastIndexOf","inc","warn","error","superfn","assertion","message","isDebug","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadata","exports","Tree_1","parent","data","virtual","root","init","fromObject","nodes","mapcfg","virtualRoot","mapResolver","nodeList","node","rootNodes","parentId","stack","cur","condition","duplicateNode","toJSON","Tree","Sides","document","createElement","html","innerHTML","appendChild","parentNode","replaceChild","top","comp","getComputedStyle","Uri","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","propertyKey","descriptor","orgFn","Promise","resolve","reject","err","before","decoration","callback","then","catch","reason","after","provided","async_predicate","Pool","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool","MocDataType","VALID_CHARS","charAt","randomNumber","type","LinearInt","RandomInt","randomInt","LinearFloat","RandomFloat","arrayLength","stringLength","randomString","KeyValuePair","alias","stringAlias","object","Arr","Calc","Dom","MocData","Obj","Test","Util","stuff"],"mappings":"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"}