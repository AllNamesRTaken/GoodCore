{"version":3,"file":"goodcore.es6.umd.min.js","sources":["lib/Calc.js","lib/Test.js","lib/Obj.js","lib/Arr.js","lib/Util.js","lib/Dom.js","lib/standard/mixins/Poolable.js","lib/standard/mixins/Initable.js","lib/struct/Vec2.js","lib/struct/Rect.js","lib/struct/Range2.js","lib/Global.js","lib/struct/Dictionary.js","lib/struct/List.js","lib/struct/SortedList.js","lib/struct/Stack.js","lib/Timer.js","lib/struct/Tree.js","lib/Uri.js","lib/standard/AsyncCombinators.js","lib/standard/Pool.js","lib/MocData.js","lib/struct/KeyValuePair.js","lib/standard/Combinators.js","lib/Integration.js"],"sourcesContent":["export class CalcConst {\r\n}\r\nCalcConst.ROTATION_DEGREE_PRECISION = 1;\r\nCalcConst.RADIAN_FACTOR = (1 / 360) * (2 * Math.PI);\r\nCalcConst.DEGREE_FACTOR = (1 / (2 * Math.PI) * 360);\r\nCalcConst.DEG360 = 360 * CalcConst.ROTATION_DEGREE_PRECISION;\r\nCalcConst.ROTATION_LOOKUP = (function () {\r\n    const lookup = [];\r\n    for (let i = 0; i < 360 * CalcConst.ROTATION_DEGREE_PRECISION; i++) {\r\n        lookup.push([Math.cos(i * CalcConst.RADIAN_FACTOR), Math.sin(i * CalcConst.RADIAN_FACTOR)]);\r\n    }\r\n    return lookup;\r\n})();\r\nexport function sign(x) {\r\n    return typeof x === \"number\" ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\nexport function rotationDeg(rotation) {\r\n    let deg = (rotation * CalcConst.ROTATION_DEGREE_PRECISION) | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return CalcConst.ROTATION_LOOKUP[deg];\r\n}\r\nexport function rotationRad(rotation) {\r\n    const deg = rotation * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    return this.rotationDeg(deg / CalcConst.ROTATION_DEGREE_PRECISION);\r\n}\r\nexport function closestRadianRotation(radian) {\r\n    let deg = radian * CalcConst.DEGREE_FACTOR * CalcConst.ROTATION_DEGREE_PRECISION | 0;\r\n    while (deg < 0) {\r\n        deg += CalcConst.DEG360;\r\n    }\r\n    while (deg >= CalcConst.DEG360) {\r\n        deg -= CalcConst.DEG360;\r\n    }\r\n    return deg * CalcConst.RADIAN_FACTOR / CalcConst.ROTATION_DEGREE_PRECISION;\r\n}\r\n//# sourceMappingURL=Calc.js.map","import { Global } from \"./Global\";\r\nexport function hasWindow() {\r\n    return Global.window !== null;\r\n}\r\nexport function hasConsole() {\r\n    return this.hasWindow() && Global.window.console !== undefined || typeof (console) === \"function\";\r\n}\r\nexport function isArray(it) {\r\n    return !!(it && (it instanceof Array || typeof (it) === \"array\"));\r\n}\r\nexport function isElement(target) {\r\n    return target !== undefined && target !== null && target.nodeType === 1 ? true : false;\r\n}\r\nexport function isFunction(it) {\r\n    return Object.prototype.toString.call(it) === \"[object Function]\";\r\n}\r\nexport function isNumber(x) {\r\n    return x === +x;\r\n}\r\nexport function isInt(x) {\r\n    return isNumber(x) && (x === (x | 0));\r\n}\r\nexport function isString(x) {\r\n    return isNotNullOrUndefined(x) && x.constructor === String;\r\n}\r\nexport function areNullOrUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined || a === null;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotNullOrUndefined(...args) {\r\n    return !areNullOrUndefined(...args);\r\n}\r\nexport function isNullOrUndefined(arg) {\r\n    return arg === undefined || arg === null;\r\n}\r\nexport function isNotNullOrUndefined(arg) {\r\n    return !isNullOrUndefined(arg);\r\n}\r\nexport function areUndefined(...args) {\r\n    const len = args.length;\r\n    let i = -1;\r\n    let a;\r\n    let result = false;\r\n    while (!result && ++i < len) {\r\n        a = args[i];\r\n        result = a === undefined;\r\n    }\r\n    return result;\r\n}\r\nexport function areNotUndefined(...args) {\r\n    return !areUndefined(...args);\r\n}\r\nexport function isUndefined(arg) {\r\n    return arg === undefined;\r\n}\r\nexport function isNotUndefined(arg) {\r\n    return !isUndefined(arg);\r\n}\r\n//# sourceMappingURL=Test.js.map","import { deepCopy, flatten } from \"./Arr\";\r\nimport { areNotNullOrUndefined, isArray, isFunction } from \"./Test\";\r\nexport function destroy(obj) {\r\n    if (obj.constructor.prototype.destroy !== undefined) {\r\n        obj.destroy();\r\n    }\r\n    else {\r\n        setNull(obj);\r\n    }\r\n}\r\nexport function wipe(obj) {\r\n    const keys = Object.keys(obj);\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        delete obj[keys[i]];\r\n    }\r\n}\r\nexport function setNull(obj) {\r\n    if (obj.constructor.prototype.clear !== undefined) {\r\n        obj.clear();\r\n    }\r\n    else {\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            obj[key] = null;\r\n        }\r\n    }\r\n}\r\nexport function isClassOf(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a instanceof b.constructor;\r\n}\r\nexport function isSameClass(a, b) {\r\n    return areNotNullOrUndefined(a, b) && a.constructor === b.constructor;\r\n}\r\nexport function inherits(a, b) {\r\n    return isClassOf(a, b) && !isSameClass(a, b);\r\n}\r\nexport function equals(a, b) {\r\n    let result = a === b;\r\n    if (a !== b && (a instanceof Object) && isSameClass(a, b)) {\r\n        if (isArray(a)) {\r\n            const len = a.length;\r\n            let i = 0;\r\n            result = len === b.length;\r\n            if (result) {\r\n                for (; i < len; i += 1) {\r\n                    result = equals(a[i], b[i]);\r\n                    if (result === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (a.constructor.prototype.equals) {\r\n            result = a.equals(b);\r\n        }\r\n        else {\r\n            const keys = Object.keys(a);\r\n            let key = null;\r\n            result = true;\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                result = equals(a[key], b[key]);\r\n                if (!result) {\r\n                    if (isFunction(a[key])) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function isDifferent(a, b) {\r\n    return !equals(a, b);\r\n}\r\nexport function shallowCopy(obj) {\r\n    const keys = Object.keys(obj);\r\n    const result = {};\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        const key = keys[i];\r\n        result[key] = obj[key];\r\n    }\r\n    return result;\r\n}\r\nexport function clone(obj) {\r\n    let result;\r\n    if (!(obj instanceof Object)) {\r\n        result = obj;\r\n    }\r\n    else if (obj.constructor.prototype.clone !== undefined) {\r\n        result = obj.clone();\r\n    }\r\n    else if (isArray(obj)) {\r\n        result = deepCopy(obj);\r\n    }\r\n    else if (obj instanceof Date) {\r\n        return new Date(obj.getTime());\r\n    }\r\n    else if (obj instanceof RegExp) {\r\n        return new RegExp(obj);\r\n    }\r\n    else {\r\n        result = new obj.constructor();\r\n        const keys = Object.keys(obj);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            result[key] = clone(obj[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function cloneInto(src, target) {\r\n    if (isArray(target)) {\r\n        const arrS = src;\r\n        const arrT = target;\r\n        const len = arrS.length;\r\n        arrT.length = len;\r\n        let i = -1;\r\n        while (++i < len) {\r\n            if (arrS[i] instanceof Object) {\r\n                cloneInto(arrS[i], arrT[i]);\r\n            }\r\n            else {\r\n                arrT[i] = arrS[i];\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        let i = -1;\r\n        const len = keys.length;\r\n        while (++i < len) {\r\n            key = keys[i];\r\n            const a = src[key];\r\n            if (a instanceof Object) {\r\n                let b = target[key];\r\n                if (b === undefined || b === null) {\r\n                    if (isArray(a)) {\r\n                        b = target[key] = [];\r\n                    }\r\n                    else {\r\n                        b = target[key] = {};\r\n                    }\r\n                }\r\n                if (isDifferent(a, b)) {\r\n                    cloneInto(a, b);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = a;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function mixin(target = {}, exclude, ...sources) {\r\n    const result = target, len = sources ? sources.length : 0;\r\n    let i = 0;\r\n    sources = flatten(sources);\r\n    for (; i < len; i++) {\r\n        let src = sources[i];\r\n        if (isFunction(src)) {\r\n            src = src.prototype;\r\n        }\r\n        if (src === undefined) {\r\n            continue;\r\n        }\r\n        const keys = Object.keys(src);\r\n        let key = null;\r\n        if (exclude) {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                if (exclude.hasOwnProperty(key)) {\r\n                    continue;\r\n                }\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n        else {\r\n            let i = -1;\r\n            const len = keys.length;\r\n            while (++i < len) {\r\n                key = keys[i];\r\n                target[key] = src[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setProperties(target, values, mapping) {\r\n    const keys = Object.keys(values);\r\n    let key;\r\n    let value;\r\n    let i = -1;\r\n    const len = keys.length;\r\n    while (++i < len) {\r\n        key = keys[i];\r\n        value = values[key];\r\n        if (mapping && key in mapping) {\r\n            key = mapping[key];\r\n        }\r\n        if (key in target) {\r\n            target[key] = values[keys[i]];\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Obj.js.map","import { isNumber, isUndefined } from \"util\";\r\nimport { clone } from \"./Obj\";\r\nimport { isArray } from \"./Test\";\r\nclass ArrayState {\r\n}\r\nexport function flatten(src) {\r\n    return flattenInner(src);\r\n}\r\nfunction flattenInner(src, result = []) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (isArray(src[i])) {\r\n            flattenInner(src[i], result);\r\n        }\r\n        else {\r\n            result.push(src[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function reverse(array) {\r\n    let left = null;\r\n    let right = null;\r\n    const length = array.length;\r\n    for (left = 0; left < length / 2; left += 1) {\r\n        right = length - 1 - left;\r\n        const temporary = array[left];\r\n        array[left] = array[right];\r\n        array[right] = temporary;\r\n    }\r\n    return array;\r\n}\r\nexport function concat(...arrs) {\r\n    const result = Array.prototype.concat.apply([], arrs);\r\n    return result;\r\n}\r\nexport function slice(src, from = 0, count = Infinity) {\r\n    let len = Math.min(src.length - from, count);\r\n    if (len < 0) {\r\n        len = 0;\r\n    }\r\n    let i = -1;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i + from];\r\n    }\r\n    return result;\r\n}\r\nexport function append(arr, values) {\r\n    let index = -1;\r\n    const offset = arr.length;\r\n    const length = values.length;\r\n    while (++index < length) {\r\n        arr[offset + index] = values[index];\r\n    }\r\n}\r\nexport function removeAt(arr, index) {\r\n    let result;\r\n    if (index !== -1 && index < arr.length) {\r\n        const len = arr.length;\r\n        let i = index;\r\n        result = arr[index];\r\n        while (++i < len) {\r\n            arr[i - 1] = arr[i];\r\n        }\r\n        arr.length -= 1;\r\n    }\r\n    return result;\r\n}\r\nexport function indexOfElement(src, el) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (src[i] === el) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function remove(arr, el) {\r\n    const start = indexOfElement(arr, el);\r\n    removeAt(arr, start);\r\n}\r\nexport function indexOf(src, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        if (fn(src[i])) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function removeOneByFn(arr, fn) {\r\n    const start = indexOf(arr, fn);\r\n    removeAt(arr, start);\r\n}\r\nexport function shallowCopy(src) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = src[i];\r\n    }\r\n    return result;\r\n}\r\nexport function shallowCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = src[i];\r\n    }\r\n}\r\nexport function shallowFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = src[i];\r\n    }\r\n}\r\nexport function deepCopy(src) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = (clone(src[i]));\r\n    }\r\n    return result;\r\n}\r\nexport function deepCopyInto(src, target) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function deepFill(src, target, at = 0) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    if (target.length < len + at) {\r\n        target.length = len + at;\r\n    }\r\n    while (++i < len) {\r\n        target[at + i] = (clone(src[i]));\r\n    }\r\n}\r\nexport function filter(src, fn) {\r\n    const result = [];\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            result.push(el);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function filterInto(src, target, fn) {\r\n    let i = -1;\r\n    let j = 0;\r\n    const len = src.length;\r\n    const space = target.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (fn(el, i) === true) {\r\n            if (j < space) {\r\n                target[j++] = el;\r\n            }\r\n            else {\r\n                ++j;\r\n                target.push(el);\r\n            }\r\n        }\r\n    }\r\n    target.length = j;\r\n}\r\nexport function map(src, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    const result = new Array(len);\r\n    while (++i < len) {\r\n        result[i] = fn(src[i], i);\r\n    }\r\n    return result;\r\n}\r\nexport function mapInto(src, target, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    target.length = len;\r\n    while (++i < len) {\r\n        target[i] = fn(src[i], i);\r\n    }\r\n}\r\nexport function reduce(src, fn, start) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    let acc = start;\r\n    while (++i < len) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reduceUntil(src, fn, test, start) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    let acc = start;\r\n    while (++i < len && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduce(src, fn, start) {\r\n    let i = src.length;\r\n    let acc = start;\r\n    while (--i >= 0) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function reverseReduceUntil(src, fn, test, start) {\r\n    let i = src.length;\r\n    let acc = start;\r\n    while (--i >= 0 && !test(acc, src[i])) {\r\n        acc = fn(acc, src[i]);\r\n    }\r\n    return acc;\r\n}\r\nexport function forEach(src, fn, startIndex = 0) {\r\n    let i = startIndex - 1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function forSome(src, filter, fn) {\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len) {\r\n        const el = src[i];\r\n        if (filter(el, i)) {\r\n            fn(el, i);\r\n        }\r\n    }\r\n}\r\nexport function until(src, fnOrTest, fn, startIndex) {\r\n    let isCombined = isUndefined(fn) || isNumber(fn);\r\n    startIndex = isCombined ? fn : startIndex;\r\n    let i = isUndefined(startIndex) || startIndex < 0 ? -1 : startIndex - 1;\r\n    const len = src.length;\r\n    while (++i < len && (isCombined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function reverseForEach(src, fn) {\r\n    let i = src.length;\r\n    while (--i >= 0) {\r\n        fn(src[i], i);\r\n    }\r\n}\r\nexport function reverseUntil(src, fnOrTest, fn) {\r\n    let i = src.length;\r\n    let combined = isUndefined(fn);\r\n    while (--i >= 0 && (combined ? !fnOrTest(src[i], i) : !(fnOrTest(src[i], i) || (fn(src[i], i), false)))) {\r\n    }\r\n}\r\nexport function some(src, fn) {\r\n    let result = false;\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len && !(result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function all(src, fn) {\r\n    let result = true;\r\n    let i = -1;\r\n    const len = src.length;\r\n    while (++i < len && (result = fn(src[i]))) {\r\n    }\r\n    return result;\r\n}\r\nexport function insertAt(src, pos, v) {\r\n    if (pos === 0) {\r\n        src.unshift(v);\r\n    }\r\n    else if (pos > 0) {\r\n        let i = src.length;\r\n        while (--i >= pos) {\r\n            src[i + 1] = src[i];\r\n        }\r\n        src[i + 1] = v;\r\n    }\r\n}\r\nexport function binarySearch(src, cmp, closest = false) {\r\n    let lo = 0, hi = src.length - 1, mid, element;\r\n    while (lo <= hi) {\r\n        mid = ((lo + hi) >> 1);\r\n        element = src[mid];\r\n        let val = cmp(element);\r\n        if (val < 0) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (val > 0) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return mid;\r\n        }\r\n    }\r\n    return closest ? lo : -1;\r\n}\r\nexport function create(length, populator) {\r\n    if (length < 0) {\r\n        length = 0;\r\n    }\r\n    let arr = new Array(length);\r\n    let i = -1;\r\n    while (++i < length) {\r\n        arr[i] = populator(i, arr);\r\n    }\r\n    return arr;\r\n}\r\n//# sourceMappingURL=Arr.js.map","import { Global } from \"./Global\";\r\nimport { hasConsole, hasWindow, isNotUndefined } from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nclass UtilState {\r\n}\r\nUtilState._int = 0;\r\nexport function init(win) {\r\n    if (win !== undefined) {\r\n        Global.window = win;\r\n    }\r\n}\r\nexport function getFunctionName(fn) {\r\n    let result;\r\n    if (fn.hasOwnProperty(\"name\") !== undefined) {\r\n        result = fn.name;\r\n    }\r\n    else {\r\n        const fnString = fn.toString();\r\n        result = fnString.substring(9, fnString.indexOf(\"(\"));\r\n    }\r\n    return result;\r\n}\r\nexport function getFunctionCode(fn) {\r\n    let result;\r\n    const fnString = fn.toString();\r\n    result = fnString.substring(fnString.indexOf(\"{\") + 1, fnString.lastIndexOf(\"}\"));\r\n    return result;\r\n}\r\nexport function newUUID() {\r\n    let d = new Date().getTime();\r\n    d += Timer.now();\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n}\r\nexport function newInt() {\r\n    return UtilState._int++;\r\n}\r\nexport function callDebugger() {\r\n    debugger;\r\n}\r\nexport function pipeOut(log, warn, error) {\r\n    if (hasConsole) {\r\n        proxyFn(console, \"log\", function (superfn, ...args) { superfn(...args); log(...args); });\r\n        proxyFn(console, \"warn\", function (superfn, ...args) { superfn(...args); warn(...args); });\r\n        proxyFn(console, \"error\", function (superfn, ...args) { superfn(...args); error(...args); });\r\n    }\r\n    else {\r\n        const console = {\r\n            log,\r\n            warn,\r\n            error\r\n        };\r\n        if (!(hasWindow())) {\r\n            Global.window = {\r\n                console\r\n            };\r\n        }\r\n        else {\r\n            Global.window.console = console;\r\n        }\r\n    }\r\n}\r\nexport function assert(assertion, message, isDebug = true) {\r\n    let result = true;\r\n    if (!assertion) {\r\n        if (hasConsole) {\r\n            result = false;\r\n            console.error(\"Assertion failed: \" + message);\r\n        }\r\n        if (isDebug) {\r\n            callDebugger();\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function proxyFn(objOrClass, fnName, proxyFn) {\r\n    objOrClass = isNotUndefined(objOrClass.prototype) ? objOrClass.prototype : objOrClass;\r\n    const fn = objOrClass[fnName];\r\n    const _superFn = function (...args) {\r\n        if (args.length !== 0) {\r\n            return fn.apply(this || objOrClass, args);\r\n        }\r\n        else {\r\n            return fn.call(this || objOrClass);\r\n        }\r\n    };\r\n    objOrClass[fnName] = proxyFn.bind(objOrClass, _superFn);\r\n}\r\nexport function loop(count, fn) {\r\n    let i = -1;\r\n    while (++i < count) {\r\n        fn(i);\r\n    }\r\n}\r\nexport function toArray(arr) {\r\n    return Array.prototype.slice.call(arr);\r\n}\r\n//# sourceMappingURL=Util.js.map","import { Global } from \"./Global\";\r\nexport var Sides;\r\n(function (Sides) {\r\n    Sides[Sides[\"Top\"] = 0] = \"Top\";\r\n    Sides[Sides[\"Bottom\"] = 1] = \"Bottom\";\r\n    Sides[Sides[\"Left\"] = 2] = \"Left\";\r\n    Sides[Sides[\"Right\"] = 3] = \"Right\";\r\n})(Sides || (Sides = {}));\r\nclass DomState {\r\n}\r\nDomState.Sides = Sides;\r\nDomState._window = Global.window;\r\nDomState._document = Global.window ? Global.window.document : undefined;\r\nDomState._el = Global.window ? Global.window.document.createElement(\"div\") : undefined;\r\nexport function init(win) {\r\n    Global.window = win;\r\n    DomState._window = Global.window;\r\n    DomState._document = DomState._window.document;\r\n    DomState._el = DomState._document.createElement(\"div\");\r\n}\r\nexport function toArray(a) {\r\n    return Array.prototype.slice.call(a);\r\n}\r\nexport function create(html, attr) {\r\n    let result, keys, i, k, styles, styleKeys;\r\n    DomState._el.innerHTML = html;\r\n    result = DomState._el.children[0];\r\n    setAttr(result, attr);\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function outerHTML(el) {\r\n    DomState._el.appendChild(el);\r\n    const result = DomState._el.innerHTML;\r\n    clear(DomState._el);\r\n    return result;\r\n}\r\nexport function setAttr(_el, attr) {\r\n    let el;\r\n    if (typeof (_el) === \"string\") {\r\n        el = get(_el);\r\n    }\r\n    else {\r\n        el = _el;\r\n    }\r\n    let keys, i, k, styles, styleKeys, style;\r\n    if (attr !== undefined && typeof (attr) === \"object\") {\r\n        keys = Object.keys(attr);\r\n        for (i = 0; i < keys.length; i++) {\r\n            if (keys[i] === \"style\") {\r\n                styles = attr[keys[i]];\r\n                styleKeys = Object.keys(styles);\r\n                for (k = 0; k < styleKeys.length; k++) {\r\n                    style = styles[styleKeys[k]];\r\n                    if (typeof (style) === \"string\") {\r\n                        el.style.setProperty(styleKeys[k], style);\r\n                    }\r\n                    else {\r\n                        el.style.setProperty(styleKeys[k], style[0], style[1]);\r\n                    }\r\n                }\r\n            }\r\n            else if (keys[i] === \"classes\" && attr[keys[i]] !== undefined && attr[keys[i]].join) {\r\n                el.setAttribute(\"className\", attr[keys[i]].join(\" \"));\r\n            }\r\n            else {\r\n                el.setAttribute(keys[i], attr[keys[i]]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function remove(element) {\r\n    return element.parentNode === undefined ? null : element.parentNode.removeChild(element);\r\n}\r\nexport function replace(src, target) {\r\n    let result = target;\r\n    if (src.parentNode) {\r\n        src.parentNode.replaceChild(target, src);\r\n    }\r\n    return result;\r\n}\r\nexport function clear(element) {\r\n    let i = element.children.length;\r\n    while (i--) {\r\n        element.removeChild(element.children[i]);\r\n    }\r\n}\r\nexport function get(id) {\r\n    let result = DomState._document.getElementById(id);\r\n    if (result === null) {\r\n        switch (id) {\r\n            default:\r\n                result = DomState._document.body;\r\n                break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function find(selector) {\r\n    return DomState._document.querySelector(selector);\r\n}\r\nexport function findAll(selector, root) {\r\n    return toArray((root || DomState._document).querySelectorAll(selector));\r\n}\r\nexport function children(root, selector) {\r\n    const children = toArray((root || DomState._document).children);\r\n    return selector === undefined ? children : children.filter(is.bind(this, selector));\r\n}\r\nexport function findParent(root, selector) {\r\n    let result = root.parentElement;\r\n    while (result) {\r\n        if (is(selector, result)) {\r\n            break;\r\n        }\r\n        result = result.parentElement;\r\n    }\r\n    return result;\r\n}\r\nexport function position(el, x, y) {\r\n    el.style.top = y + \"px\";\r\n    el.style.left = x + \"px\";\r\n}\r\nexport function is(selector, element) {\r\n    let result = false;\r\n    if (element.matches) {\r\n        result = element.matches(selector);\r\n    }\r\n    else if (element.msMatchesSelector) {\r\n        result = element.msMatchesSelector(selector);\r\n    }\r\n    else if (element.webkitMatchesSelector) {\r\n        result = element.webkitMatchesSelector(selector);\r\n    }\r\n    else {\r\n        if (element.parentElement === null) {\r\n            throw new Error(\"Element has no parent\");\r\n        }\r\n        if (element.id !== \"\") {\r\n            result = element.parentElement.querySelector(\"#\" + element.id) !== null;\r\n        }\r\n        else {\r\n            result = toArray(element.parentElement.querySelectorAll(selector)).indexOf(element) !== -1;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function setStylesExplicitly(element, ...styles) {\r\n    const comp = DomState._window.getComputedStyle(element);\r\n    for (const style of styles) {\r\n        element.style[style] = comp[style];\r\n    }\r\n}\r\n//# sourceMappingURL=Dom.js.map","export function Poolable(Base) {\r\n    return class extends Base {\r\n        release() {\r\n            this.__pool__.release(this);\r\n        }\r\n        initPool(pool) {\r\n            this.__pool__ = pool;\r\n        }\r\n        constructor(...args) {\r\n            super(...args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Poolable.js.map","import { setProperties } from \"../../Obj\";\r\nexport function Initable(base) {\r\n    return class extends base {\r\n        init(obj, mapping) {\r\n            setProperties(this, obj, mapping);\r\n            return this;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Initable.js.map","import { rotationRad } from \"../Calc\";\r\nexport class Vec2Const {\r\n}\r\nVec2Const.EPSILON = 1e-8;\r\nVec2Const.IDENTITY = { x: 1, y: 1 };\r\nVec2Const.X_DIM = { x: 1, y: 0 };\r\nVec2Const.Y_DIM = { x: 0, y: 1 };\r\nexport class Vec2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.angle = this.horizontalAngle;\r\n        this.direction = this.horizontalAngle;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get isZero() {\r\n        return this.x === 0 && this.y === 0;\r\n    }\r\n    set(src) {\r\n        this.x = src.x;\r\n        this.y = src.y;\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : new Vec2(this.x, this.y);\r\n        return result;\r\n    }\r\n    toInt() {\r\n        this.x |= 0;\r\n        this.y |= 0;\r\n        return this;\r\n    }\r\n    ceil() {\r\n        this.x = Math.ceil(this.x);\r\n        this.y = Math.ceil(this.y);\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.x += Vec2Const.EPSILON;\r\n        this.y += Vec2Const.EPSILON;\r\n        return this;\r\n    }\r\n    lengthSq() { return (this.x * this.x + this.y * this.y); }\r\n    length() { return Math.sqrt(this.lengthSq()); }\r\n    horizontalAngle() { return Math.atan2(this.y, this.x); }\r\n    rotate(angle) {\r\n        const rot = rotationRad(angle);\r\n        const nx = (this.x * rot[0]) - (this.y * rot[1]);\r\n        const ny = (this.x * rot[1]) + (this.y * rot[0]);\r\n        this.x = nx;\r\n        this.y = ny;\r\n        return this;\r\n    }\r\n    rotateAround(center, angle) {\r\n        return this.subtract(center).rotate(angle).add(center);\r\n    }\r\n    normalize() {\r\n        const len = this.length();\r\n        if (len === 0) {\r\n            this.x = 1;\r\n            this.y = 0;\r\n        }\r\n        else {\r\n            this.x = this.x / len;\r\n            this.y = this.y / len;\r\n        }\r\n        return this;\r\n    }\r\n    scale(vectorB) {\r\n        this.x = this.x * vectorB.x;\r\n        this.y = this.y * vectorB.y;\r\n        return this;\r\n    }\r\n    relate(vectorB) {\r\n        this.x = this.x / vectorB.x;\r\n        this.y = this.y / vectorB.y;\r\n        return this;\r\n    }\r\n    multiply(scalar) {\r\n        this.x = this.x * scalar;\r\n        this.y = this.y * scalar;\r\n        return this;\r\n    }\r\n    add(vectorB) {\r\n        this.x = this.x + vectorB.x;\r\n        this.y = this.y + vectorB.y;\r\n        return this;\r\n    }\r\n    subtract(vectorB) {\r\n        this.x = this.x - vectorB.x;\r\n        this.y = this.y - vectorB.y;\r\n        return this;\r\n    }\r\n    invert() {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n    equals(target) {\r\n        return this.x === target.x && this.y === target.y;\r\n    }\r\n    almostEquals(target) {\r\n        return Math.abs(this.x - target.x) < Vec2Const.EPSILON && Math.abs(this.y - target.y) < Vec2Const.EPSILON;\r\n    }\r\n    getNormal(isNormalized) {\r\n        const result = this.clone();\r\n        if (!isNormalized) {\r\n            result.set(this).normalize();\r\n        }\r\n        const temp = result.x;\r\n        result.x = result.y;\r\n        result.y = -temp;\r\n        return result;\r\n    }\r\n    dot(vectorB) { return (this.x * vectorB.x + this.y * vectorB.y); }\r\n    cross(vectorB) { return ((this.x * vectorB.y) - (this.y * vectorB.x)); }\r\n    projectOnto(vectorB) {\r\n        const coeff = ((this.x * vectorB.x) + (this.y * vectorB.y)) / ((vectorB.x * vectorB.x) + (vectorB.y * vectorB.y));\r\n        this.x = coeff * vectorB.x;\r\n        this.y = coeff * vectorB.y;\r\n        return this;\r\n    }\r\n    verticalAngle() { return Math.atan2(this.x, this.y); }\r\n    rotateBy(rotation) {\r\n        const angle = -this.horizontalAngle() + rotation;\r\n        return this.rotate(angle);\r\n    }\r\n    max(v) {\r\n        this.x = Math.max(this.x, v.x);\r\n        this.y = Math.max(this.y, v.y);\r\n        return this;\r\n    }\r\n    min(v) {\r\n        this.x = Math.min(this.x, v.x);\r\n        this.y = Math.min(this.y, v.y);\r\n        return this;\r\n    }\r\n    zero() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Vec2.js.map","import { Range2 } from \"./Range2\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Rect {\r\n    get isZero() {\r\n        return this.start.isZero && this.stop.isZero;\r\n    }\r\n    constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0, endInclusive = false) {\r\n        this.start = new Vec2(x1, y1);\r\n        this.stop = new Vec2(x2, y2);\r\n        this.endInclusive = endInclusive;\r\n    }\r\n    set(src) {\r\n        this.start.set(src.start);\r\n        this.stop.set(src.stop);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : new Rect(this.start.x, this.start.y, this.stop.x, this.stop.y);\r\n        return result;\r\n    }\r\n    toRange2(out) {\r\n        let result = out || new Range2();\r\n        let start = this.start;\r\n        let stop = this.stop;\r\n        result.pos.x = start.x;\r\n        result.pos.y = start.y;\r\n        result.size.x = stop.x + (this.endInclusive ? (stop.x < start.x ? -1 : 1) : 0) - start.x;\r\n        result.size.y = stop.y + (this.endInclusive ? (stop.y < start.y ? -1 : 1) : 0) - start.y;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        const ow = this.stop.x - this.start.x;\r\n        const oh = this.stop.y - this.start.y;\r\n        let w = ow;\r\n        let h = oh;\r\n        w *= factor.x;\r\n        h *= factor.y;\r\n        if (keepCenter) {\r\n            this.start.x -= (w - ow) / 2;\r\n            this.start.y -= (h - oh) / 2;\r\n        }\r\n        this.stop.x = this.start.x + w;\r\n        this.stop.y = this.start.y + h;\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.start.scale(system);\r\n        this.stop.scale(system);\r\n        return this;\r\n    }\r\n    equals(rect) {\r\n        return this.start.equals(rect.start) && this.stop.equals(rect.stop);\r\n    }\r\n    toInt() {\r\n        this.start.toInt();\r\n        this.stop.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.start.toDecimal();\r\n        this.stop.toDecimal();\r\n        return this;\r\n    }\r\n    area() {\r\n        const x = this.stop.x - this.start.x;\r\n        const y = this.stop.y - this.start.y;\r\n        return x * y;\r\n    }\r\n    move(vec) {\r\n        this.start.add(vec);\r\n        this.stop.add(vec);\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.start.x <= target.start.x &&\r\n            this.start.y <= target.start.y &&\r\n            this.stop.x >= target.stop.x &&\r\n            this.stop.y >= target.stop.y;\r\n    }\r\n    intersect(target) {\r\n        return this.containsPoint(target.start.x, target.start.y) ||\r\n            this.containsPoint(target.stop.x, target.stop.y) ||\r\n            this.containsPoint(target.start.x, target.stop.y) ||\r\n            this.containsPoint(target.stop.x, target.start.y);\r\n    }\r\n    containsPoint(x, y) {\r\n        return this.start.x <= x && this.stop.x >= x &&\r\n            this.start.y <= y && this.stop.y >= y;\r\n    }\r\n    zero() {\r\n        this.start.zero();\r\n        this.stop.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Rect.js.map","import { Rect } from \"./Rect\";\r\nimport { Vec2 } from \"./Vec2\";\r\nexport class Range2 {\r\n    get isZero() {\r\n        return this.pos.isZero && this.size.isZero;\r\n    }\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.pos = new Vec2(x, y);\r\n        this.size = new Vec2(w, h);\r\n    }\r\n    set(src) {\r\n        this.pos.set(src.pos);\r\n        this.size.set(src.size);\r\n        return this;\r\n    }\r\n    clone(out) {\r\n        const result = out ? out.set(this) : new Range2(this.pos.x, this.pos.y, this.size.x, this.size.y);\r\n        return result;\r\n    }\r\n    toRect(endInclusive = false, out) {\r\n        let result = out || new Rect();\r\n        result.start.x = this.pos.x,\r\n            result.start.y = this.pos.y,\r\n            result.stop.x = this.pos.x - (endInclusive ? (this.size.x < 0 ? -1 : 1) : 0) + this.size.x,\r\n            result.stop.y = this.pos.y - (endInclusive ? (this.size.y < 0 ? -1 : 1) : 0) + this.size.y,\r\n            result.endInclusive = endInclusive;\r\n        return result;\r\n    }\r\n    scale(factor, keepCenter = true) {\r\n        let org = null;\r\n        if (keepCenter) {\r\n            org = this.size.clone();\r\n        }\r\n        this.size.scale(factor);\r\n        if (keepCenter) {\r\n            this.pos.add(org.subtract(this.size).multiply(0.5));\r\n        }\r\n        return this;\r\n    }\r\n    translate(system) {\r\n        this.toRect(false).translate(system).toRange2(this);\r\n        return this;\r\n    }\r\n    toInt() {\r\n        this.pos.toInt();\r\n        this.size.toInt();\r\n        return this;\r\n    }\r\n    toDecimal() {\r\n        this.pos.toDecimal();\r\n        this.size.toDecimal();\r\n        return this;\r\n    }\r\n    contains(target) {\r\n        return this.pos.x <= target.pos.x &&\r\n            this.pos.y <= target.pos.y &&\r\n            this.pos.x + this.size.x >= target.pos.x + target.size.x &&\r\n            this.pos.y + this.size.y >= target.pos.y + target.size.y;\r\n    }\r\n    intersect(target) {\r\n        let s = this.toRect();\r\n        let t = target.clone().toRect();\r\n        return s.intersect(t);\r\n    }\r\n    containsPoint(vec) {\r\n        return vec.x >= this.pos.x && vec.x <= this.pos.x + this.size.x - 1\r\n            && vec.y >= this.pos.y && vec.y <= this.pos.y + this.size.y - 1;\r\n    }\r\n    first(fn) {\r\n        const p = new Vec2();\r\n        const x = this.pos.x;\r\n        const y = this.pos.y;\r\n        for (let i = 0; i < this.size.x; i++) {\r\n            for (let j = 0; j < this.size.y; j++) {\r\n                p.x = i + x, p.y = j + y;\r\n                if (fn(p)) {\r\n                    return p;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    forEach(fn, start = null) {\r\n        const pos = new Vec2();\r\n        const begin = this.pos.clone().toInt();\r\n        if (start === null || !this.containsPoint(start)) {\r\n            start = begin;\r\n        }\r\n        const end = this.pos.clone().add(this.size).toInt();\r\n        for (let y = begin.y; y < end.y; y += 1) {\r\n            for (let x = begin.x; x < end.x; x += 1) {\r\n                if (y < start.y || (y === start.y && x < start.x)) {\r\n                    continue;\r\n                }\r\n                pos.x = x;\r\n                pos.y = y;\r\n                const brk = fn(pos);\r\n                if (brk) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    equals(range) {\r\n        return this.pos.equals(range.pos) && this.size.equals(range.size);\r\n    }\r\n    zero() {\r\n        this.pos.zero();\r\n        this.size.zero();\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Range2.js.map","let nativeWindow = true;\r\nvar win;\r\nif (typeof (window) === \"undefined\") {\r\n    win = null;\r\n    nativeWindow = false;\r\n}\r\nelse {\r\n    win = window;\r\n}\r\nexport class _Global {\r\n    constructor() {\r\n        this._window = win;\r\n        this._nativeWindow = nativeWindow;\r\n    }\r\n    get window() {\r\n        return this._window;\r\n    }\r\n    set window(v) {\r\n        this._window = v;\r\n        if (this.hasNativeWindow) {\r\n            win = v;\r\n        }\r\n    }\r\n    get hasNativeWindow() {\r\n        return this._nativeWindow;\r\n    }\r\n}\r\nexport let Global = new _Global();\r\n//# sourceMappingURL=Global.js.map","import { clone, setProperties, wipe } from \"../Obj\";\r\nimport { isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Dictionary {\r\n    constructor() {\r\n        this._lookup = Object.create(null);\r\n        this._list = new List();\r\n        this._isDirty = false;\r\n    }\r\n    has(key) {\r\n        return this._lookup[key] !== undefined;\r\n    }\r\n    contains(key) {\r\n        return this.has(key);\r\n    }\r\n    get(key) {\r\n        return this._lookup[key];\r\n    }\r\n    set(key, value) {\r\n        this._isDirty = this._isDirty || this.has(key);\r\n        if (value !== undefined) {\r\n            this._lookup[key] = value;\r\n            if (!this._isDirty) {\r\n                this._list.push(value);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    delete(key) {\r\n        if (this.has(key)) {\r\n            delete this._lookup[key];\r\n            this._isDirty = true;\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        wipe(this._lookup);\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    get values() {\r\n        this.cleanList();\r\n        return this._list.values;\r\n    }\r\n    get keys() {\r\n        return Object.keys(this._lookup);\r\n    }\r\n    get list() {\r\n        this.cleanList();\r\n        return this._list;\r\n    }\r\n    get count() {\r\n        let result = 0;\r\n        if (this._isDirty) {\r\n            result = this.keys.length;\r\n        }\r\n        else {\r\n            result = this._list.count;\r\n        }\r\n        return result;\r\n    }\r\n    cleanList() {\r\n        if (this._isDirty) {\r\n            this.reCreateList();\r\n        }\r\n    }\r\n    reCreateList() {\r\n        let lookup = this._lookup;\r\n        let keys = Object.keys(this._lookup);\r\n        let i = -1;\r\n        let list = this._list;\r\n        list.clear();\r\n        while (++i < keys.length) {\r\n            list.add(lookup[keys[i]]);\r\n        }\r\n    }\r\n    clone() {\r\n        let result = new Dictionary();\r\n        result._isDirty = this._isDirty;\r\n        result._list = this._list.clone();\r\n        result._lookup = clone(this._lookup);\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this._lookup;\r\n    }\r\n    revive(obj, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        this.clear();\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                for (let key of Object.keys(obj)) {\r\n                    this.set(key, (new T()).revive(obj[key], ...passthroughT));\r\n                }\r\n            }\r\n            else {\r\n                for (let key of Object.keys(obj)) {\r\n                    let newT = new T();\r\n                    setProperties(newT, obj[key]);\r\n                    this.set(key, newT);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let key of Object.keys(obj)) {\r\n                this.set(key, obj[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=Dictionary.js.map","import * as Arr from \"../Arr\";\r\nimport { equals, setProperties } from \"../Obj\";\r\nimport { isArray, isNotUndefined } from \"../Test\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nexport class List {\r\n    constructor(arr) {\r\n        this._array = [];\r\n        this._index = null;\r\n        this._indexer = null;\r\n        if (arr === undefined) {\r\n            this._array = new Array();\r\n        }\r\n        else {\r\n            if (arr instanceof (List)) {\r\n                this._array = Arr.shallowCopy(arr._array);\r\n            }\r\n            else {\r\n                this._array = Arr.shallowCopy(arr);\r\n            }\r\n        }\r\n    }\r\n    get values() {\r\n        return this._array;\r\n    }\r\n    get(pos) {\r\n        return this._array[pos];\r\n    }\r\n    set(pos, v) {\r\n        if (pos >= 0 && pos < this.length) {\r\n            this._array[pos | 0] = v;\r\n            if (this._indexer !== null) {\r\n                this._index.set(this._indexer(v), v);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`index out of bounds on <List>.set(${pos}, ${v.toString()})`);\r\n        }\r\n        return this;\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    get length() {\r\n        return this._array.length;\r\n    }\r\n    get indexer() {\r\n        return this._indexer;\r\n    }\r\n    set indexer(fn) {\r\n        this._indexer = fn;\r\n        this._reindex();\r\n    }\r\n    _reindex() {\r\n        if (this._indexer === null) {\r\n            this._index = null;\r\n        }\r\n        else {\r\n            if (this._index === null) {\r\n                this._index = new Dictionary();\r\n            }\r\n            else {\r\n                this._index.clear();\r\n            }\r\n            this.forEach((el) => this._index.set(this._indexer(el), el));\r\n        }\r\n    }\r\n    clear() {\r\n        this._array.length = 0;\r\n        if (this._index !== null) {\r\n            this._index.clear();\r\n        }\r\n        return this;\r\n    }\r\n    add(v) {\r\n        this._array.push(v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    insertAt(pos, v) {\r\n        Arr.insertAt(this._array, pos, v);\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this;\r\n    }\r\n    push(v) {\r\n        if (this._indexer !== null) {\r\n            this._index.set(this._indexer(v), v);\r\n        }\r\n        return this._array.push(v);\r\n    }\r\n    pop() {\r\n        let result = this._array.pop();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    shift() {\r\n        let result = this._array.shift();\r\n        if (result !== undefined && this._indexer !== null) {\r\n            this._index.delete(this._indexer(result));\r\n        }\r\n        return result;\r\n    }\r\n    concat(v) {\r\n        let arr;\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        arr = Arr.concat(this._array, arr2);\r\n        return new List(arr);\r\n    }\r\n    index(arr) {\r\n        if (this._indexer !== null) {\r\n            Arr.forEach(arr, (el) => {\r\n                this._index.set(this._indexer(el), el);\r\n            });\r\n        }\r\n    }\r\n    unindexEl(el) {\r\n        if (this._indexer !== null) {\r\n            this._index.delete(this._indexer(el));\r\n        }\r\n    }\r\n    append(v) {\r\n        let arr2 = v instanceof List ? v.values : v;\r\n        Arr.append(this._array, arr2);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.deepCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    shallowCopy(src) {\r\n        let arr2 = src instanceof List ? src.values : src;\r\n        Arr.shallowCopyInto(arr2, this._array);\r\n        this.index(arr2);\r\n        return this;\r\n    }\r\n    clone() {\r\n        const arr = Arr.deepCopy(this._array);\r\n        let result = new List(arr);\r\n        if (this._indexer !== null) {\r\n            result._indexer = this._indexer;\r\n            result._index = this._index.clone();\r\n        }\r\n        return result;\r\n    }\r\n    remove(v) {\r\n        Arr.remove(this._array, v);\r\n        this.unindexEl(v);\r\n        return this;\r\n    }\r\n    removeFirst(fn) {\r\n        let result = this.removeAt(this.indexOf(fn));\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    removeAt(n) {\r\n        let result = Arr.removeAt(this._array, n);\r\n        this.unindexEl(result);\r\n        return result;\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        Arr.forEach(this._array, fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        Arr.forSome(this._array, filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        Arr.until(this._array, fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        Arr.reverseForEach(this._array, fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        Arr.reverseUntil(this._array, fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return Arr.some(this._array, fn);\r\n    }\r\n    all(fn) {\r\n        return Arr.all(this._array, fn);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (v instanceof Function) {\r\n            result = Arr.indexOf(this._array, v);\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        let result = false;\r\n        if (this._indexer !== null) {\r\n            result = this._index.contains(this._indexer(v));\r\n        }\r\n        else {\r\n            result = Arr.indexOfElement(this._array, v) !== -1;\r\n        }\r\n        return result;\r\n    }\r\n    reverse() {\r\n        Arr.reverse(this._array);\r\n        return this;\r\n    }\r\n    first(fn) {\r\n        let index = -1;\r\n        let result;\r\n        if (fn === undefined) {\r\n            index = 0;\r\n        }\r\n        else {\r\n            index = Arr.indexOf(this._array, fn);\r\n        }\r\n        return index === -1 ? undefined : this.get(index);\r\n    }\r\n    find(fn) {\r\n        return this.first(fn);\r\n    }\r\n    last() {\r\n        return this.length === 0 ? undefined : this.get(this.length - 1);\r\n    }\r\n    filter(fn) {\r\n        return new List(Arr.filter(this._array, fn));\r\n    }\r\n    select(fn) {\r\n        return new List(Arr.filter(this._array, fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.filterInto(arr, this._array, fn);\r\n        this.index(arr);\r\n        return this;\r\n    }\r\n    orderBy(fn) {\r\n        this._array.sort(fn);\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return new List(Arr.map(this._array, fn));\r\n    }\r\n    mapInto(src, fn) {\r\n        let arr = src instanceof List ? src.values : src;\r\n        Arr.mapInto(arr, this._array, fn);\r\n        this._reindex();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return Arr.reduce(this._array, fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return Arr.reduceUntil(this._array, fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return Arr.reverseReduce(this._array, fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return Arr.reverseReduceUntil(this._array, fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._array, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        let a = this;\r\n        let count = 0;\r\n        if (a.length === b.length) {\r\n            if (a.indexer !== null) {\r\n                b.until((el) => !a.contains(el), (el, i) => ++count);\r\n            }\r\n            else {\r\n                a.until((el) => !b.contains(el), (el, i) => ++count);\r\n            }\r\n        }\r\n        return count === a.length;\r\n    }\r\n    intersect(b) {\r\n        let result = new List();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            short.forEach((el) => {\r\n                if (long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            long.forEach((el) => {\r\n                if (short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result = new List();\r\n        let long;\r\n        let short;\r\n        result.indexer = this.indexer;\r\n        if (this.length < b.length) {\r\n            short = this, long = b;\r\n        }\r\n        else {\r\n            long = this, short = b;\r\n        }\r\n        if (long.indexer !== null) {\r\n            result = long.clone();\r\n            short.forEach((el) => {\r\n                if (!long.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            result = short.clone();\r\n            long.forEach((el) => {\r\n                if (!short.contains(el)) {\r\n                    result.push(el);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n    zip(list, fn = (t, u) => [t, u]) {\r\n        let result = new List();\r\n        let length = list.length;\r\n        this.until(function (el, i) {\r\n            return i >= length;\r\n        }, function (el, i) {\r\n            result.push(fn(el, list.get(i)));\r\n        });\r\n        return result;\r\n    }\r\n    unzip(fn = (el) => [el[0], el[1]]) {\r\n        let result = [new List(), new List()];\r\n        this.forEach(function (el) {\r\n            let tuple = fn(el);\r\n            result[0].push(tuple[0]);\r\n            result[1].push(tuple[1]);\r\n        });\r\n        return result;\r\n    }\r\n    flatten(maxDepth = Infinity) {\r\n        return new List(maxDepth < 1 ? this.values : this._flattenInner(this.values, maxDepth));\r\n    }\r\n    _flattenInner(src, maxDepth, depth = -1, result = []) {\r\n        let i = -1;\r\n        const len = src.length;\r\n        if (++depth > maxDepth) {\r\n            result.push(src);\r\n        }\r\n        else {\r\n            while (++i < len) {\r\n                if (isArray(src[i])) {\r\n                    this._flattenInner(src[i], maxDepth, depth, result);\r\n                }\r\n                else if (src[i] instanceof List) {\r\n                    this._flattenInner(src[i].values, maxDepth, depth, result);\r\n                }\r\n                else {\r\n                    result.push(src[i]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=List.js.map","import { binarySearch } from \"../Arr\";\r\nimport { equals, setProperties } from \"../Obj\";\r\nimport { isNotUndefined } from \"../Test\";\r\nimport { List } from \"./List\";\r\nexport class Comparer {\r\n}\r\nComparer.StringAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.StringDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nComparer.NumberAsc = function (a, b) { return a < b ? -1 : a === b ? 0 : 1; };\r\nComparer.NumberDesc = function (a, b) { return a < b ? 1 : a === b ? 0 : -1; };\r\nexport class SortedList {\r\n    constructor(comparer, arr) {\r\n        this._list = new List();\r\n        this._cmp = comparer;\r\n        if (arr === undefined) {\r\n            this._list = new List();\r\n        }\r\n        else {\r\n            if (arr instanceof (List) || arr instanceof (SortedList)) {\r\n                this.copy(arr.values);\r\n            }\r\n            else {\r\n                this.copy(arr);\r\n            }\r\n        }\r\n    }\r\n    get values() {\r\n        return this._list.values;\r\n    }\r\n    get(pos) {\r\n        return this._list.get(pos);\r\n    }\r\n    get count() {\r\n        return this._list.length;\r\n    }\r\n    get length() {\r\n        return this._list.length;\r\n    }\r\n    get comparer() {\r\n        return this._cmp;\r\n    }\r\n    set comparer(v) {\r\n        this._cmp = v;\r\n        this.sort();\r\n    }\r\n    sort() {\r\n        this._list.orderBy(this._cmp);\r\n    }\r\n    clear() {\r\n        this._list.clear();\r\n        return this;\r\n    }\r\n    add(v) {\r\n        let index = this.getInsertIndex(v);\r\n        this._list.insertAt(index, v);\r\n        return this;\r\n    }\r\n    pop() {\r\n        return this._list.pop();\r\n    }\r\n    shift() {\r\n        return this._list.shift();\r\n    }\r\n    bulkAdd(v) {\r\n        if (v instanceof List || v instanceof SortedList) {\r\n            this._list.append(v.values);\r\n        }\r\n        else {\r\n            this._list.append(v);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    copy(src) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.copy(src.values);\r\n        }\r\n        else {\r\n            this._list.copy(src);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    clone() {\r\n        return new SortedList(this._cmp, this._list.clone());\r\n    }\r\n    remove(v) {\r\n        let index = this.indexOf(v);\r\n        if (index !== -1) {\r\n            this._list.removeAt(index);\r\n        }\r\n        return this;\r\n    }\r\n    removeAt(n) {\r\n        return this._list.removeAt(n);\r\n    }\r\n    removeFirst(fn) {\r\n        return this._list.removeFirst(fn);\r\n    }\r\n    forEach(fn, startIndex = 0) {\r\n        this._list.forEach(fn, startIndex);\r\n        return this;\r\n    }\r\n    forSome(filter, fn) {\r\n        this._list.forSome(filter, fn);\r\n        return this;\r\n    }\r\n    until(fnOrTest, fn, startIndex) {\r\n        this._list.until(fnOrTest, fn, startIndex);\r\n        return this;\r\n    }\r\n    reverseForEach(fn) {\r\n        this._list.reverseForEach(fn);\r\n        return this;\r\n    }\r\n    reverseUntil(fnOrTest, fn) {\r\n        this._list.reverseUntil(fnOrTest, fn);\r\n        return this;\r\n    }\r\n    some(fn) {\r\n        return this._list.some(fn);\r\n    }\r\n    all(fn) {\r\n        return this._list.all(fn);\r\n    }\r\n    getInsertIndex(v) {\r\n        return binarySearch(this._list.values, (el) => this._cmp(el, v), true);\r\n    }\r\n    indexOf(v) {\r\n        let result = -1;\r\n        if (v instanceof Function) {\r\n            result = this._list.indexOf(v);\r\n        }\r\n        else {\r\n            result = binarySearch(this._list.values, (el) => this._cmp(el, v), false);\r\n        }\r\n        return result;\r\n    }\r\n    contains(v) {\r\n        return this.indexOf(v) !== -1;\r\n    }\r\n    first(fn) {\r\n        return this._list.first(fn);\r\n    }\r\n    find(fn) {\r\n        return this._list.find(fn);\r\n    }\r\n    last() {\r\n        return this._list.last();\r\n    }\r\n    filter(fn) {\r\n        return new SortedList(this._cmp, this._list.filter(fn));\r\n    }\r\n    select(fn) {\r\n        return new SortedList(this._cmp, this._list.filter(fn));\r\n    }\r\n    selectInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.selectInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.selectInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    map(fn) {\r\n        return this._list.map(fn);\r\n    }\r\n    mapInto(src, fn) {\r\n        if (src instanceof List || src instanceof SortedList) {\r\n            this._list.mapInto(src.values, fn);\r\n        }\r\n        else {\r\n            this._list.mapInto(src, fn);\r\n        }\r\n        this.sort();\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        return this._list.reduce(fn, start);\r\n    }\r\n    reduceUntil(fn, test, start) {\r\n        return this._list.reduceUntil(fn, test, start);\r\n    }\r\n    reverseReduce(fn, start) {\r\n        return this._list.reverseReduce(fn, start);\r\n    }\r\n    reverseReduceUntil(fn, test, start) {\r\n        return this._list.reverseReduceUntil(fn, test, start);\r\n    }\r\n    equals(b) {\r\n        const result = equals(this._list.values, b.values);\r\n        return result;\r\n    }\r\n    same(b) {\r\n        return this.equals(b);\r\n    }\r\n    intersect(b) {\r\n        let result = new SortedList(this.comparer);\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 && b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (longPos < lastPos && ++i < shortLen) {\r\n                    let el = short.get(i);\r\n                    let aVsB;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if (longPos < lastPos && aVsB === 0) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                short.forEach((el) => {\r\n                    if (long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = result.bulkAdd(short.toList().intersect(long));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    union(b) {\r\n        let result;\r\n        let long;\r\n        let short;\r\n        if (this.length > 0 || b.length > 0) {\r\n            if (this.length < b.length) {\r\n                short = this, long = b;\r\n            }\r\n            else {\r\n                long = this, short = b;\r\n            }\r\n            if (b instanceof SortedList && this.comparer === b.comparer) {\r\n                result = new SortedList(this.comparer, long.values);\r\n                let longPos = long.getInsertIndex(short.get(0)) - 1;\r\n                let lastPos = long.getInsertIndex(short.last()) - 1;\r\n                let i = -1;\r\n                let shortLen = short.length;\r\n                while (++i < shortLen && longPos < lastPos) {\r\n                    let el = short.get(i);\r\n                    let aVsB = -1;\r\n                    while (++longPos < lastPos && (aVsB = this.comparer(long.get(longPos), el)) < 0) {\r\n                        void (0);\r\n                    }\r\n                    if ((aVsB > 0 && longPos < lastPos) || longPos === lastPos) {\r\n                        result.add(el);\r\n                    }\r\n                }\r\n                if (i < shortLen) {\r\n                    --i;\r\n                    while (++i < shortLen) {\r\n                        result.add(short.get(i));\r\n                    }\r\n                }\r\n            }\r\n            else if (long instanceof SortedList || (long instanceof List && long.indexer !== null)) {\r\n                result = new SortedList(this.comparer, long.values);\r\n                short.forEach((el) => {\r\n                    if (!long.contains(el)) {\r\n                        result.add(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                result = new SortedList(this.comparer, short.toList().union(long));\r\n            }\r\n        }\r\n        else {\r\n            result = new SortedList(this.comparer);\r\n        }\r\n        return result;\r\n    }\r\n    toList() {\r\n        return new List(this.values);\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n    revive(array, ...types) {\r\n        let [T, ...passthroughT] = types;\r\n        if (isNotUndefined(T)) {\r\n            if (isNotUndefined(T.prototype.revive)) {\r\n                this.mapInto(array, (el) => {\r\n                    return (new T()).revive(el, ...passthroughT);\r\n                });\r\n            }\r\n            else {\r\n                this.mapInto(array, (el) => {\r\n                    let newT = new T();\r\n                    setProperties(newT, el);\r\n                    return newT;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.copy(array);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=SortedList.js.map","import { slice } from \"../Arr\";\r\nimport { List } from \"./List\";\r\nexport class Stack {\r\n    constructor(size) {\r\n        this.DEFAULT_SIZE = 100;\r\n        this._pos = 0;\r\n        this._limit = 0;\r\n        if (!size) {\r\n            size = this.DEFAULT_SIZE;\r\n        }\r\n        this.DEFAULT_SIZE = size;\r\n        this._array = new Array(size);\r\n        this.push = this.fastPush;\r\n    }\r\n    get values() {\r\n        return slice(this._array, 0, this._pos);\r\n    }\r\n    get depth() {\r\n        return this._pos;\r\n    }\r\n    get size() {\r\n        return this._pos;\r\n    }\r\n    get isEmpty() {\r\n        return this.size === 0;\r\n    }\r\n    get limit() {\r\n        return this._limit;\r\n    }\r\n    set limit(value) {\r\n        if (value < 0) {\r\n            value = 0;\r\n        }\r\n        this._limit = value;\r\n        if (value === 0) {\r\n            this.push = this.fastPush;\r\n        }\r\n        else {\r\n            this.push = this.limitedPush;\r\n            this.limitObjects();\r\n        }\r\n    }\r\n    push(obj) {\r\n    }\r\n    fastPush(obj) {\r\n        this._array[this._pos++] = obj;\r\n    }\r\n    limitedPush(obj) {\r\n        this._array[this._pos] = obj;\r\n        ++this._pos;\r\n        this.limitObjects();\r\n    }\r\n    pop() {\r\n        let result = undefined;\r\n        if (this._pos !== 0) {\r\n            result = this._array[--this._pos];\r\n        }\r\n        return result;\r\n    }\r\n    peek() {\r\n        return this._array[this._pos - 1];\r\n    }\r\n    peekAt(index) {\r\n        return index < 0 || index >= this._pos ? undefined : this._array[this._pos - index - 1];\r\n    }\r\n    toList() {\r\n        const result = new List();\r\n        return new List(this.values);\r\n    }\r\n    clear() {\r\n        this._pos = 0;\r\n        this._array.length = this.DEFAULT_SIZE;\r\n        return this;\r\n    }\r\n    limitObjects() {\r\n        if (this._limit > 0) {\r\n            while (this._pos > this._limit) {\r\n                this._array.shift();\r\n                --this._pos;\r\n            }\r\n        }\r\n    }\r\n    toJSON() {\r\n        return this.values;\r\n    }\r\n}\r\n//# sourceMappingURL=Stack.js.map","class TimerState {\r\n}\r\nTimerState._hasPerformance = typeof (performance) !== \"undefined\";\r\nexport class Timer {\r\n    static get time() {\r\n        return TimerState._time;\r\n    }\r\n    constructor() {\r\n        Timer.start();\r\n    }\r\n    static now() {\r\n        if (TimerState._hasPerformance) {\r\n            return performance.now();\r\n        }\r\n        else {\r\n            const hrTime = process.hrtime();\r\n            return hrTime[0] * 1000 + (hrTime[1] / 1e6);\r\n        }\r\n    }\r\n    static start() {\r\n        const now = Timer.now();\r\n        TimerState._start = TimerState._last = now;\r\n        return TimerState._time = 0;\r\n    }\r\n    static stop() {\r\n        const start = TimerState._start;\r\n        const now = Timer.now();\r\n        TimerState._last = now;\r\n        return TimerState._time = now - start;\r\n    }\r\n}\r\n//# sourceMappingURL=Timer.js.map","import { map } from \"../Arr\";\r\nimport { clone, isSameClass, setProperties } from \"../Obj\";\r\nimport { isArray } from \"../Test\";\r\nimport { newUUID } from \"../Util\";\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport { List } from \"./List\";\r\nimport { Stack } from \"./Stack\";\r\nexport class Tree {\r\n    constructor() {\r\n        this.id = \"\";\r\n        this.parent = null;\r\n        this.children = null;\r\n        this.data = null;\r\n        this.id = newUUID();\r\n    }\r\n    static fromObject(obj) {\r\n        const parent = (this instanceof Tree) ? this : null;\r\n        const root = new Tree().init({ id: obj.id || newUUID(), data: obj.data, parent });\r\n        if (obj.children !== undefined && isArray(obj.children)) {\r\n            root.children = new List(map(obj.children, Tree.fromObject.bind(root)));\r\n        }\r\n        return root;\r\n    }\r\n    static fromNodeList(nodes, mapcfg) {\r\n        let result = new Tree();\r\n        let mapResolver = (key) => {\r\n            return !mapcfg || typeof (mapcfg[key]) === \"undefined\" ? (el) => el[key] :\r\n                typeof (mapcfg[key]) === \"string\" ? (el) => el[mapcfg[key]] :\r\n                    mapcfg[key];\r\n        };\r\n        let map = {\r\n            id: mapResolver(\"id\"),\r\n            parent: mapResolver(\"parent\"),\r\n            data: mapResolver(\"data\")\r\n        };\r\n        let list = new List(nodes);\r\n        let lookup = new Dictionary();\r\n        list.forEach((el, i) => {\r\n            let node = new Tree().init({ id: map.id(el), data: map.data(el) });\r\n            lookup.set(node.id, node);\r\n        });\r\n        list.forEach((el, i) => {\r\n            let parent = map.parent(el);\r\n            if (lookup.contains(parent)) {\r\n                lookup.get(parent).add(lookup.get(map.id(el)));\r\n            }\r\n        });\r\n        result = lookup.get(map.id(list.get(0)));\r\n        while (result.parent) {\r\n            result = result.parent;\r\n        }\r\n        return result;\r\n    }\r\n    init(obj) {\r\n        setProperties(this, obj);\r\n        return this;\r\n    }\r\n    insertAt(pos, data) {\r\n        if (this.children === null || this.children.count <= pos) {\r\n            this.add(data);\r\n        }\r\n        else {\r\n            this.children.insertAt(pos, new Tree().init({ data, parent: this }));\r\n        }\r\n    }\r\n    add(data) {\r\n        if (this.children === null) {\r\n            this.children = new List();\r\n        }\r\n        if (isSameClass(data, this)) {\r\n            data.parent = this;\r\n            this.children.add(data);\r\n        }\r\n        else {\r\n            this.children.add((new Tree()).init({ data: data, parent: this }));\r\n        }\r\n    }\r\n    remove() {\r\n        if (this.parent !== null) {\r\n            this.parent.children.remove(this);\r\n        }\r\n    }\r\n    prune() {\r\n        if (this.children !== null) {\r\n            this.children\r\n                .forEach(function (el, i) {\r\n                el.parent = null;\r\n            })\r\n                .clear();\r\n        }\r\n        this.children = null;\r\n        return this;\r\n    }\r\n    reduce(fn, start) {\r\n        const stack = new Stack();\r\n        let acc = start;\r\n        if (!fn) {\r\n            fn = (acc, cur) => (acc.push({ id: cur.id, parent: cur.parent ? cur.parent.id : null, data: cur.data }), acc);\r\n        }\r\n        if (start === undefined) {\r\n            acc = [];\r\n        }\r\n        let cur;\r\n        let i;\r\n        stack.push(this);\r\n        while (cur = stack.pop()) {\r\n            acc = fn(acc, cur);\r\n            i = (cur.children && cur.children.count) || 0;\r\n            while (i--) {\r\n                stack.push(cur.children.get(i));\r\n            }\r\n        }\r\n        return acc;\r\n    }\r\n    clone() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children === null ? null : this.children.clone();\r\n        result.data = this.data === null || this.data === undefined ? this.data : clone(this.data);\r\n        return result;\r\n    }\r\n    duplicateNode() {\r\n        const result = new this.constructor();\r\n        result.id = this.id;\r\n        result.parent = this.parent;\r\n        result.children = this.children;\r\n        result.data = this.data;\r\n        return result;\r\n    }\r\n    filter(condition) {\r\n        const root = this.duplicateNode();\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            root.children =\r\n                root.children\r\n                    .select(condition)\r\n                    .map(function (el, i) {\r\n                    return el.filter(condition);\r\n                });\r\n        }\r\n        return root;\r\n    }\r\n    select(condition, acc = new List()) {\r\n        const result = acc;\r\n        const children = this.children;\r\n        if (condition === undefined || condition(this)) {\r\n            result.add(this);\r\n        }\r\n        if (children) {\r\n            children.reduce(function (acc, cur) {\r\n                return cur.select(condition, acc);\r\n            }, result);\r\n        }\r\n        return result;\r\n    }\r\n    find(condition) {\r\n        let result = null;\r\n        const children = this.children;\r\n        if (children !== null) {\r\n            let i = -1;\r\n            const len = this.children.count;\r\n            const val = this.children.values;\r\n            while (++i < len) {\r\n                if (condition(val[i].data)) {\r\n                    result = val[i];\r\n                    break;\r\n                }\r\n                else {\r\n                    result = val[i].children !== null ? val[i].find(condition) : null;\r\n                    if (result !== null) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    contains(condition) {\r\n        return this.find(condition) !== null;\r\n    }\r\n    depth() {\r\n        let result = 0;\r\n        let node = this;\r\n        while (node.parent) {\r\n            node = node.parent;\r\n            ++result;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        let result = new List();\r\n        result.push({ id: this.id, data: this.data, parent: this.parent === null ? null : this.parent.id, children: this.children === null ? null : this.children.map((el) => el.id) });\r\n        if (this.children !== null) {\r\n            this.children.forEach((node) => result.append(node.toJSON()));\r\n        }\r\n        return result.toJSON();\r\n    }\r\n}\r\n//# sourceMappingURL=Tree.js.map","import { Global } from \"./Global\";\r\nexport class Uri {\r\n    constructor() {\r\n        this._a = null;\r\n        this.hash = \"\";\r\n        this.pathName = \"\";\r\n        this.port = \"\";\r\n        this.hostName = \"\";\r\n        this.protocol = \"\";\r\n        this.origin = \"\";\r\n        this.full = \"\";\r\n        this.args = {};\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (Global.window !== null) {\r\n            this._a = Global.window.document.createElement(\"a\");\r\n            this._a.setAttribute(\"href\", Global.window.location.href);\r\n            const args = this.args;\r\n            this._a.search.substring(1).split(\"&\").forEach((arg) => {\r\n                const p = arg.split(\"=\");\r\n                args[p[0]] = p[1];\r\n            });\r\n            this.hash = this._a.hash;\r\n            this.pathName = this._a.pathname;\r\n            this.port = this._a.port;\r\n            this.hostName = this._a.hostname;\r\n            this.protocol = this._a.protocol;\r\n            this.origin = this._a.origin;\r\n            this.full = this._a.href;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Uri.js.map","export let async = function async(target, propertyKey, descriptor) {\r\n    const orgFn = descriptor.value;\r\n    descriptor.value = function (...args) {\r\n        let result = new Promise((resolve, reject) => {\r\n            let value;\r\n            try {\r\n                value = orgFn.apply(this, args);\r\n                resolve(value);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    return descriptor;\r\n};\r\nasync.before = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                decoration.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    callback();\r\n                })\r\n                    .catch((reason) => {\r\n                    callback();\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.after = function (decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = (value, reason) => {\r\n                    decoration.apply(this, [value, reason, orgFn.name].concat(args))\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                orgFn.apply(this, args)\r\n                    .then((value) => {\r\n                    callback(value, undefined);\r\n                })\r\n                    .catch((reason) => {\r\n                    callback(undefined, reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\nasync.provided = function (async_predicate) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result = new Promise((resolve, reject) => {\r\n                const callback = () => {\r\n                    orgFn.apply(this, args)\r\n                        .then((value) => {\r\n                        resolve(value);\r\n                    })\r\n                        .catch((reason) => {\r\n                        reject(reason);\r\n                    });\r\n                };\r\n                async_predicate.apply(this, [orgFn.name].concat(args))\r\n                    .then((value) => {\r\n                    if (value) {\r\n                        callback();\r\n                    }\r\n                    else {\r\n                        reject(false);\r\n                    }\r\n                })\r\n                    .catch((reason) => {\r\n                    reject(reason);\r\n                });\r\n            });\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n};\r\n//# sourceMappingURL=AsyncCombinators.js.map","export class Pool {\r\n    constructor(cls, growthStep = 10) {\r\n        this._pool = [];\r\n        this._available = 0;\r\n        this._size = 0;\r\n        this._cls = cls;\r\n        this._growthStep = growthStep;\r\n        this.create();\r\n    }\r\n    get available() {\r\n        return this._available;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    create() {\r\n        let i = 0;\r\n        for (; i < this._growthStep; i++) {\r\n            this._pool.push(new this._cls());\r\n        }\r\n        this._size += this._growthStep;\r\n        this._available += this._growthStep;\r\n    }\r\n    get() {\r\n        let result;\r\n        if (this._pool.length === 0) {\r\n            this.create();\r\n        }\r\n        result = this._pool.pop();\r\n        --this._available;\r\n        result.initPool(this);\r\n        return result;\r\n    }\r\n    release(obj) {\r\n        this._pool.push(obj);\r\n        ++this._available;\r\n    }\r\n}\r\n//# sourceMappingURL=Pool.js.map","export var MocDataType;\r\n(function (MocDataType) {\r\n    MocDataType[MocDataType[\"LinearInt\"] = 0] = \"LinearInt\";\r\n    MocDataType[MocDataType[\"RandomInt\"] = 1] = \"RandomInt\";\r\n    MocDataType[MocDataType[\"LinearFloat\"] = 2] = \"LinearFloat\";\r\n    MocDataType[MocDataType[\"RandomFloat\"] = 3] = \"RandomFloat\";\r\n})(MocDataType || (MocDataType = {}));\r\nexport const VALID_CHARS = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nexport function randomString(length = 25) {\r\n    let result = \"\";\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += VALID_CHARS.charAt(Math.floor(Math.random() * VALID_CHARS.length));\r\n    }\r\n    return result;\r\n}\r\nexport function randomInt() {\r\n    return this.randomNumber() | 0;\r\n}\r\nexport function randomNumber() {\r\n    return Math.random() * 2147483647;\r\n}\r\nexport function numericArray(length, type = MocDataType.LinearInt) {\r\n    const result = new Array(length);\r\n    switch (type) {\r\n        case MocDataType.RandomInt:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomInt();\r\n            }\r\n            break;\r\n        case MocDataType.LinearFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i + 0.5;\r\n            }\r\n            break;\r\n        case MocDataType.RandomFloat:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = this.randomNumber();\r\n            }\r\n            break;\r\n        default:\r\n            for (let i = 0; i < length; i += 1) {\r\n                result[i] = i;\r\n            }\r\n            break;\r\n    }\r\n    return result;\r\n}\r\nexport function stringArray(arrayLength, stringLength) {\r\n    const result = new Array(arrayLength);\r\n    let i = -1;\r\n    while (++i < arrayLength) {\r\n        result[i] = this.randomString(stringLength);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=MocData.js.map","export class KeyValuePair {\r\n}\r\n//# sourceMappingURL=KeyValuePair.js.map","export function before(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            decoration.apply(this, [orgFn.name].concat(args));\r\n            const result = orgFn.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function after(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            const result = orgFn.apply(this, [orgFn.name].concat(args));\r\n            decoration.apply(this, args);\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function around(decoration) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            let callback = () => result = orgFn.apply(this, args);\r\n            decoration.apply(this, [callback, orgFn.name].concat(args));\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\nexport function provided(condition) {\r\n    return function (target, propertyKey, descriptor) {\r\n        const orgFn = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            let result;\r\n            if (condition.apply(this, [orgFn.name].concat(args))) {\r\n                result = orgFn.apply(this, args);\r\n            }\r\n            return result;\r\n        };\r\n        return descriptor;\r\n    };\r\n}\r\n//# sourceMappingURL=Combinators.js.map","import * as Arr from \"./Arr\";\r\nimport * as Calc from \"./Calc\";\r\nimport * as Dom from \"./Dom\";\r\nimport { Global } from \"./Global\";\r\nimport * as MocData from \"./MocData\";\r\nimport * as Obj from \"./Obj\";\r\nimport { Initable } from \"./standard/mixins/Initable\";\r\nimport { Poolable } from \"./standard/mixins/Poolable\";\r\nimport { Pool } from \"./standard/Pool\";\r\nimport { Dictionary } from \"./struct/Dictionary\";\r\nimport { KeyValuePair } from \"./struct/KeyValuePair\";\r\nimport { List } from \"./struct/List\";\r\nimport { Range2 } from \"./struct/Range2\";\r\nimport { Rect } from \"./struct/Rect\";\r\nimport { Stack } from \"./struct/Stack\";\r\nimport { Tree } from \"./struct/Tree\";\r\nimport { Vec2 } from \"./struct/Vec2\";\r\nimport * as Test from \"./Test\";\r\nimport { Timer } from \"./Timer\";\r\nimport { Uri } from \"./Uri\";\r\nimport * as Util from \"./Util\";\r\nexport function integrate(alias) {\r\n    let stringAlias = false;\r\n    let objectAlias = false;\r\n    let list = [\r\n        { name: \"Arr\", object: Arr },\r\n        { name: \"Calc\", object: Calc },\r\n        { name: \"Dom\", object: Dom },\r\n        { name: \"MocData\", object: MocData },\r\n        { name: \"Obj\", object: Obj },\r\n        { name: \"Initable\", object: Initable },\r\n        { name: \"Poolable\", object: Poolable },\r\n        { name: \"Pool\", object: Pool },\r\n        { name: \"Dictionary\", object: Dictionary },\r\n        { name: \"KeyValuePair\", object: KeyValuePair },\r\n        { name: \"List\", object: List },\r\n        { name: \"Range2\", object: Range2 },\r\n        { name: \"Rect\", object: Rect },\r\n        { name: \"Stack\", object: Stack },\r\n        { name: \"Tree\", object: Tree },\r\n        { name: \"Vec2\", object: Vec2 },\r\n        { name: \"Test\", object: Test },\r\n        { name: \"Timer\", object: Timer },\r\n        { name: \"Uri\", object: Uri },\r\n        { name: \"Util\", object: Util },\r\n    ];\r\n    if (typeof (alias) === \"string\") {\r\n        Global.window[alias] = {};\r\n        stringAlias = true;\r\n    }\r\n    for (const stuff of list) {\r\n        if (stringAlias) {\r\n            Global.window[alias][stuff.name] = stuff.object;\r\n        }\r\n        else if (objectAlias) {\r\n            alias[stuff.name] = stuff.object;\r\n        }\r\n        else {\r\n            Global.window[stuff.name] = stuff.object;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Integration.js.map"],"names":["rotationRad","rotation","deg","CalcConst","DEGREE_FACTOR","ROTATION_DEGREE_PRECISION","this","rotationDeg","hasWindow","Global","window","hasConsole","undefined","console","isArray","it","Array","isFunction","Object","prototype","toString","call","isNumber","x","areNullOrUndefined","args","len","length","a","i","result","areNotNullOrUndefined","isNullOrUndefined","arg","isNotNullOrUndefined","areUndefined","isUndefined","isNotUndefined","wipe","obj","keys","setNull","constructor","clear","key","isClassOf","b","isSameClass","equals","isDifferent","clone","deepCopy","Date","getTime","RegExp","cloneInto","src","target","arrS","arrT","setProperties","values","mapping","value","flatten","flattenInner","push","reverse","array","left","right","temporary","concat","arrs","apply","slice","from","count","Infinity","Math","min","append","arr","index","offset","removeAt","indexOfElement","el","remove","indexOf","fn","shallowCopy","shallowCopyInto","deepCopyInto","filter","filterInto","j","space","map","mapInto","reduce","start","acc","reduceUntil","test","reverseReduce","reverseReduceUntil","forEach","startIndex","forSome","until","fnOrTest","isCombined","reverseForEach","reverseUntil","combined","some","all","insertAt","pos","v","unshift","binarySearch","cmp","closest","mid","element","lo","hi","val","newUUID","d","Timer","now","replace","c","r","random","floor","callDebugger","proxyFn","objOrClass","fnName","bind","toArray","setAttr","_el","attr","get","k","styles","styleKeys","style","setProperty","join","setAttribute","children","removeChild","id","DomState","_document","getElementById","body","is","selector","matches","msMatchesSelector","webkitMatchesSelector","parentElement","Error","querySelector","querySelectorAll","Poolable","Base","[object Object]","__pool__","release","pool","super","Initable","base","RADIAN_FACTOR","PI","DEG360","ROTATION_LOOKUP","lookup","cos","sin","NaN","radian","Vec2Const","EPSILON","IDENTITY","y","X_DIM","Y_DIM","Vec2","angle","horizontalAngle","direction","isZero","out","set","ceil","sqrt","lengthSq","atan2","rot","nx","ny","center","subtract","rotate","add","vectorB","scalar","abs","isNormalized","normalize","temp","coeff","max","Rect","stop","x1","y1","x2","y2","endInclusive","Range2","size","factor","keepCenter","ow","oh","w","h","system","scale","rect","toInt","toDecimal","vec","containsPoint","zero","org","multiply","toRect","translate","toRange2","s","t","intersect","p","begin","end","range","nativeWindow","win","_Global","_window","_nativeWindow","hasNativeWindow","nodeType","String","destroy","exclude","sources","hasOwnProperty","at","populator","Dictionary","_lookup","create","_list","List","_isDirty","has","cleanList","list","reCreateList","types","T","passthroughT","revive","newT","_array","_index","_indexer","Arr.shallowCopy","indexer","_reindex","Arr.insertAt","pop","delete","shift","arr2","Arr.concat","Arr.forEach","Arr.append","Arr.deepCopyInto","Arr.shallowCopyInto","Arr.deepCopy","Arr.remove","unindexEl","n","Arr.removeAt","Arr.forSome","Arr.until","Arr.reverseForEach","Arr.reverseUntil","Arr.some","Arr.all","Function","Arr.indexOf","Arr.indexOfElement","contains","Arr.reverse","first","Arr.filter","Arr.filterInto","sort","Arr.map","Arr.mapInto","Arr.reduce","Arr.reduceUntil","Arr.reverseReduce","Arr.reverseReduceUntil","long","short","u","tuple","maxDepth","_flattenInner","depth","copy","SortedList","comparer","_cmp","orderBy","getInsertIndex","removeFirst","find","last","selectInto","longPos","lastPos","shortLen","aVsB","bulkAdd","toList","union","Stack","DEFAULT_SIZE","_pos","_limit","fastPush","isEmpty","limit","limitedPush","limitObjects","TimerState","_hasPerformance","time","_time","performance","hrTime","process","hrtime","_start","_last","UtilState","_int","name","fnString","substring","lastIndexOf","log","warn","error","superfn","assertion","message","isDebug","Tree","parent","data","root","init","fromObject","nodes","mapcfg","mapResolver","node","stack","cur","condition","duplicateNode","select","toJSON","Sides","document","createElement","html","innerHTML","appendChild","parentNode","replaceChild","top","comp","getComputedStyle","Uri","_a","hash","pathName","port","hostName","protocol","origin","full","location","href","search","split","pathname","hostname","async","propertyKey","descriptor","orgFn","Promise","resolve","reject","err","before","decoration","callback","then","catch","reason","after","provided","async_predicate","Pool","cls","growthStep","_pool","_available","_size","_cls","_growthStep","available","initPool","MocDataType","VALID_CHARS","charAt","randomNumber","type","LinearInt","RandomInt","randomInt","LinearFloat","RandomFloat","arrayLength","stringLength","randomString","KeyValuePair","alias","stringAlias","object","Arr","Calc","Dom","MocData","Obj","Test","Util","stuff"],"mappings":"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"}